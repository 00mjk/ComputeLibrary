<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/runtime/NEON/functions/NEPixelWiseMultiplication.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_n_e_pixel_wise_multiplication_8cpp_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">NEPixelWiseMultiplication.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_n_e_pixel_wise_multiplication_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2016-2020 Arm Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_n_e_pixel_wise_multiplication_8h.xhtml">arm_compute/runtime/NEON/functions/NEPixelWiseMultiplication.h</a>&quot;</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_tensor_8h.xhtml">arm_compute/core/ITensor.h</a>&quot;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_n_e_pixel_wise_multiplication_kernel_8h.xhtml">src/core/NEON/kernels/NEPixelWiseMultiplicationKernel.h</a>&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_memory_support_8h.xhtml">support/MemorySupport.h</a>&quot;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &lt;utility&gt;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;{</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">namespace </span>experimental</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;{</div><div class="line"><a name="l00036"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1_n_e_pixel_wise_multiplication.xhtml#a6aa81e7e3c2990f897ffd630ee2f1f64">   36</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1experimental_1_1_n_e_pixel_wise_multiplication.xhtml#a6aa81e7e3c2990f897ffd630ee2f1f64">NEPixelWiseMultiplication::configure</a>(<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *input1, <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *input2, <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output, <span class="keywordtype">float</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4f12b7902ae53e3898b2ab779f962340">scale</a>, <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6f">ConvertPolicy</a> overflow_policy, <a class="code" href="namespacearm__compute.xhtml#add6426cbf2e057a195846d4ba09a50be">RoundingPolicy</a> rounding_policy,</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;                                          <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> &amp;act_info)</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;{</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(act_info);</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    <span class="keyword">auto</span> k = arm_compute::support::cpp14::make_unique&lt;NEPixelWiseMultiplicationKernel&gt;();</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    k-&gt;configure(input1, input2, output, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4f12b7902ae53e3898b2ab779f962340">scale</a>, overflow_policy, rounding_policy);</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    _kernel = std::move(k);</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;}</div><div class="line"><a name="l00044"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1_n_e_pixel_wise_multiplication.xhtml#ab8a2affed84fcb02163a828fd8a37bfd">   44</a></span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="classarm__compute_1_1experimental_1_1_n_e_pixel_wise_multiplication.xhtml#ab8a2affed84fcb02163a828fd8a37bfd">NEPixelWiseMultiplication::validate</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *input1, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *input2, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output, <span class="keywordtype">float</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4f12b7902ae53e3898b2ab779f962340">scale</a>, <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6f">ConvertPolicy</a> overflow_policy, <a class="code" href="namespacearm__compute.xhtml#add6426cbf2e057a195846d4ba09a50be">RoundingPolicy</a> rounding_policy,</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;                                           <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> &amp;act_info)</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;{</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(act_info.<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#af5a8385102f8f8dd6c5957eac08b04c2">enabled</a>());</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_n_e_pixel_wise_multiplication_kernel.xhtml#a705182fc799dce8ee017368eea0ca539">NEPixelWiseMultiplicationKernel::validate</a>(input1, input2, output, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4f12b7902ae53e3898b2ab779f962340">scale</a>, overflow_policy, rounding_policy);</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;}</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1_n_e_complex_pixel_wise_multiplication.xhtml#a4b92194f69443ecaa427cc36a51f055e">   51</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1experimental_1_1_n_e_complex_pixel_wise_multiplication.xhtml#a4b92194f69443ecaa427cc36a51f055e">NEComplexPixelWiseMultiplication::configure</a>(<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *input1, <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *input2, <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> &amp;act_info)</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;{</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(act_info);</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="keyword">auto</span> k = arm_compute::support::cpp14::make_unique&lt;NEComplexPixelWiseMultiplicationKernel&gt;();</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    k-&gt;configure(input1, input2, output);</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    _kernel = std::move(k);</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;}</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1_n_e_complex_pixel_wise_multiplication.xhtml#af26b2456f5c6fa0e1c8d69a13c74c6cb">   59</a></span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="classarm__compute_1_1experimental_1_1_n_e_complex_pixel_wise_multiplication.xhtml#af26b2456f5c6fa0e1c8d69a13c74c6cb">NEComplexPixelWiseMultiplication::validate</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *input1, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *input2, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> &amp;act_info)</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;{</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(act_info.<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#af5a8385102f8f8dd6c5957eac08b04c2">enabled</a>());</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_n_e_complex_pixel_wise_multiplication_kernel.xhtml#afe71126bef1735fe1613a6da30d2c0c4">NEComplexPixelWiseMultiplicationKernel::validate</a>(input1, input2, output);</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;}</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;} <span class="comment">// namespace experimental</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="keyword">struct </span>NEPixelWiseMultiplication::Impl</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;{</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a>                                           *src_0{ <span class="keyword">nullptr</span> };</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="keyword">const</span> ITensor                                           *src_1{ <span class="keyword">nullptr</span> };</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    ITensor                                                 *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>{ <span class="keyword">nullptr</span> };</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    std::unique_ptr&lt;experimental::NEPixelWiseMultiplication&gt; op{ <span class="keyword">nullptr</span> };</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;};</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_pixel_wise_multiplication.xhtml#a294b426b088766aa889f84fff4e811b3">   74</a></span>&#160;<a class="code" href="classarm__compute_1_1_n_e_pixel_wise_multiplication.xhtml#a294b426b088766aa889f84fff4e811b3">NEPixelWiseMultiplication::NEPixelWiseMultiplication</a>()</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    : _impl(support::cpp14::<a class="code" href="namespacearm__compute_1_1support_1_1cpp14.xhtml#a1d95a84d1a4610af6a128ad96c907e8b">make_unique</a>&lt;Impl&gt;())</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;{</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;}</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<a class="code" href="classarm__compute_1_1_n_e_pixel_wise_multiplication.xhtml#a294b426b088766aa889f84fff4e811b3">NEPixelWiseMultiplication::NEPixelWiseMultiplication</a>(<a class="code" href="classarm__compute_1_1_n_e_pixel_wise_multiplication.xhtml">NEPixelWiseMultiplication</a> &amp;&amp;) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<a class="code" href="classarm__compute_1_1_n_e_pixel_wise_multiplication.xhtml">NEPixelWiseMultiplication</a> &amp;<a class="code" href="classarm__compute_1_1_n_e_pixel_wise_multiplication.xhtml#a32c539060c9f8c7ae4170570bd286573">NEPixelWiseMultiplication::operator=</a>(<a class="code" href="classarm__compute_1_1_n_e_pixel_wise_multiplication.xhtml">NEPixelWiseMultiplication</a> &amp;&amp;) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<a class="code" href="classarm__compute_1_1_n_e_pixel_wise_multiplication.xhtml#a5496d7709b23e5828283be1b5f11a2b9">NEPixelWiseMultiplication::~NEPixelWiseMultiplication</a>()                                       = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_pixel_wise_multiplication.xhtml#ab8a2affed84fcb02163a828fd8a37bfd">   82</a></span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="classarm__compute_1_1_n_e_pixel_wise_multiplication.xhtml#ab8a2affed84fcb02163a828fd8a37bfd">NEPixelWiseMultiplication::validate</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *input1, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *input2, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output, <span class="keywordtype">float</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4f12b7902ae53e3898b2ab779f962340">scale</a>, <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6f">ConvertPolicy</a> overflow_policy, <a class="code" href="namespacearm__compute.xhtml#add6426cbf2e057a195846d4ba09a50be">RoundingPolicy</a> rounding_policy,</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;                                           <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> &amp;act_info)</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;{</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1experimental_1_1_n_e_pixel_wise_multiplication.xhtml#ab8a2affed84fcb02163a828fd8a37bfd">experimental::NEPixelWiseMultiplication::validate</a>(input1, input2, output, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4f12b7902ae53e3898b2ab779f962340">scale</a>, overflow_policy, rounding_policy, act_info);</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;}</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_pixel_wise_multiplication.xhtml#a48e1c0390758f580a42ce9672596209d">   88</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_n_e_pixel_wise_multiplication.xhtml#a48e1c0390758f580a42ce9672596209d">NEPixelWiseMultiplication::configure</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *input1, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *input2, <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *output, <span class="keywordtype">float</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4f12b7902ae53e3898b2ab779f962340">scale</a>, <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6f">ConvertPolicy</a> overflow_policy, <a class="code" href="namespacearm__compute.xhtml#add6426cbf2e057a195846d4ba09a50be">RoundingPolicy</a> rounding_policy,</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                                          <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> &amp;act_info)</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;{</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    _impl-&gt;src_0 = input1;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    _impl-&gt;src_1 = input2;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    _impl-&gt;dst   = output;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    _impl-&gt;op    = arm_compute::support::cpp14::make_unique&lt;experimental::NEPixelWiseMultiplication&gt;();</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    _impl-&gt;op-&gt;configure(input1-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), input2-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), output-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4f12b7902ae53e3898b2ab779f962340">scale</a>, overflow_policy, rounding_policy, act_info);</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;}</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div><div class="line"><a name="l00098"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_pixel_wise_multiplication.xhtml#ad1717410afd0be936c6213a63c8005fb">   98</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_n_e_pixel_wise_multiplication.xhtml#ad1717410afd0be936c6213a63c8005fb">NEPixelWiseMultiplication::run</a>()</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;{</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> pack;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    pack.<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml#a6d8078b635739e84400cf8240a2993e7">add_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">TensorType::ACL_SRC_0</a>, _impl-&gt;src_0);</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    pack.<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml#a6d8078b635739e84400cf8240a2993e7">add_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">TensorType::ACL_SRC_1</a>, _impl-&gt;src_1);</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    pack.<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml#a6d8078b635739e84400cf8240a2993e7">add_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">TensorType::ACL_DST</a>, _impl-&gt;dst);</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    _impl-&gt;op-&gt;run(pack);</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;}</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="keyword">struct </span>NEComplexPixelWiseMultiplication::Impl</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;{</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a>                                                        *src_0{ <span class="keyword">nullptr</span> };</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    ITensor                                                        *src_1{ <span class="keyword">nullptr</span> };</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    ITensor                                                        *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>{ <span class="keyword">nullptr</span> };</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    std::unique_ptr&lt;experimental::NEComplexPixelWiseMultiplication&gt; op{ <span class="keyword">nullptr</span> };</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;};</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div><div class="line"><a name="l00115"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_complex_pixel_wise_multiplication.xhtml#a9ad937c40c1ed5531d41b9c29a1e8ad8">  115</a></span>&#160;<a class="code" href="classarm__compute_1_1_n_e_complex_pixel_wise_multiplication.xhtml#a9ad937c40c1ed5531d41b9c29a1e8ad8">NEComplexPixelWiseMultiplication::NEComplexPixelWiseMultiplication</a>()</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    : _impl(support::cpp14::<a class="code" href="namespacearm__compute_1_1support_1_1cpp14.xhtml#a1d95a84d1a4610af6a128ad96c907e8b">make_unique</a>&lt;Impl&gt;())</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;{</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;}</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<a class="code" href="classarm__compute_1_1_n_e_complex_pixel_wise_multiplication.xhtml#a9ad937c40c1ed5531d41b9c29a1e8ad8">NEComplexPixelWiseMultiplication::NEComplexPixelWiseMultiplication</a>(<a class="code" href="classarm__compute_1_1_n_e_complex_pixel_wise_multiplication.xhtml">NEComplexPixelWiseMultiplication</a> &amp;&amp;) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<a class="code" href="classarm__compute_1_1_n_e_complex_pixel_wise_multiplication.xhtml">NEComplexPixelWiseMultiplication</a> &amp;<a class="code" href="classarm__compute_1_1_n_e_complex_pixel_wise_multiplication.xhtml#a1dbf8b98d8e14517a5f4baecf99a4fa7">NEComplexPixelWiseMultiplication::operator=</a>(<a class="code" href="classarm__compute_1_1_n_e_complex_pixel_wise_multiplication.xhtml">NEComplexPixelWiseMultiplication</a> &amp;&amp;) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<a class="code" href="classarm__compute_1_1_n_e_complex_pixel_wise_multiplication.xhtml#a90259654aa5ae88c0bdd8d00aae9c159">NEComplexPixelWiseMultiplication::~NEComplexPixelWiseMultiplication</a>()                                              = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div><div class="line"><a name="l00123"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_complex_pixel_wise_multiplication.xhtml#af26b2456f5c6fa0e1c8d69a13c74c6cb">  123</a></span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="classarm__compute_1_1_n_e_complex_pixel_wise_multiplication.xhtml#af26b2456f5c6fa0e1c8d69a13c74c6cb">NEComplexPixelWiseMultiplication::validate</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *input1, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *input2, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> &amp;act_info)</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;{</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1experimental_1_1_n_e_complex_pixel_wise_multiplication.xhtml#af26b2456f5c6fa0e1c8d69a13c74c6cb">experimental::NEComplexPixelWiseMultiplication::validate</a>(input1, input2, output, act_info);</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;}</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div><div class="line"><a name="l00128"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_complex_pixel_wise_multiplication.xhtml#abafff41f9b2ef82e8c99229c2717770f">  128</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_n_e_complex_pixel_wise_multiplication.xhtml#abafff41f9b2ef82e8c99229c2717770f">NEComplexPixelWiseMultiplication::configure</a>(<a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *input1, <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *input2, <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *output, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> &amp;act_info)</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;{</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    _impl-&gt;src_0 = input1;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    _impl-&gt;src_1 = input2;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    _impl-&gt;dst   = output;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    _impl-&gt;op    = arm_compute::support::cpp14::make_unique&lt;experimental::NEComplexPixelWiseMultiplication&gt;();</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    _impl-&gt;op-&gt;configure(input1-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), input2-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), output-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), act_info);</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;}</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div><div class="line"><a name="l00137"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_complex_pixel_wise_multiplication.xhtml#ad1717410afd0be936c6213a63c8005fb">  137</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_n_e_complex_pixel_wise_multiplication.xhtml#ad1717410afd0be936c6213a63c8005fb">NEComplexPixelWiseMultiplication::run</a>()</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;{</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> pack;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    pack.<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml#a6d8078b635739e84400cf8240a2993e7">add_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">TensorType::ACL_SRC_0</a>, _impl-&gt;src_0);</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    pack.<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml#a6d8078b635739e84400cf8240a2993e7">add_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">TensorType::ACL_SRC_1</a>, _impl-&gt;src_1);</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    pack.<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml#a6d8078b635739e84400cf8240a2993e7">add_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">TensorType::ACL_DST</a>, _impl-&gt;dst);</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    _impl-&gt;op-&gt;run(pack);</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;}</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;} <span class="comment">// namespace arm_compute</span></div><div class="ttc" id="classarm__compute_1_1_n_e_complex_pixel_wise_multiplication_xhtml_a90259654aa5ae88c0bdd8d00aae9c159"><div class="ttname"><a href="classarm__compute_1_1_n_e_complex_pixel_wise_multiplication.xhtml#a90259654aa5ae88c0bdd8d00aae9c159">arm_compute::NEComplexPixelWiseMultiplication::~NEComplexPixelWiseMultiplication</a></div><div class="ttdeci">~NEComplexPixelWiseMultiplication()</div><div class="ttdoc">Default Destructor.</div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_pixel_wise_multiplication_xhtml_a32c539060c9f8c7ae4170570bd286573"><div class="ttname"><a href="classarm__compute_1_1_n_e_pixel_wise_multiplication.xhtml#a32c539060c9f8c7ae4170570bd286573">arm_compute::NEPixelWiseMultiplication::operator=</a></div><div class="ttdeci">NEPixelWiseMultiplication &amp; operator=(const NEPixelWiseMultiplication &amp;)=delete</div><div class="ttdoc">Prevent instances of this class from being copied (As this class contains pointers)</div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_pixel_wise_multiplication_xhtml_ad1717410afd0be936c6213a63c8005fb"><div class="ttname"><a href="classarm__compute_1_1_n_e_pixel_wise_multiplication.xhtml#ad1717410afd0be936c6213a63c8005fb">arm_compute::NEPixelWiseMultiplication::run</a></div><div class="ttdeci">void run() override</div><div class="ttdoc">Run the kernels contained in the function.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_pixel_wise_multiplication_8cpp_source.xhtml#l00098">NEPixelWiseMultiplication.cpp:98</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_complex_pixel_wise_multiplication_xhtml_ad1717410afd0be936c6213a63c8005fb"><div class="ttname"><a href="classarm__compute_1_1_n_e_complex_pixel_wise_multiplication.xhtml#ad1717410afd0be936c6213a63c8005fb">arm_compute::NEComplexPixelWiseMultiplication::run</a></div><div class="ttdeci">void run() override</div><div class="ttdoc">Run the kernels contained in the function.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_pixel_wise_multiplication_8cpp_source.xhtml#l00137">NEPixelWiseMultiplication.cpp:137</a></div></div>
<div class="ttc" id="_i_tensor_8h_xhtml"><div class="ttname"><a href="_i_tensor_8h.xhtml">ITensor.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">arm_compute::ACL_DST</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00045">Types.h:45</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_pixel_wise_multiplication_xhtml_a294b426b088766aa889f84fff4e811b3"><div class="ttname"><a href="classarm__compute_1_1_n_e_pixel_wise_multiplication.xhtml#a294b426b088766aa889f84fff4e811b3">arm_compute::NEPixelWiseMultiplication::NEPixelWiseMultiplication</a></div><div class="ttdeci">NEPixelWiseMultiplication()</div><div class="ttdoc">Default Constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_pixel_wise_multiplication_8cpp_source.xhtml#l00074">NEPixelWiseMultiplication.cpp:74</a></div></div>
<div class="ttc" id="classarm__compute_1_1_activation_layer_info_xhtml_af5a8385102f8f8dd6c5957eac08b04c2"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml#af5a8385102f8f8dd6c5957eac08b04c2">arm_compute::ActivationLayerInfo::enabled</a></div><div class="ttdeci">bool enabled() const</div><div class="ttdoc">Check if initialised.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01591">Types.h:1591</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1_n_e_pixel_wise_multiplication_xhtml_ab8a2affed84fcb02163a828fd8a37bfd"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1_n_e_pixel_wise_multiplication.xhtml#ab8a2affed84fcb02163a828fd8a37bfd">arm_compute::experimental::NEPixelWiseMultiplication::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input1, const ITensorInfo *input2, const ITensorInfo *output, float scale, ConvertPolicy overflow_policy, RoundingPolicy rounding_policy, const ActivationLayerInfo &amp;act_info=ActivationLayerInfo())</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of NEPixelWiseMultiplicatio...</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_pixel_wise_multiplication_8cpp_source.xhtml#l00044">NEPixelWiseMultiplication.cpp:44</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a4f12b7902ae53e3898b2ab779f962340"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a4f12b7902ae53e3898b2ab779f962340">arm_compute::test::validation::scale</a></div><div class="ttdeci">NEScale scale</div><div class="ttdef"><b>Definition:</b> <a href="validation_2_n_e_o_n_2_scale_8cpp_source.xhtml#l00275">Scale.cpp:275</a></div></div>
<div class="ttc" id="_n_e_pixel_wise_multiplication_kernel_8h_xhtml"><div class="ttname"><a href="_n_e_pixel_wise_multiplication_kernel_8h.xhtml">NEPixelWiseMultiplicationKernel.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_complex_pixel_wise_multiplication_xhtml"><div class="ttname"><a href="classarm__compute_1_1_n_e_complex_pixel_wise_multiplication.xhtml">arm_compute::NEComplexPixelWiseMultiplication</a></div><div class="ttdoc">Basic function to run NEComplexPixelWiseMultiplicationKernel.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_pixel_wise_multiplication_8h_source.xhtml#l00215">NEPixelWiseMultiplication.h:215</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml">arm_compute::ITensorInfo</a></div><div class="ttdoc">Store the tensor's metadata.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_info_8h_source.xhtml#l00040">ITensorInfo.h:40</a></div></div>
<div class="ttc" id="_memory_support_8h_xhtml"><div class="ttname"><a href="_memory_support_8h.xhtml">MemorySupport.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_status_xhtml"><div class="ttname"><a href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a></div><div class="ttdoc">Status class.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00052">Error.h:52</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_complex_pixel_wise_multiplication_xhtml_af26b2456f5c6fa0e1c8d69a13c74c6cb"><div class="ttname"><a href="classarm__compute_1_1_n_e_complex_pixel_wise_multiplication.xhtml#af26b2456f5c6fa0e1c8d69a13c74c6cb">arm_compute::NEComplexPixelWiseMultiplication::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input1, const ITensorInfo *input2, const ITensorInfo *output, const ActivationLayerInfo &amp;act_info=ActivationLayerInfo())</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of NEComplexPixelWiseMultip...</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_pixel_wise_multiplication_8cpp_source.xhtml#l00123">NEPixelWiseMultiplication.cpp:123</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a206d6e247e0957ac3dee45d27756fc25"><div class="ttname"><a href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true, an error is returned.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00296">Error.h:296</a></div></div>
<div class="ttc" id="classarm__compute_1_1_activation_layer_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml">arm_compute::ActivationLayerInfo</a></div><div class="ttdoc">Activation Layer Information class.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01541">Types.h:1541</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_complex_pixel_wise_multiplication_kernel_xhtml_afe71126bef1735fe1613a6da30d2c0c4"><div class="ttname"><a href="classarm__compute_1_1_n_e_complex_pixel_wise_multiplication_kernel.xhtml#afe71126bef1735fe1613a6da30d2c0c4">arm_compute::NEComplexPixelWiseMultiplicationKernel::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input1, const ITensorInfo *input2, const ITensorInfo *output)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of NEComplexPixelWiseMultip...</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_pixel_wise_multiplication_kernel_8cpp_source.xhtml#l01658">NEPixelWiseMultiplicationKernel.cpp:1658</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml">arm_compute::ITensor</a></div><div class="ttdoc">Interface for NEON tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_8h_source.xhtml#l00036">ITensor.h:36</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2020 Arm Limited.</div><div class="ttdef"><b>Definition:</b> <a href="00__introduction_8dox_source.xhtml#l00024">00_introduction.dox:24</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1_n_e_complex_pixel_wise_multiplication_xhtml_a4b92194f69443ecaa427cc36a51f055e"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1_n_e_complex_pixel_wise_multiplication.xhtml#a4b92194f69443ecaa427cc36a51f055e">arm_compute::experimental::NEComplexPixelWiseMultiplication::configure</a></div><div class="ttdeci">void configure(ITensorInfo *input1, ITensorInfo *input2, ITensorInfo *output, const ActivationLayerInfo &amp;act_info=ActivationLayerInfo())</div><div class="ttdoc">Initialise the kernel's inputs, output.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_pixel_wise_multiplication_8cpp_source.xhtml#l00051">NEPixelWiseMultiplication.cpp:51</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1_n_e_pixel_wise_multiplication_xhtml_a6aa81e7e3c2990f897ffd630ee2f1f64"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1_n_e_pixel_wise_multiplication.xhtml#a6aa81e7e3c2990f897ffd630ee2f1f64">arm_compute::experimental::NEPixelWiseMultiplication::configure</a></div><div class="ttdeci">void configure(ITensorInfo *input1, ITensorInfo *input2, ITensorInfo *output, float scale, ConvertPolicy overflow_policy, RoundingPolicy rounding_policy, const ActivationLayerInfo &amp;act_info=ActivationLayerInfo())</div><div class="ttdoc">Initialise the kernel's inputs, output and convertion policy.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_pixel_wise_multiplication_8cpp_source.xhtml#l00036">NEPixelWiseMultiplication.cpp:36</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_pixel_wise_multiplication_kernel_xhtml_a705182fc799dce8ee017368eea0ca539"><div class="ttname"><a href="classarm__compute_1_1_n_e_pixel_wise_multiplication_kernel.xhtml#a705182fc799dce8ee017368eea0ca539">arm_compute::NEPixelWiseMultiplicationKernel::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input1, const ITensorInfo *input2, const ITensorInfo *output, float scale, ConvertPolicy overflow_policy, RoundingPolicy rounding_policy)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of NEPixelWiseMultiplicatio...</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_pixel_wise_multiplication_kernel_8cpp_source.xhtml#l01581">NEPixelWiseMultiplicationKernel.cpp:1581</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a6dc630a6ae9cc063b3924bcea8dee9d6"><div class="ttname"><a href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a></div><div class="ttdeci">#define ARM_COMPUTE_UNUSED(...)</div><div class="ttdoc">To avoid unused variables warnings.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00152">Error.h:152</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_pixel_wise_multiplication_xhtml_a48e1c0390758f580a42ce9672596209d"><div class="ttname"><a href="classarm__compute_1_1_n_e_pixel_wise_multiplication.xhtml#a48e1c0390758f580a42ce9672596209d">arm_compute::NEPixelWiseMultiplication::configure</a></div><div class="ttdeci">void configure(const ITensor *input1, const ITensor *input2, ITensor *output, float scale, ConvertPolicy overflow_policy, RoundingPolicy rounding_policy, const ActivationLayerInfo &amp;act_info=ActivationLayerInfo())</div><div class="ttdoc">Initialise the kernel's inputs, output and convertion policy.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_pixel_wise_multiplication_8cpp_source.xhtml#l00088">NEPixelWiseMultiplication.cpp:88</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_add6426cbf2e057a195846d4ba09a50be"><div class="ttname"><a href="namespacearm__compute.xhtml#add6426cbf2e057a195846d4ba09a50be">arm_compute::RoundingPolicy</a></div><div class="ttdeci">RoundingPolicy</div><div class="ttdoc">Rounding method.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_rounding_8h_source.xhtml#l00030">Rounding.h:30</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1support_1_1cpp14_xhtml_a1d95a84d1a4610af6a128ad96c907e8b"><div class="ttname"><a href="namespacearm__compute_1_1support_1_1cpp14.xhtml#a1d95a84d1a4610af6a128ad96c907e8b">arm_compute::support::cpp14::make_unique</a></div><div class="ttdeci">_Unique_if&lt; T &gt;::_Single_object make_unique(Args &amp;&amp;... args)</div><div class="ttdoc">Construct a single object and return a unique pointer to it.</div><div class="ttdef"><b>Definition:</b> <a href="_memory_support_8h_source.xhtml#l00088">MemorySupport.h:88</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_xhtml_a0e95dc1e53c361348314873b168ae237"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">arm_compute::ITensor::info</a></div><div class="ttdeci">virtual ITensorInfo * info() const =0</div><div class="ttdoc">Interface to be implemented by the child class to return the tensor's metadata.</div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_pixel_wise_multiplication_xhtml_a5496d7709b23e5828283be1b5f11a2b9"><div class="ttname"><a href="classarm__compute_1_1_n_e_pixel_wise_multiplication.xhtml#a5496d7709b23e5828283be1b5f11a2b9">arm_compute::NEPixelWiseMultiplication::~NEPixelWiseMultiplication</a></div><div class="ttdeci">~NEPixelWiseMultiplication()</div><div class="ttdoc">Default Destructor.</div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_adbf67dcee294e673cf796f1ed8aeb6a4"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">arm_compute::test::validation::dst</a></div><div class="ttdeci">auto dst</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00170">DFT.cpp:170</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_complex_pixel_wise_multiplication_xhtml_a9ad937c40c1ed5531d41b9c29a1e8ad8"><div class="ttname"><a href="classarm__compute_1_1_n_e_complex_pixel_wise_multiplication.xhtml#a9ad937c40c1ed5531d41b9c29a1e8ad8">arm_compute::NEComplexPixelWiseMultiplication::NEComplexPixelWiseMultiplication</a></div><div class="ttdeci">NEComplexPixelWiseMultiplication()</div><div class="ttdoc">Default Constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_pixel_wise_multiplication_8cpp_source.xhtml#l00115">NEPixelWiseMultiplication.cpp:115</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">arm_compute::ACL_SRC_0</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00042">Types.h:42</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">arm_compute::ACL_SRC_1</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00043">Types.h:43</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_pixel_wise_multiplication_xhtml_ab8a2affed84fcb02163a828fd8a37bfd"><div class="ttname"><a href="classarm__compute_1_1_n_e_pixel_wise_multiplication.xhtml#ab8a2affed84fcb02163a828fd8a37bfd">arm_compute::NEPixelWiseMultiplication::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input1, const ITensorInfo *input2, const ITensorInfo *output, float scale, ConvertPolicy overflow_policy, RoundingPolicy rounding_policy, const ActivationLayerInfo &amp;act_info=ActivationLayerInfo())</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of NEPixelWiseMultiplicatio...</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_pixel_wise_multiplication_8cpp_source.xhtml#l00082">NEPixelWiseMultiplication.cpp:82</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_pixel_wise_multiplication_xhtml"><div class="ttname"><a href="classarm__compute_1_1_n_e_pixel_wise_multiplication.xhtml">arm_compute::NEPixelWiseMultiplication</a></div><div class="ttdoc">Basic function to run NEPixelWiseMultiplicationKernel.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_pixel_wise_multiplication_8h_source.xhtml#l00136">NEPixelWiseMultiplication.h:136</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1_n_e_complex_pixel_wise_multiplication_xhtml_af26b2456f5c6fa0e1c8d69a13c74c6cb"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1_n_e_complex_pixel_wise_multiplication.xhtml#af26b2456f5c6fa0e1c8d69a13c74c6cb">arm_compute::experimental::NEComplexPixelWiseMultiplication::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input1, const ITensorInfo *input2, const ITensorInfo *output, const ActivationLayerInfo &amp;act_info=ActivationLayerInfo())</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of NEComplexPixelWiseMultip...</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_pixel_wise_multiplication_8cpp_source.xhtml#l00059">NEPixelWiseMultiplication.cpp:59</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_pack_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_pack.xhtml">arm_compute::ITensorPack</a></div><div class="ttdoc">Tensor packing service.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_pack_8h_source.xhtml#l00036">ITensorPack.h:36</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_complex_pixel_wise_multiplication_xhtml_a1dbf8b98d8e14517a5f4baecf99a4fa7"><div class="ttname"><a href="classarm__compute_1_1_n_e_complex_pixel_wise_multiplication.xhtml#a1dbf8b98d8e14517a5f4baecf99a4fa7">arm_compute::NEComplexPixelWiseMultiplication::operator=</a></div><div class="ttdeci">NEComplexPixelWiseMultiplication &amp; operator=(const NEComplexPixelWiseMultiplication &amp;)=delete</div><div class="ttdoc">Prevent instances of this class from being copied (As this class contains pointers)</div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_complex_pixel_wise_multiplication_xhtml_abafff41f9b2ef82e8c99229c2717770f"><div class="ttname"><a href="classarm__compute_1_1_n_e_complex_pixel_wise_multiplication.xhtml#abafff41f9b2ef82e8c99229c2717770f">arm_compute::NEComplexPixelWiseMultiplication::configure</a></div><div class="ttdeci">void configure(ITensor *input1, ITensor *input2, ITensor *output, const ActivationLayerInfo &amp;act_info=ActivationLayerInfo())</div><div class="ttdoc">Initialise the kernel's inputs, output.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_pixel_wise_multiplication_8cpp_source.xhtml#l00128">NEPixelWiseMultiplication.cpp:128</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a82b8ac759c804bc1fb4e2d21e178fb6f"><div class="ttname"><a href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6f">arm_compute::ConvertPolicy</a></div><div class="ttdeci">ConvertPolicy</div><div class="ttdoc">Policy to handle overflow.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00385">Types.h:385</a></div></div>
<div class="ttc" id="_n_e_pixel_wise_multiplication_8h_xhtml"><div class="ttname"><a href="_n_e_pixel_wise_multiplication_8h.xhtml">NEPixelWiseMultiplication.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_pack_xhtml_a6d8078b635739e84400cf8240a2993e7"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_pack.xhtml#a6d8078b635739e84400cf8240a2993e7">arm_compute::ITensorPack::add_tensor</a></div><div class="ttdeci">void add_tensor(int id, ITensor *tensor)</div><div class="ttdoc">Add tensor to the pack.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_pack_8cpp_source.xhtml#l00030">ITensorPack.cpp:30</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_bf9f26469d00835ba20ff8d80ee5a804.xhtml">runtime</a></li><li class="navelem"><a class="el" href="dir_a36523fc4c32a6b0076906589b6fc202.xhtml">NEON</a></li><li class="navelem"><a class="el" href="dir_4d03f28cfd35f8f734a3b0a2f1168d27.xhtml">functions</a></li><li class="navelem"><a class="el" href="_n_e_pixel_wise_multiplication_8cpp.xhtml">NEPixelWiseMultiplication.cpp</a></li>
    <li class="footer">Generated on Fri Nov 27 2020 13:50:40 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
