<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: ITensor Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1_i_tensor.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">ITensor Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p>Interface for NEON tensor.  
 <a href="classarm__compute_1_1_i_tensor.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_i_tensor_8h_source.xhtml">ITensor.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a0e95dc1e53c361348314873b168ae237"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a> () const =0</td></tr>
<tr class="memdesc:a0e95dc1e53c361348314873b168ae237"><td class="mdescLeft">&#160;</td><td class="mdescRight">Interface to be implemented by the child class to return the tensor's metadata.  <a href="#a0e95dc1e53c361348314873b168ae237">More...</a><br /></td></tr>
<tr class="separator:a0e95dc1e53c361348314873b168ae237"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e6b5e55a2914b1fb1966310e7733ac4"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml#a7e6b5e55a2914b1fb1966310e7733ac4">info</a> ()=0</td></tr>
<tr class="memdesc:a7e6b5e55a2914b1fb1966310e7733ac4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Interface to be implemented by the child class to return the tensor's metadata.  <a href="#a7e6b5e55a2914b1fb1966310e7733ac4">More...</a><br /></td></tr>
<tr class="separator:a7e6b5e55a2914b1fb1966310e7733ac4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4aa2df36743089ac6814d83e7d4b7ffc"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml#a4aa2df36743089ac6814d83e7d4b7ffc">~ITensor</a> ()=default</td></tr>
<tr class="memdesc:a4aa2df36743089ac6814d83e7d4b7ffc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default virtual destructor.  <a href="#a4aa2df36743089ac6814d83e7d4b7ffc">More...</a><br /></td></tr>
<tr class="separator:a4aa2df36743089ac6814d83e7d4b7ffc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab988210662dbd3bf32fd563c7dd1bdbf"><td class="memItemLeft" align="right" valign="top">virtual uint8_t *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml#ab988210662dbd3bf32fd563c7dd1bdbf">buffer</a> () const =0</td></tr>
<tr class="memdesc:ab988210662dbd3bf32fd563c7dd1bdbf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Interface to be implemented by the child class to return a pointer to CPU memory.  <a href="#ab988210662dbd3bf32fd563c7dd1bdbf">More...</a><br /></td></tr>
<tr class="separator:ab988210662dbd3bf32fd563c7dd1bdbf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adbd73147d41e8a640bc299d12613c31e"><td class="memItemLeft" align="right" valign="top">uint8_t *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml#adbd73147d41e8a640bc299d12613c31e">ptr_to_element</a> (const <a class="el" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> &amp;id) const</td></tr>
<tr class="memdesc:adbd73147d41e8a640bc299d12613c31e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return a pointer to the element at the passed coordinates.  <a href="#adbd73147d41e8a640bc299d12613c31e">More...</a><br /></td></tr>
<tr class="separator:adbd73147d41e8a640bc299d12613c31e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4a774ad8d5f4837f3d7de1876d367c5b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml#a4a774ad8d5f4837f3d7de1876d367c5b">copy_from</a> (const <a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> &amp;src)</td></tr>
<tr class="memdesc:a4a774ad8d5f4837f3d7de1876d367c5b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copy the content of another tensor.  <a href="#a4a774ad8d5f4837f3d7de1876d367c5b">More...</a><br /></td></tr>
<tr class="separator:a4a774ad8d5f4837f3d7de1876d367c5b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade74189c92e70baa2848986c10dbe7ef"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml#ade74189c92e70baa2848986c10dbe7ef">print</a> (std::ostream &amp;s, <a class="el" href="structarm__compute_1_1_i_o_format_info.xhtml">IOFormatInfo</a> io_fmt=<a class="el" href="structarm__compute_1_1_i_o_format_info.xhtml">IOFormatInfo</a>()) const</td></tr>
<tr class="memdesc:ade74189c92e70baa2848986c10dbe7ef"><td class="mdescLeft">&#160;</td><td class="mdescRight">Print a tensor to a given stream using user defined formatting information.  <a href="#ade74189c92e70baa2848986c10dbe7ef">More...</a><br /></td></tr>
<tr class="separator:ade74189c92e70baa2848986c10dbe7ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a209ea2ddfdfa80703799c92da8beb643"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml#a209ea2ddfdfa80703799c92da8beb643">is_used</a> () const</td></tr>
<tr class="memdesc:a209ea2ddfdfa80703799c92da8beb643"><td class="mdescLeft">&#160;</td><td class="mdescRight">Flags if the tensor is used or not.  <a href="#a209ea2ddfdfa80703799c92da8beb643">More...</a><br /></td></tr>
<tr class="separator:a209ea2ddfdfa80703799c92da8beb643"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9bc00234de9adf8c99a21eb1d7d494c2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml#a9bc00234de9adf8c99a21eb1d7d494c2">mark_as_unused</a> () const</td></tr>
<tr class="memdesc:a9bc00234de9adf8c99a21eb1d7d494c2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Marks a tensor as unused.  <a href="#a9bc00234de9adf8c99a21eb1d7d494c2">More...</a><br /></td></tr>
<tr class="separator:a9bc00234de9adf8c99a21eb1d7d494c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Interface for NEON tensor. </p>

<p class="definition">Definition at line <a class="el" href="_i_tensor_8h_source.xhtml#l00036">36</a> of file <a class="el" href="_i_tensor_8h_source.xhtml">ITensor.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a4aa2df36743089ac6814d83e7d4b7ffc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4aa2df36743089ac6814d83e7d4b7ffc">&#9670;&nbsp;</a></span>~ITensor()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual ~<a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default virtual destructor. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="ab988210662dbd3bf32fd563c7dd1bdbf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab988210662dbd3bf32fd563c7dd1bdbf">&#9670;&nbsp;</a></span>buffer()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual uint8_t* buffer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Interface to be implemented by the child class to return a pointer to CPU memory. </p>
<dl class="section return"><dt>Returns</dt><dd>A CPU pointer to the beginning of the image's allocation. </dd></dl>

<p>Implemented in <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml#a24954cca5108a24706441fd99a7fb04c">ICLTensor</a>, <a class="el" href="classarm__compute_1_1_g_c_tensor.xhtml#a24954cca5108a24706441fd99a7fb04c">GCTensor</a>, <a class="el" href="classarm__compute_1_1_i_g_c_tensor.xhtml#a24954cca5108a24706441fd99a7fb04c">IGCTensor</a>, <a class="el" href="classarm__compute_1_1_sub_tensor.xhtml#a24954cca5108a24706441fd99a7fb04c">SubTensor</a>, <a class="el" href="classarm__compute_1_1experimental_1_1_operator_tensor.xhtml#a24954cca5108a24706441fd99a7fb04c">OperatorTensor</a>, and <a class="el" href="classarm__compute_1_1_tensor.xhtml#a24954cca5108a24706441fd99a7fb04c">Tensor</a>.</p>

<p class="reference">Referenced by <a class="el" href="_sub_tensor_8cpp_source.xhtml#l00053">SubTensor::buffer()</a>, <a class="el" href="_accessor_8h_source.xhtml#l00134">Accessor::data()</a>, <a class="el" href="utils_2_utils_8cpp_source.xhtml#l00130">arm_compute::utils::draw_detection_rectangle()</a>, <a class="el" href="_helpers_8inl_source.xhtml#l00095">Iterator::Iterator()</a>, <a class="el" href="_n_e_depthwise_convolution_assembly_dispatch_8cpp_source.xhtml#l00545">NEDepthwiseConvolutionAssemblyDispatch::prepare()</a>, <a class="el" href="_i_tensor_8h_source.xhtml#l00063">ITensor::ptr_to_element()</a>, <a class="el" href="_c_p_p_upsample_kernel_8cpp_source.xhtml#l00063">CPPUpsampleKernel::run()</a>, <a class="el" href="_n_e_r_o_i_pooling_layer_kernel_8cpp_source.xhtml#l00089">NEROIPoolingLayerKernel::run()</a>, <a class="el" href="_n_e_reorg_layer_kernel_8cpp_source.xhtml#l00103">NEReorgLayerKernel::run()</a>, <a class="el" href="_n_e_direct_convolution_layer_kernel_8cpp_source.xhtml#l01293">NEDirectConvolutionLayerKernel::run()</a>, <a class="el" href="_n_e_canny_edge_8cpp_source.xhtml#l00170">NECannyEdge::run()</a>, <a class="el" href="_n_e_depthwise_convolution_assembly_dispatch_8cpp_source.xhtml#l00514">NEDepthwiseConvolutionAssemblyDispatch::run()</a>, and <a class="el" href="_n_e_reverse_kernel_8cpp_source.xhtml#l00088">arm_compute::run_reverse()</a>.</p>

</div>
</div>
<a id="a4a774ad8d5f4837f3d7de1876d367c5b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4a774ad8d5f4837f3d7de1876d367c5b">&#9670;&nbsp;</a></span>copy_from()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void copy_from </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> &amp;&#160;</td>
          <td class="paramname"><em>src</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Copy the content of another tensor. </p>
<dl class="section note"><dt>Note</dt><dd>The number of dimensions of the source tensor must be less or equal to those of the destination tensor.</dd>
<dd>
All dimensions of the destination tensor must be greater or equal to the source tensor ones.</dd>
<dd>
num_channels() and element_size() of both tensors must match.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">src</td><td>Source tensor to copy from. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_i_tensor_8cpp_source.xhtml#l00035">35</a> of file <a class="el" href="_i_tensor_8cpp_source.xhtml">ITensor.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;{</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    <span class="keywordflow">if</span>(&amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a> == <span class="keyword">this</span>)</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    {</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    }</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <span class="keyword">const</span> ITensorInfo *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a15541ee1af263ccf663a5dc23de9fb89">src_info</a> = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>.info();</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    ITensorInfo       *dst_info = this-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>();</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(src_info-&gt;num_dimensions() &gt; dst_info-&gt;num_dimensions());</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a15541ee1af263ccf663a5dc23de9fb89">src_info</a>-&gt;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a6f13b974eeb528acde66de8d9b3fd95c">num_channels</a>() != dst_info-&gt;num_channels());</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a15541ee1af263ccf663a5dc23de9fb89">src_info</a>-&gt;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a62b67b578f684c4d516843c9dea86a23">element_size</a>() != dst_info-&gt;element_size());</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keywordflow">for</span>(<span class="keywordtype">size_t</span> d = 0; d &lt; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a15541ee1af263ccf663a5dc23de9fb89">src_info</a>-&gt;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a13622133d9b41900a6a3e8f89e59a78b">num_dimensions</a>(); d++)</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    {</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a15541ee1af263ccf663a5dc23de9fb89">src_info</a>-&gt;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a8813441b655b97c00139c6a5a6390e97">dimension</a>(d) &gt; dst_info-&gt;dimension(d));</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    }</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="comment">// Copy information about valid region</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    dst_info-&gt;set_valid_region(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a15541ee1af263ccf663a5dc23de9fb89">src_info</a>-&gt;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a3c20d908342087484d883574d55dd482">valid_region</a>());</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    Window win_src;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    win_src.use_tensor_dimensions(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a15541ee1af263ccf663a5dc23de9fb89">src_info</a>-&gt;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a269b19ce3f357ac65f41f9951906e38e">tensor_shape</a>(), <a class="code" href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">Window::DimY</a>);</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    Window win_dst;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    win_dst.use_tensor_dimensions(dst_info-&gt;tensor_shape(), <a class="code" href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">Window::DimY</a>);</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    Iterator src_it(&amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, win_src);</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    Iterator dst_it(<span class="keyword">this</span>, win_dst);</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span> line_size = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a15541ee1af263ccf663a5dc23de9fb89">src_info</a>-&gt;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a62b67b578f684c4d516843c9dea86a23">element_size</a>() * <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a15541ee1af263ccf663a5dc23de9fb89">src_info</a>-&gt;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a8813441b655b97c00139c6a5a6390e97">dimension</a>(0);</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a5002bf7ec46d52971f9526e94172cfee">execute_window_loop</a>(</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        win_src, [&amp;](<span class="keyword">const</span> Coordinates &amp;)</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    {</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        memcpy(dst_it.ptr(), src_it.ptr(), line_size);</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    },</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    src_it, dst_it);</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_a3c20d908342087484d883574d55dd482"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a3c20d908342087484d883574d55dd482">arm_compute::TensorInfo::valid_region</a></div><div class="ttdeci">ValidRegion valid_region() const override</div><div class="ttdoc">Valid region of the tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00303">TensorInfo.h:303</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_a6f13b974eeb528acde66de8d9b3fd95c"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a6f13b974eeb528acde66de8d9b3fd95c">arm_compute::TensorInfo::num_channels</a></div><div class="ttdeci">size_t num_channels() const override</div><div class="ttdoc">The number of channels for each tensor element.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00257">TensorInfo.h:257</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_a8813441b655b97c00139c6a5a6390e97"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a8813441b655b97c00139c6a5a6390e97">arm_compute::TensorInfo::dimension</a></div><div class="ttdeci">size_t dimension(size_t index) const override</div><div class="ttdoc">Return the size of the requested dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00232">TensorInfo.h:232</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a70879f7be69f6738d9f76339725c9532"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">arm_compute::test::validation::src</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; src</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00155">DFT.cpp:155</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_a13622133d9b41900a6a3e8f89e59a78b"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a13622133d9b41900a6a3e8f89e59a78b">arm_compute::TensorInfo::num_dimensions</a></div><div class="ttdeci">size_t num_dimensions() const override</div><div class="ttdoc">The number of dimensions of the tensor (rank)</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00253">TensorInfo.h:253</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_xhtml_a0e95dc1e53c361348314873b168ae237"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">arm_compute::ITensor::info</a></div><div class="ttdeci">virtual ITensorInfo * info() const =0</div><div class="ttdoc">Interface to be implemented by the child class to return the tensor's metadata.</div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a15541ee1af263ccf663a5dc23de9fb89"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a15541ee1af263ccf663a5dc23de9fb89">arm_compute::test::validation::src_info</a></div><div class="ttdeci">TensorInfo src_info(src_shape, 1, data_type)</div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_ad2d402364fa822b0b7775081291eeca9"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">arm_compute::Window::DimY</a></div><div class="ttdeci">static constexpr size_t DimY</div><div class="ttdoc">Alias for dimension 1 also known as Y dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00045">Window.h:45</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a5002bf7ec46d52971f9526e94172cfee"><div class="ttname"><a href="namespacearm__compute.xhtml#a5002bf7ec46d52971f9526e94172cfee">arm_compute::execute_window_loop</a></div><div class="ttdeci">void execute_window_loop(const Window &amp;w, L &amp;&amp;lambda_function, Ts &amp;&amp;... iterators)</div><div class="ttdoc">Iterate through the passed window, automatically adjusting the iterators and calling the lambda_funct...</div><div class="ttdef"><b>Definition:</b> <a href="_helpers_8inl_source.xhtml#l00077">Helpers.inl:77</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_a269b19ce3f357ac65f41f9951906e38e"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a269b19ce3f357ac65f41f9951906e38e">arm_compute::TensorInfo::tensor_shape</a></div><div class="ttdeci">const TensorShape &amp; tensor_shape() const override</div><div class="ttdoc">Size for each dimension of the tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00261">TensorInfo.h:261</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_a62b67b578f684c4d516843c9dea86a23"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a62b67b578f684c4d516843c9dea86a23">arm_compute::TensorInfo::element_size</a></div><div class="ttdeci">size_t element_size() const override</div><div class="ttdoc">Element size in bytes calculated as data_size() * num_channels()</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00249">TensorInfo.h:249</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">ITensorInfo::dimension()</a>, <a class="el" href="_tensor_info_8h_source.xhtml#l00232">TensorInfo::dimension()</a>, <a class="el" href="_window_8h_source.xhtml#l00045">Window::DimY</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#aa459796b5489eca8a9160cb5dcf1a103">ITensorInfo::element_size()</a>, <a class="el" href="_tensor_info_8h_source.xhtml#l00249">TensorInfo::element_size()</a>, <a class="el" href="_helpers_8inl_source.xhtml#l00077">arm_compute::execute_window_loop()</a>, <a class="el" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">ITensor::info()</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#ad7829ae79223ab87f9da4c0bd7d229ba">ITensorInfo::num_channels()</a>, <a class="el" href="_tensor_info_8h_source.xhtml#l00257">TensorInfo::num_channels()</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a1f4e725b8e1ea36b30e09dc08ae6961d">ITensorInfo::num_dimensions()</a>, <a class="el" href="_tensor_info_8h_source.xhtml#l00253">TensorInfo::num_dimensions()</a>, <a class="el" href="_helpers_8inl_source.xhtml#l00139">Iterator::ptr()</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a9586081a29fceb532ab270bd843abee6">ITensorInfo::set_valid_region()</a>, <a class="el" href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00155">arm_compute::test::validation::src</a>, <a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a15541ee1af263ccf663a5dc23de9fb89">arm_compute::test::validation::src_info</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">ITensorInfo::tensor_shape()</a>, <a class="el" href="_tensor_info_8h_source.xhtml#l00261">TensorInfo::tensor_shape()</a>, <a class="el" href="_window_8inl_source.xhtml#l00276">Window::use_tensor_dimensions()</a>, and <a class="el" href="_tensor_info_8h_source.xhtml#l00303">TensorInfo::valid_region()</a>.</p>

</div>
</div>
<a id="a0e95dc1e53c361348314873b168ae237"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0e95dc1e53c361348314873b168ae237">&#9670;&nbsp;</a></span>info() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>* info </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Interface to be implemented by the child class to return the tensor's metadata. </p>
<dl class="section return"><dt>Returns</dt><dd>A pointer to the tensor's metadata. </dd></dl>

<p>Implemented in <a class="el" href="classarm__compute_1_1_c_l_sub_tensor.xhtml#a47d74e4e51f9b1a636c4831bd747a97c">CLSubTensor</a>, <a class="el" href="classarm__compute_1_1_g_c_tensor.xhtml#ad45f0c01a0713dfb6bd7232c7f396fc4">GCTensor</a>, <a class="el" href="classarm__compute_1_1_c_l_tensor.xhtml#ad45f0c01a0713dfb6bd7232c7f396fc4">CLTensor</a>, <a class="el" href="classarm__compute_1_1_sub_tensor.xhtml#a47d74e4e51f9b1a636c4831bd747a97c">SubTensor</a>, <a class="el" href="classarm__compute_1_1experimental_1_1_operator_tensor.xhtml#a47d74e4e51f9b1a636c4831bd747a97c">OperatorTensor</a>, and <a class="el" href="classarm__compute_1_1_tensor.xhtml#a47d74e4e51f9b1a636c4831bd747a97c">Tensor</a>.</p>

<p class="reference">Referenced by <a class="el" href="_graph_utils_8cpp_source.xhtml#l00206">NumPyAccessor::access_tensor()</a>, <a class="el" href="_graph_utils_8cpp_source.xhtml#l00258">ImageAccessor::access_tensor()</a>, <a class="el" href="_graph_utils_8cpp_source.xhtml#l00338">ValidationInputAccessor::access_tensor()</a>, <a class="el" href="_graph_utils_8cpp_source.xhtml#l00425">ValidationOutputAccessor::access_tensor()</a>, <a class="el" href="graph__validate__utils_8h_source.xhtml#l00363">VerifyAccessor&lt; D &gt;::access_tensor()</a>, <a class="el" href="_graph_utils_8cpp_source.xhtml#l00566">DetectionOutputAccessor::access_tensor()</a>, <a class="el" href="_graph_utils_8cpp_source.xhtml#l00639">TopNPredictionsAccessor::access_tensor()</a>, <a class="el" href="_graph_utils_8cpp_source.xhtml#l00691">RandomAccessor::access_tensor()</a>, <a class="el" href="_i_c_l_kernel_8cpp_source.xhtml#l00084">ICLKernel::add_tensor_argument()</a>, <a class="el" href="_c_l_comparison_kernel_8cpp_source.xhtml#l00222">CLComparisonKernel::border_size()</a>, <a class="el" href="_i_g_c_tensor_8cpp_source.xhtml#l00044">IGCTensor::clear()</a>, <a class="el" href="_i_c_l_tensor_8cpp_source.xhtml#l00046">ICLTensor::clear()</a>, <a class="el" href="utils_2_utils_8h_source.xhtml#l00799">arm_compute::utils::compare_tensor()</a>, <a class="el" href="_g_c_softmax_layer_kernel_8cpp_source.xhtml#l00045">GCLogits1DMaxKernel::configure()</a>, <a class="el" href="_g_c_scale_kernel_8cpp_source.xhtml#l00050">GCScaleKernel::configure()</a>, <a class="el" href="_g_c_transpose_kernel_8cpp_source.xhtml#l00043">GCTransposeKernel::configure()</a>, <a class="el" href="_c_l_integral_image_kernel_8cpp_source.xhtml#l00044">CLIntegralImageHorKernel::configure()</a>, <a class="el" href="_n_e_scale_8cpp_source.xhtml#l00105">NEScale::configure()</a>, <a class="el" href="_g_c_g_e_m_m_matrix_accumulate_biases_kernel_8cpp_source.xhtml#l00047">GCGEMMMatrixAccumulateBiasesKernel::configure()</a>, <a class="el" href="_c_l_median3x3_kernel_8cpp_source.xhtml#l00045">CLMedian3x3Kernel::configure()</a>, <a class="el" href="_c_l_erode_kernel_8cpp_source.xhtml#l00044">CLErodeKernel::configure()</a>, <a class="el" href="_c_l_gaussian3x3_kernel_8cpp_source.xhtml#l00047">CLGaussian3x3Kernel::configure()</a>, <a class="el" href="_c_l_transpose_kernel_8cpp_source.xhtml#l00114">CLTransposeKernel::configure()</a>, <a class="el" href="_c_l_warp_perspective_kernel_8cpp_source.xhtml#l00067">CLWarpPerspectiveKernel::configure()</a>, <a class="el" href="_c_l_dilate_kernel_8cpp_source.xhtml#l00044">CLDilateKernel::configure()</a>, <a class="el" href="_c_l_box3x3_kernel_8cpp_source.xhtml#l00047">CLBox3x3Kernel::configure()</a>, <a class="el" href="_c_l_non_maxima_suppression3x3_kernel_8cpp_source.xhtml#l00050">CLNonMaximaSuppression3x3Kernel::configure()</a>, <a class="el" href="_c_l_scale_kernel_8cpp_source.xhtml#l00173">CLScaleKernel::configure()</a>, <a class="el" href="_c_p_p_detection_output_layer_8cpp_source.xhtml#l00391">CPPDetectionOutputLayer::configure()</a>, <a class="el" href="_n_e_logical_8cpp_source.xhtml#l00049">NELogicalAnd::configure()</a>, <a class="el" href="_c_l_warp_affine_kernel_8cpp_source.xhtml#l00068">CLWarpAffineKernel::configure()</a>, <a class="el" href="_n_e_reshape_layer_8cpp_source.xhtml#l00071">NEReshapeLayer::configure()</a>, <a class="el" href="_n_e_dequantization_layer_kernel_8cpp_source.xhtml#l00370">NEDequantizationLayerKernel::configure()</a>, <a class="el" href="_n_e_floor_kernel_8cpp_source.xhtml#l00100">NEFloorKernel::configure()</a>, <a class="el" href="_i_c_l_simple_kernel_8cpp_source.xhtml#l00038">ICLSimpleKernel::configure()</a>, <a class="el" href="_n_e_integral_image_kernel_8cpp_source.xhtml#l00040">NEIntegralImageKernel::configure()</a>, <a class="el" href="_i_g_c_simple_kernel_8cpp_source.xhtml#l00039">IGCSimpleKernel::configure()</a>, <a class="el" href="_g_c_depthwise_convolution_layer3x3_kernel_8cpp_source.xhtml#l00054">GCDepthwiseConvolutionLayer3x3Kernel::configure()</a>, <a class="el" href="_g_c_pixel_wise_multiplication_kernel_8cpp_source.xhtml#l00050">GCPixelWiseMultiplicationKernel::configure()</a>, <a class="el" href="_n_e_dilate_kernel_8cpp_source.xhtml#l00043">NEDilateKernel::configure()</a>, <a class="el" href="_n_e_erode_kernel_8cpp_source.xhtml#l00043">NEErodeKernel::configure()</a>, <a class="el" href="_n_e_gaussian3x3_kernel_8cpp_source.xhtml#l00043">NEGaussian3x3Kernel::configure()</a>, <a class="el" href="_n_e_gaussian_pyramid_kernel_8cpp_source.xhtml#l00055">NEGaussianPyramidHorKernel::configure()</a>, <a class="el" href="_n_e_locally_connected_matrix_multiply_kernel_8cpp_source.xhtml#l00342">NELocallyConnectedMatrixMultiplyKernel::configure()</a>, <a class="el" href="_n_e_median3x3_kernel_8cpp_source.xhtml#l00056">NEMedian3x3Kernel::configure()</a>, <a class="el" href="_n_e_reverse_kernel_8cpp_source.xhtml#l00063">NEReverseKernel::configure()</a>, <a class="el" href="_n_e_softmax_layer_kernel_8cpp_source.xhtml#l00162">NELogits1DMaxKernel::configure()</a>, <a class="el" href="_n_e_tile_kernel_8cpp_source.xhtml#l00067">NETileKernel::configure()</a>, <a class="el" href="_g_c_fill_border_kernel_8cpp_source.xhtml#l00063">GCFillBorderKernel::configure()</a>, <a class="el" href="_g_c_g_e_m_m_matrix_addition_kernel_8cpp_source.xhtml#l00046">GCGEMMMatrixAdditionKernel::configure()</a>, <a class="el" href="_g_c_normalization_layer_kernel_8cpp_source.xhtml#l00052">GCNormalizationLayerKernel::configure()</a>, <a class="el" href="_g_c_pooling_layer_kernel_8cpp_source.xhtml#l00230">GCPoolingLayerKernel::configure()</a>, <a class="el" href="_n_e_batch_to_space_layer_kernel_8cpp_source.xhtml#l00088">NEBatchToSpaceLayerKernel::configure()</a>, <a class="el" href="_n_e_box3x3_kernel_8cpp_source.xhtml#l00122">NEBox3x3Kernel::configure()</a>, <a class="el" href="_n_e_channel_shuffle_layer_kernel_8cpp_source.xhtml#l00141">NEChannelShuffleLayerKernel::configure()</a>, <a class="el" href="_n_e_convert_quantized_signedness_kernel_8cpp_source.xhtml#l00077">NEConvertQuantizedSignednessKernel::configure()</a>, <a class="el" href="_n_e_copy_kernel_8cpp_source.xhtml#l00080">NECopyKernel::configure()</a>, <a class="el" href="_c_l_fill_border_kernel_8cpp_source.xhtml#l00062">CLFillBorderKernel::configure()</a>, <a class="el" href="_n_e_depth_to_space_layer_kernel_8cpp_source.xhtml#l00074">NEDepthToSpaceLayerKernel::configure()</a>, <a class="el" href="_n_e_gaussian5x5_kernel_8cpp_source.xhtml#l00052">NEGaussian5x5HorKernel::configure()</a>, <a class="el" href="_n_e_prior_box_layer_kernel_8cpp_source.xhtml#l00200">NEPriorBoxLayerKernel::configure()</a>, <a class="el" href="_n_e_space_to_depth_layer_kernel_8cpp_source.xhtml#l00077">NESpaceToDepthLayerKernel::configure()</a>, <a class="el" href="_g_c_absolute_difference_kernel_8cpp_source.xhtml#l00048">GCAbsoluteDifferenceKernel::configure()</a>, <a class="el" href="_n_e_table_lookup_kernel_8cpp_source.xhtml#l00109">NETableLookupKernel::configure()</a>, <a class="el" href="_g_c_normalize_planar_y_u_v_layer_kernel_8cpp_source.xhtml#l00096">GCNormalizePlanarYUVLayerKernel::configure()</a>, <a class="el" href="_g_c_concatenate_layer_8cpp_source.xhtml#l00045">GCConcatenateLayer::configure()</a>, <a class="el" href="_n_e_flatten_layer_kernel_8cpp_source.xhtml#l00081">NEFlattenLayerKernel::configure()</a>, <a class="el" href="_n_e_generate_proposals_layer_kernel_8cpp_source.xhtml#l00073">NEComputeAllAnchorsKernel::configure()</a>, <a class="el" href="_n_e_instance_normalization_layer_kernel_8cpp_source.xhtml#l00220">NEInstanceNormalizationLayerKernel::configure()</a>, <a class="el" href="_n_e_memset_kernel_8cpp_source.xhtml#l00042">NEMemsetKernel::configure()</a>, <a class="el" href="_n_e_reorg_layer_kernel_8cpp_source.xhtml#l00073">NEReorgLayerKernel::configure()</a>, <a class="el" href="_c_p_p_top_k_v_kernel_8cpp_source.xhtml#l00099">CPPTopKVKernel::configure()</a>, <a class="el" href="_n_e_threshold_kernel_8cpp_source.xhtml#l00077">NEThresholdKernel::configure()</a>, <a class="el" href="_n_e_upsample_layer_kernel_8cpp_source.xhtml#l00188">NEUpsampleLayerKernel::configure()</a>, <a class="el" href="_n_e_warp_kernel_8cpp_source.xhtml#l00070">INEWarpKernel::configure()</a>, <a class="el" href="_c_l_g_e_m_m_matrix_vector_multiply_kernel_8cpp_source.xhtml#l00088">CLGEMMMatrixVectorMultiplyKernel::configure()</a>, <a class="el" href="_c_l_comparison_8cpp_source.xhtml#l00039">CLComparison::configure()</a>, <a class="el" href="_g_c_arithmetic_addition_kernel_8cpp_source.xhtml#l00094">GCArithmeticAdditionKernel::configure()</a>, <a class="el" href="_g_c_g_e_m_m_transpose1x_w_kernel_8cpp_source.xhtml#l00044">GCGEMMTranspose1xWKernel::configure()</a>, <a class="el" href="_c_l_dequantization_layer_kernel_8cpp_source.xhtml#l00068">CLDequantizationLayerKernel::configure()</a>, <a class="el" href="_c_l_min_max_layer_kernel_8cpp_source.xhtml#l00095">CLMinMaxLayerKernel::configure()</a>, <a class="el" href="_c_l_floor_kernel_8cpp_source.xhtml#l00080">CLFloorKernel::configure()</a>, <a class="el" href="_n_e_f_f_t_scale_kernel_8cpp_source.xhtml#l00094">NEFFTScaleKernel::configure()</a>, <a class="el" href="_n_e_f_f_t_digit_reverse_kernel_8cpp_source.xhtml#l00077">NEFFTDigitReverseKernel::configure()</a>, <a class="el" href="_c_l_gaussian_pyramid_kernel_8cpp_source.xhtml#l00051">CLGaussianPyramidHorKernel::configure()</a>, <a class="el" href="_n_e_pooling_layer_kernel_8cpp_source.xhtml#l00451">NEPoolingLayerKernel::configure()</a>, <a class="el" href="_n_e_q_l_s_t_m_layer_normalization_kernel_8cpp_source.xhtml#l00084">NEQLSTMLayerNormalizationKernel::configure()</a>, <a class="el" href="_c_l_copy_kernel_8cpp_source.xhtml#l00072">CLCopyKernel::configure()</a>, <a class="el" href="_n_e_space_to_batch_layer_kernel_8cpp_source.xhtml#l00093">NESpaceToBatchLayerKernel::configure()</a>, <a class="el" href="_c_p_p_upsample_kernel_8cpp_source.xhtml#l00044">CPPUpsampleKernel::configure()</a>, <a class="el" href="_c_l_depthwise_convolution_layer_reshape_weights_kernel_8cpp_source.xhtml#l00093">CLDepthwiseConvolutionLayerReshapeWeightsKernel::configure()</a>, <a class="el" href="_n_e_elementwise_operators_8cpp_source.xhtml#l00148">NEElementwiseMax::configure()</a>, <a class="el" href="_n_e_bitwise_not_kernel_8cpp_source.xhtml#l00058">NEBitwiseNotKernel::configure()</a>, <a class="el" href="_c_l_max_unpooling_layer_kernel_8cpp_source.xhtml#l00080">CLMaxUnpoolingLayerKernel::configure()</a>, <a class="el" href="_n_e_color_convert_kernel_8cpp_source.xhtml#l00048">NEColorConvertKernel::configure()</a>, <a class="el" href="_c_l_channel_shuffle_layer_kernel_8cpp_source.xhtml#l00098">CLChannelShuffleLayerKernel::configure()</a>, <a class="el" href="_c_l_flatten_layer_kernel_8cpp_source.xhtml#l00067">CLFlattenLayerKernel::configure()</a>, <a class="el" href="_c_l_reverse_kernel_8cpp_source.xhtml#l00071">CLReverseKernel::configure()</a>, <a class="el" href="_n_e_h_o_g_descriptor_kernel_8cpp_source.xhtml#l00634">NEHOGOrientationBinningKernel::configure()</a>, <a class="el" href="_n_e_normalization_layer_kernel_8cpp_source.xhtml#l00073">NENormalizationLayerKernel::configure()</a>, <a class="el" href="_c_p_p_permute_kernel_8cpp_source.xhtml#l00102">CPPPermuteKernel::configure()</a>, <a class="el" href="_n_e_transpose_kernel_8cpp_source.xhtml#l00469">NETransposeKernel::configure()</a>, <a class="el" href="_n_e_y_o_l_o_layer_kernel_8cpp_source.xhtml#l00152">NEYOLOLayerKernel::configure()</a>, <a class="el" href="_g_c_activation_layer_kernel_8cpp_source.xhtml#l00049">GCActivationLayerKernel::configure()</a>, <a class="el" href="_g_c_batch_normalization_layer_kernel_8cpp_source.xhtml#l00141">GCBatchNormalizationLayerKernel::configure()</a>, <a class="el" href="_g_c_depth_concatenate_layer_kernel_8cpp_source.xhtml#l00046">GCDepthConcatenateLayerKernel::configure()</a>, <a class="el" href="_g_c_direct_convolution_layer_kernel_8cpp_source.xhtml#l00055">GCDirectConvolutionLayerKernel&lt; kernel_size &gt;::configure()</a>, <a class="el" href="_g_c_convolution_layer_8cpp_source.xhtml#l00044">GCConvolutionLayerReshapeWeights::configure()</a>, <a class="el" href="_n_e_bitwise_and_kernel_8cpp_source.xhtml#l00063">NEBitwiseAndKernel::configure()</a>, <a class="el" href="_n_e_bitwise_or_kernel_8cpp_source.xhtml#l00059">NEBitwiseOrKernel::configure()</a>, <a class="el" href="_n_e_bitwise_xor_kernel_8cpp_source.xhtml#l00059">NEBitwiseXorKernel::configure()</a>, <a class="el" href="_n_e_channel_extract_kernel_8cpp_source.xhtml#l00054">NEChannelExtractKernel::configure()</a>, <a class="el" href="_n_e_reduce_mean_8cpp_source.xhtml#l00113">NEReduceMean::configure()</a>, <a class="el" href="_n_e_derivative_kernel_8cpp_source.xhtml#l00056">NEDerivativeKernel::configure()</a>, <a class="el" href="_c_l_space_to_depth_layer_kernel_8cpp_source.xhtml#l00076">CLSpaceToDepthLayerKernel::configure()</a>, <a class="el" href="_n_e_quantization_layer_kernel_8cpp_source.xhtml#l00112">NEQuantizationLayerKernel::configure()</a>, <a class="el" href="_c_l_depth_to_space_layer_kernel_8cpp_source.xhtml#l00075">CLDepthToSpaceLayerKernel::configure()</a>, <a class="el" href="_c_l_element_wise_unary_layer_8cpp_source.xhtml#l00141">CLRsqrtLayer::configure()</a>, <a class="el" href="_c_l_reshape_layer_8cpp_source.xhtml#l00069">CLReshapeLayer::configure()</a>, <a class="el" href="_c_p_p_box_with_non_maxima_suppression_limit_8cpp_source.xhtml#l00133">CPPBoxWithNonMaximaSuppressionLimit::configure()</a>, <a class="el" href="_n_e_absolute_difference_kernel_8cpp_source.xhtml#l00129">NEAbsoluteDifferenceKernel::configure()</a>, <a class="el" href="_c_l_batch_to_space_layer_kernel_8cpp_source.xhtml#l00093">CLBatchToSpaceLayerKernel::configure()</a>, <a class="el" href="_n_e_accumulate_kernel_8cpp_source.xhtml#l00247">NEAccumulateKernel::configure()</a>, <a class="el" href="_n_e_r_n_n_layer_8cpp_source.xhtml#l00084">NERNNLayer::configure()</a>, <a class="el" href="_n_e_fast_corners_kernel_8cpp_source.xhtml#l00361">NEFastCornersKernel::configure()</a>, <a class="el" href="_n_e_magnitude_phase_kernel_8cpp_source.xhtml#l00252">NEMagnitudePhaseKernel&lt; mag_type, phase_type &gt;::configure()</a>, <a class="el" href="_n_e_max_unpooling_layer_kernel_8cpp_source.xhtml#l00076">NEMaxUnpoolingLayerKernel::configure()</a>, <a class="el" href="_n_e_min_max_location_kernel_8cpp_source.xhtml#l00051">NEMinMaxKernel::configure()</a>, <a class="el" href="_n_e_non_maxima_suppression3x3_kernel_8cpp_source.xhtml#l00464">NENonMaximaSuppression3x3Kernel::configure()</a>, <a class="el" href="_n_e_range_kernel_8cpp_source.xhtml#l00119">NERangeKernel::configure()</a>, <a class="el" href="_n_e_sobel5x5_kernel_8cpp_source.xhtml#l00052">NESobel5x5HorKernel::configure()</a>, <a class="el" href="_n_e_sobel7x7_kernel_8cpp_source.xhtml#l00155">NESobel7x7HorKernel::configure()</a>, <a class="el" href="_c_l_deconvolution_layer_upsample_kernel_8cpp_source.xhtml#l00075">CLDeconvolutionLayerUpsampleKernel::configure()</a>, <a class="el" href="_c_l_bitwise_and_kernel_8cpp_source.xhtml#l00044">CLBitwiseAndKernel::configure()</a>, <a class="el" href="_c_l_generate_proposals_layer_kernel_8cpp_source.xhtml#l00080">CLComputeAllAnchorsKernel::configure()</a>, <a class="el" href="_c_l_bitwise_or_kernel_8cpp_source.xhtml#l00045">CLBitwiseOrKernel::configure()</a>, <a class="el" href="_c_l_bitwise_xor_kernel_8cpp_source.xhtml#l00045">CLBitwiseXorKernel::configure()</a>, <a class="el" href="_c_l_locally_connected_matrix_multiply_kernel_8cpp_source.xhtml#l00079">CLLocallyConnectedMatrixMultiplyKernel::configure()</a>, <a class="el" href="_n_e_f_f_t2_d_8cpp_source.xhtml#l00042">NEFFT2D::configure()</a>, <a class="el" href="_c_l_memset_kernel_8cpp_source.xhtml#l00044">CLMemsetKernel::configure()</a>, <a class="el" href="_n_e_space_to_batch_layer_8cpp_source.xhtml#l00045">NESpaceToBatchLayer::configure()</a>, <a class="el" href="_c_l_non_linear_filter_kernel_8cpp_source.xhtml#l00062">CLNonLinearFilterKernel::configure()</a>, <a class="el" href="_c_l_normalization_layer_kernel_8cpp_source.xhtml#l00116">CLNormalizationLayerKernel::configure()</a>, <a class="el" href="_n_e_elementwise_unary_kernel_8cpp_source.xhtml#l00125">NEElementwiseUnaryKernel::configure()</a>, <a class="el" href="_c_l_q_l_s_t_m_layer_normalization_kernel_8cpp_source.xhtml#l00088">CLQLSTMLayerNormalizationKernel::configure()</a>, <a class="el" href="_c_l_f_f_t_scale_kernel_8cpp_source.xhtml#l00084">CLFFTScaleKernel::configure()</a>, <a class="el" href="_n_e_f_f_t_radix_stage_kernel_8cpp_source.xhtml#l00986">NEFFTRadixStageKernel::configure()</a>, <a class="el" href="_c_l_gather_kernel_8cpp_source.xhtml#l00086">CLGatherKernel::configure()</a>, <a class="el" href="_n_e_mean_std_dev_normalization_kernel_8cpp_source.xhtml#l00156">NEMeanStdDevNormalizationKernel::configure()</a>, <a class="el" href="_n_e_non_linear_filter_kernel_8cpp_source.xhtml#l00355">NENonLinearFilterKernel::configure()</a>, <a class="el" href="_c_l_upsample_layer_kernel_8cpp_source.xhtml#l00079">CLUpsampleLayerKernel::configure()</a>, <a class="el" href="_c_l_space_to_batch_layer_kernel_8cpp_source.xhtml#l00094">CLSpaceToBatchLayerKernel::configure()</a>, <a class="el" href="_n_e_permute_kernel_8cpp_source.xhtml#l00244">NEPermuteKernel::configure()</a>, <a class="el" href="_c_p_p_box_with_non_maxima_suppression_limit_kernel_8cpp_source.xhtml#l00349">CPPBoxWithNonMaximaSuppressionLimitKernel::configure()</a>, <a class="el" href="_g_c_dropout_layer_kernel_8cpp_source.xhtml#l00050">GCDropoutLayerKernel::configure()</a>, <a class="el" href="_c_l_reduce_mean_8cpp_source.xhtml#l00112">CLReduceMean::configure()</a>, <a class="el" href="_g_c_softmax_layer_kernel_8cpp_source.xhtml#l00110">GCLogits1DShiftExpSumKernel::configure()</a>, <a class="el" href="_c_l_canny_edge_kernel_8cpp_source.xhtml#l00047">CLGradientKernel::configure()</a>, <a class="el" href="_n_e_bounding_box_transform_kernel_8cpp_source.xhtml#l00088">NEBoundingBoxTransformKernel::configure()</a>, <a class="el" href="_n_e_canny_edge_kernel_8cpp_source.xhtml#l00875">NEGradientKernel::configure()</a>, <a class="el" href="_n_e_reduction_operation_8cpp_source.xhtml#l00105">NEReductionOperation::configure()</a>, <a class="el" href="_n_e_fill_border_kernel_8cpp_source.xhtml#l00100">NEFillBorderKernel::configure()</a>, <a class="el" href="_c_l_comparison_kernel_8cpp_source.xhtml#l00116">CLComparisonKernel::configure()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_quantize_down_int32_scale_by_fixed_point_kernel_8cpp_source.xhtml#l00080">CLGEMMLowpQuantizeDownInt32ScaleByFixedPointKernel::configure()</a>, <a class="el" href="_n_e_min_max_layer_kernel_8cpp_source.xhtml#l00096">NEMinMaxLayerKernel::configure()</a>, <a class="el" href="_c_l_tile_kernel_8cpp_source.xhtml#l00067">CLTileKernel::configure()</a>, <a class="el" href="_n_e_pad_layer_kernel_8cpp_source.xhtml#l00186">NEPadLayerKernel::configure()</a>, <a class="el" href="_n_e_scale_kernel_8cpp_source.xhtml#l00107">NEScaleKernel::configure()</a>, <a class="el" href="_n_e_stack_layer_kernel_8cpp_source.xhtml#l00092">NEStackLayerKernel::configure()</a>, <a class="el" href="_g_c_g_e_m_m_matrix_multiply_kernel_8cpp_source.xhtml#l00188">GCGEMMMatrixMultiplyKernel::configure()</a>, <a class="el" href="_n_e_channel_combine_kernel_8cpp_source.xhtml#l00054">NEChannelCombineKernel::configure()</a>, <a class="el" href="_n_e_convert_fully_connected_weights_kernel_8cpp_source.xhtml#l00038">NEConvertFullyConnectedWeightsKernel::configure()</a>, <a class="el" href="_c_l_f_f_t_digit_reverse_kernel_8cpp_source.xhtml#l00081">CLFFTDigitReverseKernel::configure()</a>, <a class="el" href="_c_l_channel_extract_kernel_8cpp_source.xhtml#l00054">CLChannelExtractKernel::configure()</a>, <a class="el" href="_c_l_permute_kernel_8cpp_source.xhtml#l00076">CLPermuteKernel::configure()</a>, <a class="el" href="_n_e_direct_convolution_layer_kernel_8cpp_source.xhtml#l01232">NEDirectConvolutionLayerKernel::configure()</a>, <a class="el" href="_n_e_direct_convolution_layer_output_stage_kernel_8cpp_source.xhtml#l00385">NEDirectConvolutionLayerOutputStageKernel::configure()</a>, <a class="el" href="_c_l_quantization_layer_kernel_8cpp_source.xhtml#l00067">CLQuantizationLayerKernel::configure()</a>, <a class="el" href="_c_l_remap_kernel_8cpp_source.xhtml#l00054">CLRemapKernel::configure()</a>, <a class="el" href="_n_e_gather_kernel_8cpp_source.xhtml#l00135">NEGatherKernel::configure()</a>, <a class="el" href="_c_l_reorg_layer_kernel_8cpp_source.xhtml#l00078">CLReorgLayerKernel::configure()</a>, <a class="el" href="_n_e_g_e_m_m_matrix_addition_kernel_8cpp_source.xhtml#l00118">NEGEMMMatrixAdditionKernel::configure()</a>, <a class="el" href="_c_l_absolute_difference_kernel_8cpp_source.xhtml#l00049">CLAbsoluteDifferenceKernel::configure()</a>, <a class="el" href="_n_e_reduction_operation_kernel_8cpp_source.xhtml#l01660">NEReductionOperationKernel::configure()</a>, <a class="el" href="_n_e_select_kernel_8cpp_source.xhtml#l00169">NESelectKernel::configure()</a>, <a class="el" href="_c_p_p_non_maximum_suppression_kernel_8cpp_source.xhtml#l00062">CPPNonMaximumSuppressionKernel::configure()</a>, <a class="el" href="_c_l_h_o_g_descriptor_kernel_8cpp_source.xhtml#l00052">CLHOGOrientationBinningKernel::configure()</a>, <a class="el" href="_c_p_p_detection_post_process_layer_8cpp_source.xhtml#l00216">CPPDetectionPostProcessLayer::configure()</a>, <a class="el" href="_n_e_depthwise_convolution_assembly_dispatch_8cpp_source.xhtml#l00349">NEDepthwiseConvolutionAssemblyDispatch::configure()</a>, <a class="el" href="_n_e_depthwise_convolution_layer_8cpp_source.xhtml#l00346">NEDepthwiseConvolutionLayer::configure()</a>, <a class="el" href="_n_e_fuse_batch_normalization_kernel_8cpp_source.xhtml#l00422">NEFuseBatchNormalizationKernel::configure()</a>, <a class="el" href="_c_l_sobel3x3_kernel_8cpp_source.xhtml#l00054">CLSobel3x3Kernel::configure()</a>, <a class="el" href="_n_e_g_e_m_m_matrix_multiply_kernel_8cpp_source.xhtml#l01093">NEGEMMMatrixMultiplyKernel::configure()</a>, <a class="el" href="_n_e_r_o_i_pooling_layer_kernel_8cpp_source.xhtml#l00043">NEROIPoolingLayerKernel::configure()</a>, <a class="el" href="_c_l_deconvolution_layer_8cpp_source.xhtml#l00051">CLDeconvolutionLayer::configure()</a>, <a class="el" href="_c_l_instance_normalization_layer_kernel_8cpp_source.xhtml#l00084">CLInstanceNormalizationLayerKernel::configure()</a>, <a class="el" href="_n_e_crop_resize_8cpp_source.xhtml#l00059">NECropResize::configure()</a>, <a class="el" href="_c_l_derivative_kernel_8cpp_source.xhtml#l00054">CLDerivativeKernel::configure()</a>, <a class="el" href="_c_l_mean_std_dev_normalization_kernel_8cpp_source.xhtml#l00090">CLMeanStdDevNormalizationKernel::configure()</a>, <a class="el" href="_n_e_crop_kernel_8cpp_source.xhtml#l00243">NECropKernel::configure()</a>, <a class="el" href="_c_l_normalize_planar_y_u_v_layer_kernel_8cpp_source.xhtml#l00104">CLNormalizePlanarYUVLayerKernel::configure()</a>, <a class="el" href="_c_l_pooling_layer_kernel_8cpp_source.xhtml#l00215">CLPoolingLayerKernel::configure()</a>, <a class="el" href="_c_l_range_kernel_8cpp_source.xhtml#l00101">CLRangeKernel::configure()</a>, <a class="el" href="_c_l_color_convert_kernel_8cpp_source.xhtml#l00052">CLColorConvertKernel::configure()</a>, <a class="el" href="_c_l_sobel7x7_kernel_8cpp_source.xhtml#l00054">CLSobel7x7HorKernel::configure()</a>, <a class="el" href="_c_l_sobel5x5_kernel_8cpp_source.xhtml#l00054">CLSobel5x5HorKernel::configure()</a>, <a class="el" href="_c_l_softmax_layer_kernel_8cpp_source.xhtml#l00163">CLLogits1DMaxShiftExpSumKernel::configure()</a>, <a class="el" href="_n_e_r_o_i_align_layer_kernel_8cpp_source.xhtml#l00084">NEROIAlignLayerKernel::configure()</a>, <a class="el" href="_g_c_g_e_m_m_interleave4x4_kernel_8cpp_source.xhtml#l00047">GCGEMMInterleave4x4Kernel::configure()</a>, <a class="el" href="_n_e_batch_normalization_layer_kernel_8cpp_source.xhtml#l00372">NEBatchNormalizationLayerKernel::configure()</a>, <a class="el" href="_c_l_pad_layer_kernel_8cpp_source.xhtml#l00107">CLPadLayerKernel::configure()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_matrix_multiply_kernel_8cpp_source.xhtml#l00903">NEGEMMLowpMatrixMultiplyKernel::configure()</a>, <a class="el" href="_c_l_select_kernel_8cpp_source.xhtml#l00111">CLSelectKernel::configure()</a>, <a class="el" href="_n_e_detection_post_process_layer_8cpp_source.xhtml#l00041">NEDetectionPostProcessLayer::configure()</a>, <a class="el" href="_g_c_direct_convolution_layer_8cpp_source.xhtml#l00042">GCDirectConvolutionLayer::configure()</a>, <a class="el" href="_n_e_f_f_t1_d_8cpp_source.xhtml#l00044">NEFFT1D::configure()</a>, <a class="el" href="_c_l_f_f_t_radix_stage_kernel_8cpp_source.xhtml#l00091">CLFFTRadixStageKernel::configure()</a>, <a class="el" href="_c_l_channel_combine_kernel_8cpp_source.xhtml#l00057">CLChannelCombineKernel::configure()</a>, <a class="el" href="_c_l_prior_box_layer_kernel_8cpp_source.xhtml#l00109">CLPriorBoxLayerKernel::configure()</a>, <a class="el" href="_c_l_reduction_operation_kernel_8cpp_source.xhtml#l00136">CLReductionOperationKernel::configure()</a>, <a class="el" href="_c_l_convert_fully_connected_weights_kernel_8cpp_source.xhtml#l00048">CLConvertFullyConnectedWeightsKernel::configure()</a>, <a class="el" href="_n_e_scharr3x3_kernel_8cpp_source.xhtml#l00092">NEScharr3x3Kernel::configure()</a>, <a class="el" href="_n_e_sobel3x3_kernel_8cpp_source.xhtml#l00050">NESobel3x3Kernel::configure()</a>, <a class="el" href="_c_l_f_f_t2_d_8cpp_source.xhtml#l00047">CLFFT2D::configure()</a>, <a class="el" href="_g_c_tensor_shift_kernel_8cpp_source.xhtml#l00047">GCTensorShiftKernel::configure()</a>, <a class="el" href="_c_l_l2_normalize_layer_kernel_8cpp_source.xhtml#l00104">CLL2NormalizeLayerKernel::configure()</a>, <a class="el" href="_n_e_depth_convert_layer_kernel_8cpp_source.xhtml#l00110">NEDepthConvertLayerKernel::configure()</a>, <a class="el" href="_c_l_crop_kernel_8cpp_source.xhtml#l00050">CLCropKernel::configure()</a>, <a class="el" href="_c_l_bounding_box_transform_kernel_8cpp_source.xhtml#l00097">CLBoundingBoxTransformKernel::configure()</a>, <a class="el" href="_c_l_r_n_n_layer_8cpp_source.xhtml#l00093">CLRNNLayer::configure()</a>, <a class="el" href="_n_e_g_e_m_m_convolution_layer_8cpp_source.xhtml#l00061">NEConvolutionLayerReshapeWeights::configure()</a>, <a class="el" href="_n_e_depthwise_convolution_layer_native_kernel_8cpp_source.xhtml#l00637">NEDepthwiseConvolutionLayerNativeKernel::configure()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_quantize_down_int32_scale_kernel_8cpp_source.xhtml#l00263">NEGEMMLowpQuantizeDownInt32ScaleKernel::configure()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_matrix_multiply_native_kernel_8cpp_source.xhtml#l00167">CLGEMMLowpMatrixMultiplyNativeKernel::configure()</a>, <a class="el" href="_c_l_magnitude_phase_kernel_8cpp_source.xhtml#l00052">CLMagnitudePhaseKernel::configure()</a>, <a class="el" href="_n_e_g_e_m_m_interleave4x4_kernel_8cpp_source.xhtml#l00073">NEGEMMInterleave4x4Kernel::configure()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_offset_contribution_kernel_8cpp_source.xhtml#l00363">NEGEMMLowpOffsetContributionKernel::configure()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_quantize_down_int32_to_int16_scale_by_fixed_point_kernel_8cpp_source.xhtml#l00196">NEGEMMLowpQuantizeDownInt32ToInt16ScaleByFixedPointKernel::configure()</a>, <a class="el" href="_c_l_y_o_l_o_layer_kernel_8cpp_source.xhtml#l00110">CLYOLOLayerKernel::configure()</a>, <a class="el" href="_c_l_f_f_t1_d_8cpp_source.xhtml#l00056">CLFFT1D::configure()</a>, <a class="el" href="_n_e_g_e_m_m_conv2d_8cpp_source.xhtml#l00085">NEGEMMConv2d::configure()</a>, <a class="el" href="_n_e_pad_layer_8cpp_source.xhtml#l00169">NEPadLayer::configure()</a>, <a class="el" href="_c_l_stack_layer_kernel_8cpp_source.xhtml#l00086">CLStackLayerKernel::configure()</a>, <a class="el" href="_c_l_deconvolution_layer_upsample_8cpp_source.xhtml#l00055">CLDeconvolutionLayerUpsample::configure()</a>, <a class="el" href="_c_l_space_to_batch_layer_8cpp_source.xhtml#l00052">CLSpaceToBatchLayer::configure()</a>, <a class="el" href="_c_l_integral_image_kernel_8cpp_source.xhtml#l00095">CLIntegralImageVertKernel::configure()</a>, <a class="el" href="_c_l_fast_corners_kernel_8cpp_source.xhtml#l00054">CLFastCornersKernel::configure()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_quantize_down_int32_to_int8_scale_by_fixed_point_kernel_8cpp_source.xhtml#l00204">NEGEMMLowpQuantizeDownInt32ToInt8ScaleByFixedPointKernel::configure()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_quantize_down_int32_to_uint8_scale_by_fixed_point_kernel_8cpp_source.xhtml#l00206">NEGEMMLowpQuantizeDownInt32ToUint8ScaleByFixedPointKernel::configure()</a>, <a class="el" href="_c_l_depth_convert_layer_kernel_8cpp_source.xhtml#l00081">CLDepthConvertLayerKernel::configure()</a>, <a class="el" href="_c_l_g_e_m_m_reshape_l_h_s_matrix_kernel_8cpp_source.xhtml#l00121">CLGEMMReshapeLHSMatrixKernel::configure()</a>, <a class="el" href="_c_l_depthwise_convolution_layer3x3_n_c_h_w_kernel_8cpp_source.xhtml#l00252">CLDepthwiseConvolutionLayer3x3NCHWKernel::configure()</a>, <a class="el" href="_n_e_locally_connected_layer_8cpp_source.xhtml#l00129">NELocallyConnectedLayer::configure()</a>, <a class="el" href="_c_l_arg_min_max_layer_kernel_8cpp_source.xhtml#l00123">CLArgMinMaxLayerKernel::configure()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_quantize_down_int32_scale_kernel_8cpp_source.xhtml#l00084">CLGEMMLowpQuantizeDownInt32ScaleKernel::configure()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_quantize_down_int32_scale_by_float_kernel_8cpp_source.xhtml#l00090">CLGEMMLowpQuantizeDownInt32ScaleByFloatKernel::configure()</a>, <a class="el" href="_c_l_depthwise_convolution_layer3x3_n_h_w_c_kernel_8cpp_source.xhtml#l00202">CLDepthwiseConvolutionLayer3x3NHWCKernel::configure()</a>, <a class="el" href="_g_c_weights_reshape_kernel_8cpp_source.xhtml#l00049">GCWeightsReshapeKernel::configure()</a>, <a class="el" href="_c_l_r_o_i_pooling_layer_kernel_8cpp_source.xhtml#l00080">CLROIPoolingLayerKernel::configure()</a>, <a class="el" href="_n_e_col2_im_kernel_8cpp_source.xhtml#l00109">NECol2ImKernel::configure()</a>, <a class="el" href="_g_c_col2_im_kernel_8cpp_source.xhtml#l00047">GCCol2ImKernel::configure()</a>, <a class="el" href="_g_c_g_e_m_m_8cpp_source.xhtml#l00081">GCGEMM::configure()</a>, <a class="el" href="_n_e_winograd_convolution_layer_8cpp_source.xhtml#l00311">NEWinogradConvolutionLayer::configure()</a>, <a class="el" href="_g_c_im2_col_kernel_8cpp_source.xhtml#l00069">GCIm2ColKernel::configure()</a>, <a class="el" href="_c_l_pad_layer_8cpp_source.xhtml#l00045">CLPadLayer::configure()</a>, <a class="el" href="_n_e_convolution_kernel_8cpp_source.xhtml#l00326">NEConvolutionKernel&lt; matrix_size &gt;::configure()</a>, <a class="el" href="_n_e_softmax_layer_8cpp_source.xhtml#l00048">NESoftmaxLayerGeneric&lt; IS_LOG &gt;::configure()</a>, <a class="el" href="_c_l_r_o_i_align_layer_kernel_8cpp_source.xhtml#l00112">CLROIAlignLayerKernel::configure()</a>, <a class="el" href="_c_l_arg_min_max_layer_8cpp_source.xhtml#l00120">CLArgMinMaxLayer::configure()</a>, <a class="el" href="_c_l_deconvolution_reshape_output_kernel_8cpp_source.xhtml#l00124">CLDeconvolutionReshapeOutputKernel::configure()</a>, <a class="el" href="_c_l_reduction_operation_8cpp_source.xhtml#l00199">CLReductionOperation::configure()</a>, <a class="el" href="_c_l_harris_corners_kernel_8cpp_source.xhtml#l00061">CLHarrisScoreKernel::configure()</a>, <a class="el" href="_c_l_scharr3x3_kernel_8cpp_source.xhtml#l00053">CLScharr3x3Kernel::configure()</a>, <a class="el" href="_c_l_winograd_input_transform_kernel_8cpp_source.xhtml#l00113">CLWinogradInputTransformKernel::configure()</a>, <a class="el" href="_n_e_laplacian_pyramid_8cpp_source.xhtml#l00075">NELaplacianPyramid::configure()</a>, <a class="el" href="_c_l_col2_im_kernel_8cpp_source.xhtml#l00097">CLCol2ImKernel::configure()</a>, <a class="el" href="_c_l_fuse_batch_normalization_kernel_8cpp_source.xhtml#l00116">CLFuseBatchNormalizationKernel::configure()</a>, <a class="el" href="_c_l_batch_normalization_layer_kernel_8cpp_source.xhtml#l00120">CLBatchNormalizationLayerKernel::configure()</a>, <a class="el" href="_c_l_winograd_filter_transform_kernel_8cpp_source.xhtml#l00102">CLWinogradFilterTransformKernel::configure()</a>, <a class="el" href="_c_l_g_e_m_m_matrix_multiply_native_kernel_8cpp_source.xhtml#l00213">CLGEMMMatrixMultiplyNativeKernel::configure()</a>, <a class="el" href="_n_e_weights_reshape_kernel_8cpp_source.xhtml#l00093">NEWeightsReshapeKernel::configure()</a>, <a class="el" href="_c_l_g_e_m_m_convolution_layer_8cpp_source.xhtml#l00072">CLConvolutionLayerReshapeWeights::configure()</a>, <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8cpp_source.xhtml#l00281">CLGEMMMatrixMultiplyKernel::configure()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_matrix_multiply_reshaped_kernel_8cpp_source.xhtml#l00141">CLGEMMLowpMatrixMultiplyReshapedKernel::configure()</a>, <a class="el" href="_c_l_laplacian_pyramid_8cpp_source.xhtml#l00057">CLLaplacianPyramid::configure()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_offset_contribution_kernel_8cpp_source.xhtml#l00108">CLGEMMLowpOffsetContributionKernel::configure()</a>, <a class="el" href="_n_e_optical_flow_8cpp_source.xhtml#l00058">NEOpticalFlow::configure()</a>, <a class="el" href="_n_e_f_f_t_convolution_layer_8cpp_source.xhtml#l00107">NEFFTConvolutionLayer::configure()</a>, <a class="el" href="_c_l_depthwise_convolution_layer_8cpp_source.xhtml#l00576">CLDepthwiseConvolutionLayer::configure()</a>, <a class="el" href="_n_e_generate_proposals_layer_8cpp_source.xhtml#l00070">NEGenerateProposalsLayer::configure()</a>, <a class="el" href="_n_e_g_e_m_m_8cpp_source.xhtml#l00073">NEGEMM::configure()</a>, <a class="el" href="_n_e_p_relu_layer_8cpp_source.xhtml#l00063">NEPReluLayer::configure()</a>, <a class="el" href="_c_l_winograd_output_transform_kernel_8cpp_source.xhtml#l00132">CLWinogradOutputTransformKernel::configure()</a>, <a class="el" href="_n_e_g_e_m_m_assembly_dispatch_8cpp_source.xhtml#l00788">NEGEMMAssemblyDispatch::configure()</a>, <a class="el" href="_n_e_im2_col_kernel_8cpp_source.xhtml#l00352">NEIm2ColKernel::configure()</a>, <a class="el" href="_c_l_depthwise_convolution_layer_native_kernel_8cpp_source.xhtml#l00147">CLDepthwiseConvolutionLayerNativeKernel::configure()</a>, <a class="el" href="_n_e_logical_8cpp_source.xhtml#l00082">NELogicalOr::configure()</a>, <a class="el" href="_g_c_fully_connected_layer_8cpp_source.xhtml#l00082">GCFullyConnectedLayer::configure()</a>, <a class="el" href="_c_l_direct_convolution_layer_kernel_8cpp_source.xhtml#l00417">CLDirectConvolutionLayerKernel::configure()</a>, <a class="el" href="_c_l_softmax_layer_8cpp_source.xhtml#l00066">CLSoftmaxLayerGeneric&lt; IS_LOG &gt;::configure()</a>, <a class="el" href="_c_l_locally_connected_layer_8cpp_source.xhtml#l00151">CLLocallyConnectedLayer::configure()</a>, <a class="el" href="_n_e_laplacian_reconstruct_8cpp_source.xhtml#l00047">NELaplacianReconstruct::configure()</a>, <a class="el" href="_n_e_g_e_m_m_transpose1x_w_kernel_8cpp_source.xhtml#l00067">NEGEMMTranspose1xWKernel::configure()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_offset_contribution_output_stage_kernel_8cpp_source.xhtml#l00140">CLGEMMLowpOffsetContributionOutputStageKernel::configure()</a>, <a class="el" href="_c_l_crop_resize_8cpp_source.xhtml#l00095">CLCropResize::configure()</a>, <a class="el" href="_n_e_gaussian_pyramid_kernel_8cpp_source.xhtml#l00163">NEGaussianPyramidVertKernel::configure()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_offset_contribution_output_stage_kernel_8cpp_source.xhtml#l00869">NEGEMMLowpOffsetContributionOutputStageKernel::configure()</a>, <a class="el" href="_c_l_weights_reshape_kernel_8cpp_source.xhtml#l00079">CLWeightsReshapeKernel::configure()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_matrix_multiply_core_8cpp_source.xhtml#l00078">NEGEMMLowpMatrixMultiplyCore::configure()</a>, <a class="el" href="_n_e_gaussian5x5_kernel_8cpp_source.xhtml#l00124">NEGaussian5x5VertKernel::configure()</a>, <a class="el" href="_c_l_logical_not_8cpp_source.xhtml#l00073">CLLogicalNot::configure()</a>, <a class="el" href="_g_c_softmax_layer_kernel_8cpp_source.xhtml#l00204">GCLogits1DNormKernel::configure()</a>, <a class="el" href="_n_e_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00069">NELSTMLayerQuantized::configure()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_matrix_multiply_core_8cpp_source.xhtml#l00118">CLGEMMLowpMatrixMultiplyCore::configure()</a>, <a class="el" href="_c_l_laplacian_reconstruct_8cpp_source.xhtml#l00051">CLLaplacianReconstruct::configure()</a>, <a class="el" href="_n_e_l_s_t_m_layer_8cpp_source.xhtml#l00066">NELSTMLayer::configure()</a>, <a class="el" href="_c_l_g_e_m_m_reshape_r_h_s_matrix_kernel_8cpp_source.xhtml#l00119">CLGEMMReshapeRHSMatrixKernel::configure()</a>, <a class="el" href="_c_l_im2_col_kernel_8cpp_source.xhtml#l00313">CLIm2ColKernel::configure()</a>, <a class="el" href="_c_l_winograd_convolution_layer_8cpp_source.xhtml#l00115">CLWinogradConvolutionLayer::configure()</a>, <a class="el" href="_c_l_gaussian_pyramid_kernel_8cpp_source.xhtml#l00162">CLGaussianPyramidVertKernel::configure()</a>, <a class="el" href="_n_e_deconvolution_layer_8cpp_source.xhtml#l00139">NEDeconvolutionLayer::configure()</a>, <a class="el" href="_c_l_histogram_kernel_8cpp_source.xhtml#l00167">CLHistogramBorderKernel::configure()</a>, <a class="el" href="_n_e_slice_8cpp_source.xhtml#l00087">NESlice::configure()</a>, <a class="el" href="_c_l_logical_or_8cpp_source.xhtml#l00074">CLLogicalOr::configure()</a>, <a class="el" href="_c_l_logical_and_8cpp_source.xhtml#l00074">CLLogicalAnd::configure()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_matrix_multiply_reshaped_only_r_h_s_kernel_8cpp_source.xhtml#l00303">CLGEMMLowpMatrixMultiplyReshapedOnlyRHSKernel::configure()</a>, <a class="el" href="_c_l_comparison_8cpp_source.xhtml#l00068">CLComparisonStatic&lt; COP &gt;::configure()</a>, <a class="el" href="_c_l_f_f_t_convolution_layer_8cpp_source.xhtml#l00114">CLFFTConvolutionLayer::configure()</a>, <a class="el" href="_n_e_accumulate_kernel_8cpp_source.xhtml#l00283">NEAccumulateWeightedKernel::configure()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_reduction_kernel_8cpp_source.xhtml#l00069">NEGEMMLowpMatrixAReductionKernel::configure()</a>, <a class="el" href="_n_e_convolution_layer_8cpp_source.xhtml#l00050">NEConvolutionLayer::configure()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_reduction_kernel_8cpp_source.xhtml#l00075">CLGEMMLowpMatrixAReductionKernel::configure()</a>, <a class="el" href="_n_e_elementwise_operators_8cpp_source.xhtml#l00189">NEElementwiseMin::configure()</a>, <a class="el" href="_c_l_p_relu_layer_8cpp_source.xhtml#l00078">CLPReluLayer::configure()</a>, <a class="el" href="_n_e_gaussian_pyramid_8cpp_source.xhtml#l00060">NEGaussianPyramidHalf::configure()</a>, <a class="el" href="_n_e_strided_slice_8cpp_source.xhtml#l00067">NEStridedSlice::configure()</a>, <a class="el" href="_c_l_element_wise_unary_layer_8cpp_source.xhtml#l00183">CLExpLayer::configure()</a>, <a class="el" href="_n_e_sobel5x5_kernel_8cpp_source.xhtml#l00219">NESobel5x5VertKernel::configure()</a>, <a class="el" href="_c_l_generate_proposals_layer_8cpp_source.xhtml#l00080">CLGenerateProposalsLayer::configure()</a>, <a class="el" href="_c_l_h_o_g_descriptor_kernel_8cpp_source.xhtml#l00148">CLHOGBlockNormalizationKernel::configure()</a>, <a class="el" href="_c_l_g_e_m_m_matrix_multiply_reshaped_only_r_h_s_kernel_8cpp_source.xhtml#l00198">CLGEMMMatrixMultiplyReshapedOnlyRHSKernel::configure()</a>, <a class="el" href="_g_c_convolution_layer_8cpp_source.xhtml#l00090">GCConvolutionLayer::configure()</a>, <a class="el" href="_c_l_canny_edge_kernel_8cpp_source.xhtml#l00132">CLEdgeNonMaxSuppressionKernel::configure()</a>, <a class="el" href="_c_l_g_e_m_m_deconvolution_layer_8cpp_source.xhtml#l00236">CLGEMMDeconvolutionLayer::configure()</a>, <a class="el" href="_c_l_direct_deconvolution_layer_8cpp_source.xhtml#l00117">CLDirectDeconvolutionLayer::configure()</a>, <a class="el" href="_n_e_sobel7x7_kernel_8cpp_source.xhtml#l00309">NESobel7x7VertKernel::configure()</a>, <a class="el" href="_c_l_slice_8cpp_source.xhtml#l00090">CLSlice::configure()</a>, <a class="el" href="_n_e_softmax_layer_kernel_8cpp_source.xhtml#l00574">NELogits1DSoftmaxKernel&lt; IS_LOG &gt;::configure()</a>, <a class="el" href="_n_e_q_l_s_t_m_layer_8cpp_source.xhtml#l00153">NEQLSTMLayer::configure()</a>, <a class="el" href="_c_l_optical_flow_8cpp_source.xhtml#l00072">CLOpticalFlow::configure()</a>, <a class="el" href="_n_e_h_o_g_descriptor_kernel_8cpp_source.xhtml#l00716">NEHOGBlockNormalizationKernel::configure()</a>, <a class="el" href="_c_l_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00077">CLLSTMLayerQuantized::configure()</a>, <a class="el" href="_c_l_fast_corners_kernel_8cpp_source.xhtml#l00142">CLCopyToArrayKernel::configure()</a>, <a class="el" href="_c_l_sobel5x5_kernel_8cpp_source.xhtml#l00157">CLSobel5x5VertKernel::configure()</a>, <a class="el" href="_c_l_sobel7x7_kernel_8cpp_source.xhtml#l00159">CLSobel7x7VertKernel::configure()</a>, <a class="el" href="_n_e_canny_edge_kernel_8cpp_source.xhtml#l00969">NEEdgeNonMaxSuppressionKernel::configure()</a>, <a class="el" href="_n_e_logical_8cpp_source.xhtml#l00115">NELogicalNot::configure()</a>, <a class="el" href="_c_l_g_e_m_m_matrix_multiply_reshaped_kernel_8cpp_source.xhtml#l00219">CLGEMMMatrixMultiplyReshapedKernel::configure()</a>, <a class="el" href="_c_l_convolution_layer_8cpp_source.xhtml#l00055">CLConvolutionLayer::configure()</a>, <a class="el" href="_n_e_arithmetic_subtraction_8cpp_source.xhtml#l00072">NEArithmeticSubtraction::configure()</a>, <a class="el" href="_n_e_arithmetic_addition_8cpp_source.xhtml#l00073">NEArithmeticAddition::configure()</a>, <a class="el" href="_c_l_softmax_layer_kernel_8cpp_source.xhtml#l00292">CLLogits1DNormKernel::configure()</a>, <a class="el" href="_n_e_convolution_kernel_8cpp_source.xhtml#l00668">NESeparableConvolutionHorKernel&lt; matrix_size &gt;::configure()</a>, <a class="el" href="_c_l_l_k_tracker_kernel_8cpp_source.xhtml#l00142">CLLKTrackerStage0Kernel::configure()</a>, <a class="el" href="_n_e_gaussian_pyramid_8cpp_source.xhtml#l00148">NEGaussianPyramidOrb::configure()</a>, <a class="el" href="_n_e_fully_connected_layer_8cpp_source.xhtml#l00236">NEFullyConnectedLayer::configure()</a>, <a class="el" href="_c_l_l_s_t_m_layer_8cpp_source.xhtml#l00086">CLLSTMLayer::configure()</a>, <a class="el" href="_c_l_element_wise_unary_layer_8cpp_source.xhtml#l00225">CLNegLayer::configure()</a>, <a class="el" href="_n_e_elementwise_operators_8cpp_source.xhtml#l00230">NEElementwiseSquaredDiff::configure()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_reduction_kernel_8cpp_source.xhtml#l00156">CLGEMMLowpMatrixBReductionKernel::configure()</a>, <a class="el" href="_c_l_g_e_m_m_8cpp_source.xhtml#l00564">CLGEMM::configure()</a>, <a class="el" href="_c_l_q_l_s_t_m_layer_8cpp_source.xhtml#l00177">CLQLSTMLayer::configure()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_reduction_kernel_8cpp_source.xhtml#l00186">NEGEMMLowpMatrixBReductionKernel::configure()</a>, <a class="el" href="_c_l_canny_edge_kernel_8cpp_source.xhtml#l00212">CLEdgeTraceKernel::configure()</a>, <a class="el" href="_n_e_accumulate_kernel_8cpp_source.xhtml#l00326">NEAccumulateSquaredKernel::configure()</a>, <a class="el" href="_n_e_pixel_wise_multiplication_8cpp_source.xhtml#l00088">NEPixelWiseMultiplication::configure()</a>, <a class="el" href="_n_e_canny_edge_kernel_8cpp_source.xhtml#l01059">NEEdgeTraceKernel::configure()</a>, <a class="el" href="_c_l_fully_connected_layer_8cpp_source.xhtml#l00246">CLFullyConnectedLayer::configure()</a>, <a class="el" href="_n_e_convolution_kernel_8cpp_source.xhtml#l01105">NESeparableConvolutionVertKernel&lt; matrix_size &gt;::configure()</a>, <a class="el" href="_c_l_l_k_tracker_kernel_8cpp_source.xhtml#l00238">CLLKTrackerStage1Kernel::configure()</a>, <a class="el" href="_n_e_g_e_m_m_convolution_layer_8cpp_source.xhtml#l00259">NEGEMMConvolutionLayer::configure()</a>, <a class="el" href="_c_l_element_wise_unary_layer_8cpp_source.xhtml#l00266">CLSinLayer::configure()</a>, <a class="el" href="_n_e_elementwise_operators_8cpp_source.xhtml#l00271">NEElementwiseDivision::configure()</a>, <a class="el" href="_c_l_convolution_kernel_8cpp_source.xhtml#l00306">CLConvolutionRectangleKernel::configure()</a>, <a class="el" href="_c_l_pixel_wise_multiplication_8cpp_source.xhtml#l00151">CLPixelWiseMultiplication::configure()</a>, <a class="el" href="_c_l_g_e_m_m_convolution_layer_8cpp_source.xhtml#l00213">CLGEMMConvolutionLayer::configure()</a>, <a class="el" href="_n_e_pixel_wise_multiplication_8cpp_source.xhtml#l00128">NEComplexPixelWiseMultiplication::configure()</a>, <a class="el" href="_c_l_element_wise_unary_layer_8cpp_source.xhtml#l00348">CLLogLayer::configure()</a>, <a class="el" href="_n_e_elementwise_operators_8cpp_source.xhtml#l00312">NEElementwisePower::configure()</a>, <a class="el" href="_n_e_convolution_kernel_8cpp_source.xhtml#l01429">NEConvolutionRectangleKernel::configure()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_output_stage_8cpp_source.xhtml#l00082">NEGEMMLowpOutputStage::configure()</a>, <a class="el" href="_c_l_element_wise_unary_layer_8cpp_source.xhtml#l00307">CLAbsLayer::configure()</a>, <a class="el" href="_c_l_pixel_wise_multiplication_8cpp_source.xhtml#l00198">CLComplexPixelWiseMultiplication::configure()</a>, <a class="el" href="_n_e_elementwise_operators_8cpp_source.xhtml#l00400">NEElementwiseComparison::configure()</a>, <a class="el" href="_c_l_element_wise_unary_layer_8cpp_source.xhtml#l00389">CLRoundLayer::configure()</a>, <a class="el" href="_n_e_elementwise_operators_8cpp_source.xhtml#l00359">NEElementwiseComparisonStatic&lt; op &gt;::configure()</a>, <a class="el" href="_c_l_elementwise_operations_8cpp_source.xhtml#l00207">CLArithmeticAddition::configure()</a>, <a class="el" href="_c_l_elementwise_operations_8cpp_source.xhtml#l00253">CLArithmeticSubtraction::configure()</a>, <a class="el" href="_c_l_elementwise_operations_8cpp_source.xhtml#l00299">CLArithmeticDivision::configure()</a>, <a class="el" href="_c_l_elementwise_operations_8cpp_source.xhtml#l00344">CLElementwiseMax::configure()</a>, <a class="el" href="_c_l_elementwise_operations_8cpp_source.xhtml#l00389">CLElementwiseMin::configure()</a>, <a class="el" href="_c_l_elementwise_operations_8cpp_source.xhtml#l00434">CLElementwiseSquaredDiff::configure()</a>, <a class="el" href="_c_l_elementwise_operations_8cpp_source.xhtml#l00479">CLElementwisePower::configure()</a>, <a class="el" href="_n_e_crop_kernel_8cpp_source.xhtml#l00306">NECropKernel::configure_output_shape()</a>, <a class="el" href="_i_tensor_8cpp_source.xhtml#l00035">ITensor::copy_from()</a>, <a class="el" href="_g_c_functions_factory_8cpp_source.xhtml#l00074">arm_compute::graph::backends::detail::create_convolution_layer&lt; GCConvolutionLayerFunctions, GCTargetInfo &gt;()</a>, <a class="el" href="_g_c_functions_factory_8cpp_source.xhtml#l00127">arm_compute::graph::backends::detail::create_depthwise_convolution_layer&lt; GCDepthwiseConvolutionLayerFunctions, GCTargetInfo &gt;()</a>, <a class="el" href="_c_l_functions_factory_8cpp_source.xhtml#l00129">arm_compute::graph::backends::detail::create_detection_output_layer&lt; CPPDetectionOutputLayer, CLTargetInfo &gt;()</a>, <a class="el" href="_c_l_functions_factory_8cpp_source.xhtml#l00173">arm_compute::graph::backends::detail::create_detection_post_process_layer&lt; CPPDetectionPostProcessLayer, CLTargetInfo &gt;()</a>, <a class="el" href="_accessor_8h_source.xhtml#l00104">Accessor::data_layout()</a>, <a class="el" href="_accessor_8h_source.xhtml#l00109">Accessor::data_type()</a>, <a class="el" href="utils_2_utils_8cpp_source.xhtml#l00130">arm_compute::utils::draw_detection_rectangle()</a>, <a class="el" href="_accessor_8h_source.xhtml#l00089">Accessor::element_size()</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00737">arm_compute::error_on_data_layout_not_in()</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00783">arm_compute::error_on_data_type_channel_not_in()</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00685">arm_compute::error_on_data_type_not_in()</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00483">arm_compute::error_on_mismatching_data_layouts()</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00534">arm_compute::error_on_mismatching_data_types()</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00601">arm_compute::error_on_mismatching_quantization_info()</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00431">arm_compute::error_on_mismatching_shapes()</a>, <a class="el" href="_validate_8cpp_source.xhtml#l00092">arm_compute::error_on_tensor_not_2d()</a>, <a class="el" href="src_2core_2_c_p_p_2_validate_8h_source.xhtml#l00097">arm_compute::error_on_unsupported_cpu_bf16()</a>, <a class="el" href="src_2core_2_c_p_p_2_validate_8h_source.xhtml#l00080">arm_compute::error_on_unsupported_cpu_fp16()</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00824">arm_compute::error_on_unsupported_fp16()</a>, <a class="el" href="_accessor_8h_source.xhtml#l00099">Accessor::format()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00050">arm_compute::graph::backends::detail::get_backing_tensor_info()</a>, <a class="el" href="_helpers_8inl_source.xhtml#l00095">Iterator::Iterator()</a>, <a class="el" href="_accessor_8h_source.xhtml#l00114">Accessor::num_channels()</a>, <a class="el" href="_accessor_8h_source.xhtml#l00119">Accessor::num_elements()</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00134">get_tensor_info_t&lt; ITensorInfo * &gt;::operator()()</a>, <a class="el" href="graph__validate__utils_8h_source.xhtml#l00420">VerifyAccessor&lt; D &gt;::output_shape()</a>, <a class="el" href="_accessor_8h_source.xhtml#l00124">Accessor::padding()</a>, <a class="el" href="_n_e_depthwise_convolution_assembly_dispatch_8cpp_source.xhtml#l00545">NEDepthwiseConvolutionAssemblyDispatch::prepare()</a>, <a class="el" href="_graph_utils_8cpp_source.xhtml#l00110">CaffePreproccessor::preprocess()</a>, <a class="el" href="_graph_utils_8cpp_source.xhtml#l00069">TFPreproccessor::preprocess()</a>, <a class="el" href="_i_tensor_8h_source.xhtml#l00063">ITensor::ptr_to_element()</a>, <a class="el" href="_accessor_8h_source.xhtml#l00129">Accessor::quantization_info()</a>, <a class="el" href="_n_e_min_max_location_kernel_8cpp_source.xhtml#l00096">NEMinMaxKernel::reset()</a>, <a class="el" href="_c_l_min_max_layer_kernel_8cpp_source.xhtml#l00126">CLMinMaxLayerKernel::reset()</a>, <a class="el" href="_n_e_min_max_layer_kernel_8cpp_source.xhtml#l00194">NEMinMaxLayerKernel::reset()</a>, <a class="el" href="_g_c_depthwise_convolution_layer3x3_kernel_8cpp_source.xhtml#l00208">GCDepthwiseConvolutionLayer3x3Kernel::run()</a>, <a class="el" href="_n_e_memset_kernel_8cpp_source.xhtml#l00053">NEMemsetKernel::run()</a>, <a class="el" href="_c_p_p_upsample_kernel_8cpp_source.xhtml#l00063">CPPUpsampleKernel::run()</a>, <a class="el" href="_c_l_histogram_kernel_8cpp_source.xhtml#l00126">CLHistogramKernel::run()</a>, <a class="el" href="_n_e_h_o_g_descriptor_kernel_8cpp_source.xhtml#l00680">NEHOGOrientationBinningKernel::run()</a>, <a class="el" href="_g_c_activation_layer_kernel_8cpp_source.xhtml#l00106">GCActivationLayerKernel::run()</a>, <a class="el" href="_c_l_min_max_location_kernel_8cpp_source.xhtml#l00131">CLMinMaxKernel::run()</a>, <a class="el" href="_n_e_non_maxima_suppression3x3_kernel_8cpp_source.xhtml#l00500">NENonMaximaSuppression3x3Kernel::run()</a>, <a class="el" href="_n_e_dequantization_layer_kernel_8cpp_source.xhtml#l00393">NEDequantizationLayerKernel::run()</a>, <a class="el" href="_c_p_p_detection_output_layer_8cpp_source.xhtml#l00444">CPPDetectionOutputLayer::run()</a>, <a class="el" href="_n_e_mean_std_dev_kernel_8cpp_source.xhtml#l00125">NEMeanStdDevKernel::run()</a>, <a class="el" href="_n_e_h_o_g_detector_kernel_8cpp_source.xhtml#l00097">NEHOGDetectorKernel::run()</a>, <a class="el" href="_c_p_p_box_with_non_maxima_suppression_limit_kernel_8cpp_source.xhtml#l00398">CPPBoxWithNonMaximaSuppressionLimitKernel::run()</a>, <a class="el" href="_n_e_fill_border_kernel_8cpp_source.xhtml#l00120">NEFillBorderKernel::run()</a>, <a class="el" href="_n_e_locally_connected_matrix_multiply_kernel_8cpp_source.xhtml#l00367">NELocallyConnectedMatrixMultiplyKernel::run()</a>, <a class="el" href="_n_e_tile_kernel_8cpp_source.xhtml#l00092">NETileKernel::run()</a>, <a class="el" href="_n_e_space_to_depth_layer_kernel_8cpp_source.xhtml#l00102">NESpaceToDepthLayerKernel::run()</a>, <a class="el" href="_c_l_dequantization_layer_kernel_8cpp_source.xhtml#l00133">CLDequantizationLayerKernel::run()</a>, <a class="el" href="_n_e_depth_to_space_layer_kernel_8cpp_source.xhtml#l00101">NEDepthToSpaceLayerKernel::run()</a>, <a class="el" href="_n_e_channel_shuffle_layer_kernel_8cpp_source.xhtml#l00171">NEChannelShuffleLayerKernel::run()</a>, <a class="el" href="_n_e_reverse_kernel_8cpp_source.xhtml#l00145">NEReverseKernel::run()</a>, <a class="el" href="_n_e_copy_kernel_8cpp_source.xhtml#l00120">NECopyKernel::run()</a>, <a class="el" href="_n_e_r_o_i_pooling_layer_kernel_8cpp_source.xhtml#l00089">NEROIPoolingLayerKernel::run()</a>, <a class="el" href="_g_c_pooling_layer_kernel_8cpp_source.xhtml#l00335">GCPoolingLayerKernel::run()</a>, <a class="el" href="_c_l_g_e_m_m_matrix_vector_multiply_kernel_8cpp_source.xhtml#l00141">CLGEMMMatrixVectorMultiplyKernel::run()</a>, <a class="el" href="_n_e_generate_proposals_layer_kernel_8cpp_source.xhtml#l00169">NEComputeAllAnchorsKernel::run()</a>, <a class="el" href="_g_c_arithmetic_addition_kernel_8cpp_source.xhtml#l00134">GCArithmeticAdditionKernel::run()</a>, <a class="el" href="_n_e_flatten_layer_kernel_8cpp_source.xhtml#l00102">NEFlattenLayerKernel::run()</a>, <a class="el" href="_n_e_reorg_layer_kernel_8cpp_source.xhtml#l00103">NEReorgLayerKernel::run()</a>, <a class="el" href="_c_p_p_top_k_v_kernel_8cpp_source.xhtml#l00129">CPPTopKVKernel::run()</a>, <a class="el" href="_g_c_normalize_planar_y_u_v_layer_kernel_8cpp_source.xhtml#l00134">GCNormalizePlanarYUVLayerKernel::run()</a>, <a class="el" href="_c_l_flatten_layer_kernel_8cpp_source.xhtml#l00121">CLFlattenLayerKernel::run()</a>, <a class="el" href="_g_c_tensor_shift_kernel_8cpp_source.xhtml#l00079">GCTensorShiftKernel::run()</a>, <a class="el" href="_c_l_deconvolution_layer_upsample_kernel_8cpp_source.xhtml#l00103">CLDeconvolutionLayerUpsampleKernel::run()</a>, <a class="el" href="_c_l_locally_connected_matrix_multiply_kernel_8cpp_source.xhtml#l00124">CLLocallyConnectedMatrixMultiplyKernel::run()</a>, <a class="el" href="_n_e_pooling_layer_kernel_8cpp_source.xhtml#l02558">NEPoolingLayerKernel::run()</a>, <a class="el" href="_c_l_upsample_layer_kernel_8cpp_source.xhtml#l00146">CLUpsampleLayerKernel::run()</a>, <a class="el" href="_c_l_q_l_s_t_m_layer_normalization_kernel_8cpp_source.xhtml#l00146">CLQLSTMLayerNormalizationKernel::run()</a>, <a class="el" href="_n_e_convert_fully_connected_weights_kernel_8cpp_source.xhtml#l00104">NEConvertFullyConnectedWeightsKernel::run()</a>, <a class="el" href="_c_l_integral_image_kernel_8cpp_source.xhtml#l00129">CLIntegralImageVertKernel::run()</a>, <a class="el" href="_c_l_comparison_kernel_8cpp_source.xhtml#l00176">CLComparisonKernel::run()</a>, <a class="el" href="_n_e_min_max_layer_kernel_8cpp_source.xhtml#l00119">NEMinMaxLayerKernel::run()</a>, <a class="el" href="_c_l_instance_normalization_layer_kernel_8cpp_source.xhtml#l00124">CLInstanceNormalizationLayerKernel::run()</a>, <a class="el" href="_g_c_weights_reshape_kernel_8cpp_source.xhtml#l00104">GCWeightsReshapeKernel::run()</a>, <a class="el" href="_c_l_mean_std_dev_normalization_kernel_8cpp_source.xhtml#l00135">CLMeanStdDevNormalizationKernel::run()</a>, <a class="el" href="_c_l_pooling_layer_kernel_8cpp_source.xhtml#l00436">CLPoolingLayerKernel::run()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_matrix_multiply_kernel_8cpp_source.xhtml#l00947">NEGEMMLowpMatrixMultiplyKernel::run()</a>, <a class="el" href="_g_c_col2_im_kernel_8cpp_source.xhtml#l00100">GCCol2ImKernel::run()</a>, <a class="el" href="_c_l_r_o_i_pooling_layer_kernel_8cpp_source.xhtml#l00134">CLROIPoolingLayerKernel::run()</a>, <a class="el" href="_n_e_f_f_t_radix_stage_kernel_8cpp_source.xhtml#l01041">NEFFTRadixStageKernel::run()</a>, <a class="el" href="_n_e_bounding_box_transform_kernel_8cpp_source.xhtml#l00230">NEBoundingBoxTransformKernel::run()</a>, <a class="el" href="_n_e_stack_layer_kernel_8cpp_source.xhtml#l00116">NEStackLayerKernel::run()</a>, <a class="el" href="_g_c_g_e_m_m_matrix_multiply_kernel_8cpp_source.xhtml#l00306">GCGEMMMatrixMultiplyKernel::run()</a>, <a class="el" href="_n_e_winograd_convolution_layer_8cpp_source.xhtml#l00613">NEWinogradConvolutionLayer::run()</a>, <a class="el" href="_n_e_direct_convolution_layer_kernel_8cpp_source.xhtml#l01293">NEDirectConvolutionLayerKernel::run()</a>, <a class="el" href="_c_l_mean_std_dev_kernel_8cpp_source.xhtml#l00115">CLMeanStdDevKernel::run()</a>, <a class="el" href="_n_e_g_e_m_m_matrix_multiply_kernel_8cpp_source.xhtml#l01144">NEGEMMMatrixMultiplyKernel::run()</a>, <a class="el" href="_g_c_batch_normalization_layer_kernel_8cpp_source.xhtml#l00207">GCBatchNormalizationLayerKernel::run()</a>, <a class="el" href="_c_l_prior_box_layer_kernel_8cpp_source.xhtml#l00207">CLPriorBoxLayerKernel::run()</a>, <a class="el" href="_c_p_p_detection_post_process_layer_8cpp_source.xhtml#l00282">CPPDetectionPostProcessLayer::run()</a>, <a class="el" href="_n_e_depth_convert_layer_kernel_8cpp_source.xhtml#l00139">NEDepthConvertLayerKernel::run()</a>, <a class="el" href="_c_l_reduction_operation_kernel_8cpp_source.xhtml#l00254">CLReductionOperationKernel::run()</a>, <a class="el" href="_n_e_canny_edge_8cpp_source.xhtml#l00170">NECannyEdge::run()</a>, <a class="el" href="_n_e_batch_to_space_layer_kernel_8cpp_source.xhtml#l00138">NEBatchToSpaceLayerKernel::run()</a>, <a class="el" href="_n_e_r_o_i_align_layer_kernel_8cpp_source.xhtml#l00301">NEROIAlignLayerKernel::run()</a>, <a class="el" href="_n_e_crop_kernel_8cpp_source.xhtml#l00364">NECropKernel::run()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_offset_contribution_kernel_8cpp_source.xhtml#l00404">NEGEMMLowpOffsetContributionKernel::run()</a>, <a class="el" href="_c_l_crop_kernel_8cpp_source.xhtml#l00117">CLCropKernel::run()</a>, <a class="el" href="_c_l_stack_layer_kernel_8cpp_source.xhtml#l00121">CLStackLayerKernel::run()</a>, <a class="el" href="_c_l_softmax_layer_kernel_8cpp_source.xhtml#l00251">CLLogits1DMaxShiftExpSumKernel::run()</a>, <a class="el" href="_c_l_arg_min_max_layer_kernel_8cpp_source.xhtml#l00189">CLArgMinMaxLayerKernel::run()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_matrix_multiply_native_kernel_8cpp_source.xhtml#l00280">CLGEMMLowpMatrixMultiplyNativeKernel::run()</a>, <a class="el" href="_n_e_space_to_batch_layer_kernel_8cpp_source.xhtml#l00143">NESpaceToBatchLayerKernel::run()</a>, <a class="el" href="_c_l_g_e_m_m_reshape_l_h_s_matrix_kernel_8cpp_source.xhtml#l00197">CLGEMMReshapeLHSMatrixKernel::run()</a>, <a class="el" href="_c_l_col2_im_kernel_8cpp_source.xhtml#l00148">CLCol2ImKernel::run()</a>, <a class="el" href="_n_e_weights_reshape_kernel_8cpp_source.xhtml#l00123">NEWeightsReshapeKernel::run()</a>, <a class="el" href="_c_l_r_o_i_align_layer_kernel_8cpp_source.xhtml#l00169">CLROIAlignLayerKernel::run()</a>, <a class="el" href="_n_e_depthwise_convolution_assembly_dispatch_8cpp_source.xhtml#l00514">NEDepthwiseConvolutionAssemblyDispatch::run()</a>, <a class="el" href="_c_l_winograd_input_transform_kernel_8cpp_source.xhtml#l00234">CLWinogradInputTransformKernel::run()</a>, <a class="el" href="_c_l_winograd_filter_transform_kernel_8cpp_source.xhtml#l00143">CLWinogradFilterTransformKernel::run()</a>, <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8cpp_source.xhtml#l00480">CLGEMMMatrixMultiplyKernel::run()</a>, <a class="el" href="_c_l_direct_convolution_layer_kernel_8cpp_source.xhtml#l00585">CLDirectConvolutionLayerKernel::run()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_matrix_multiply_reshaped_kernel_8cpp_source.xhtml#l00250">CLGEMMLowpMatrixMultiplyReshapedKernel::run()</a>, <a class="el" href="_c_l_color_convert_kernel_8cpp_source.xhtml#l00451">CLColorConvertKernel::run()</a>, <a class="el" href="_c_l_g_e_m_m_matrix_multiply_native_kernel_8cpp_source.xhtml#l00344">CLGEMMMatrixMultiplyNativeKernel::run()</a>, <a class="el" href="_c_l_weights_reshape_kernel_8cpp_source.xhtml#l00123">CLWeightsReshapeKernel::run()</a>, <a class="el" href="_c_l_winograd_output_transform_kernel_8cpp_source.xhtml#l00225">CLWinogradOutputTransformKernel::run()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_offset_contribution_output_stage_kernel_8cpp_source.xhtml#l00918">NEGEMMLowpOffsetContributionOutputStageKernel::run()</a>, <a class="el" href="_n_e_sobel7x7_kernel_8cpp_source.xhtml#l00357">NESobel7x7VertKernel::run()</a>, <a class="el" href="_c_l_depthwise_convolution_layer_native_kernel_8cpp_source.xhtml#l00272">CLDepthwiseConvolutionLayerNativeKernel::run()</a>, <a class="el" href="_c_l_im2_col_kernel_8cpp_source.xhtml#l00377">CLIm2ColKernel::run()</a>, <a class="el" href="_n_e_h_o_g_descriptor_kernel_8cpp_source.xhtml#l00774">NEHOGBlockNormalizationKernel::run()</a>, <a class="el" href="_n_e_canny_edge_kernel_8cpp_source.xhtml#l01023">NEEdgeNonMaxSuppressionKernel::run()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_matrix_multiply_reshaped_only_r_h_s_kernel_8cpp_source.xhtml#l00484">CLGEMMLowpMatrixMultiplyReshapedOnlyRHSKernel::run()</a>, <a class="el" href="_c_l_g_e_m_m_matrix_multiply_reshaped_only_r_h_s_kernel_8cpp_source.xhtml#l00348">CLGEMMMatrixMultiplyReshapedOnlyRHSKernel::run()</a>, <a class="el" href="_c_l_g_e_m_m_matrix_multiply_reshaped_kernel_8cpp_source.xhtml#l00355">CLGEMMMatrixMultiplyReshapedKernel::run()</a>, <a class="el" href="_n_e_canny_edge_kernel_8cpp_source.xhtml#l01105">NEEdgeTraceKernel::run()</a>, <a class="el" href="_c_l_g_e_m_m_8cpp_source.xhtml#l00668">CLGEMM::run()</a>, <a class="el" href="_n_e_convolution_kernel_8cpp_source.xhtml#l01473">NEConvolutionRectangleKernel::run()</a>, <a class="el" href="_c_p_p_box_with_non_maxima_suppression_limit_kernel_8cpp_source.xhtml#l00198">CPPBoxWithNonMaximaSuppressionLimitKernel::run_nmslimit()</a>, <a class="el" href="_n_e_reverse_kernel_8cpp_source.xhtml#l00088">arm_compute::run_reverse()</a>, <a class="el" href="_accessor_8h_source.xhtml#l00084">Accessor::shape()</a>, <a class="el" href="_accessor_8h_source.xhtml#l00094">Accessor::size()</a>, and <a class="el" href="_c_l_trace_point_8cpp_source.xhtml#l00040">arm_compute::to_string()</a>.</p>

</div>
</div>
<a id="a7e6b5e55a2914b1fb1966310e7733ac4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7e6b5e55a2914b1fb1966310e7733ac4">&#9670;&nbsp;</a></span>info() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>* info </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Interface to be implemented by the child class to return the tensor's metadata. </p>
<dl class="section return"><dt>Returns</dt><dd>A pointer to the tensor's metadata. </dd></dl>

<p>Implemented in <a class="el" href="classarm__compute_1_1_c_l_sub_tensor.xhtml#af3913a3ffefed788b1fa3fb91407472a">CLSubTensor</a>, <a class="el" href="classarm__compute_1_1_g_c_tensor.xhtml#a2edd900d6f8eb9a995be55adfffbede5">GCTensor</a>, <a class="el" href="classarm__compute_1_1_c_l_tensor.xhtml#a2edd900d6f8eb9a995be55adfffbede5">CLTensor</a>, <a class="el" href="classarm__compute_1_1_sub_tensor.xhtml#af3913a3ffefed788b1fa3fb91407472a">SubTensor</a>, <a class="el" href="classarm__compute_1_1experimental_1_1_operator_tensor.xhtml#af3913a3ffefed788b1fa3fb91407472a">OperatorTensor</a>, and <a class="el" href="classarm__compute_1_1_tensor.xhtml#af3913a3ffefed788b1fa3fb91407472a">Tensor</a>.</p>

</div>
</div>
<a id="a209ea2ddfdfa80703799c92da8beb643"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a209ea2ddfdfa80703799c92da8beb643">&#9670;&nbsp;</a></span>is_used()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool is_used </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Flags if the tensor is used or not. </p>
<dl class="section return"><dt>Returns</dt><dd>True if it is used else false </dd></dl>

<p class="definition">Definition at line <a class="el" href="_i_tensor_8cpp_source.xhtml#l00163">163</a> of file <a class="el" href="_i_tensor_8cpp_source.xhtml">ITensor.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;{</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <span class="keywordflow">return</span> _is_used;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_g_c_fully_connected_layer_8cpp_source.xhtml#l00178">GCFullyConnectedLayer::prepare()</a>, <a class="el" href="_n_e_locally_connected_layer_8cpp_source.xhtml#l00190">NELocallyConnectedLayer::prepare()</a>, <a class="el" href="_g_c_g_e_m_m_8cpp_source.xhtml#l00192">GCGEMM::prepare()</a>, <a class="el" href="_n_e_g_e_m_m_8cpp_source.xhtml#l00360">NEGEMM::prepare()</a>, <a class="el" href="_c_l_locally_connected_layer_8cpp_source.xhtml#l00213">CLLocallyConnectedLayer::prepare()</a>, <a class="el" href="_n_e_f_f_t_convolution_layer_8cpp_source.xhtml#l00347">NEFFTConvolutionLayer::prepare()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_matrix_multiply_core_8cpp_source.xhtml#l00575">NEGEMMLowpMatrixMultiplyCore::prepare()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_matrix_multiply_core_8cpp_source.xhtml#l00539">CLGEMMLowpMatrixMultiplyCore::prepare()</a>, <a class="el" href="_n_e_deconvolution_layer_8cpp_source.xhtml#l00208">NEDeconvolutionLayer::prepare()</a>, <a class="el" href="_g_c_convolution_layer_8cpp_source.xhtml#l00226">GCConvolutionLayer::prepare()</a>, <a class="el" href="_c_l_f_f_t_convolution_layer_8cpp_source.xhtml#l00352">CLFFTConvolutionLayer::prepare()</a>, <a class="el" href="_c_l_winograd_convolution_layer_8cpp_source.xhtml#l00235">CLWinogradConvolutionLayer::prepare()</a>, <a class="el" href="_c_l_g_e_m_m_deconvolution_layer_8cpp_source.xhtml#l00390">CLGEMMDeconvolutionLayer::prepare()</a>, <a class="el" href="_c_l_direct_deconvolution_layer_8cpp_source.xhtml#l00212">CLDirectDeconvolutionLayer::prepare()</a>, <a class="el" href="_n_e_fully_connected_layer_8cpp_source.xhtml#l00432">NEFullyConnectedLayer::prepare()</a>, <a class="el" href="_c_l_fully_connected_layer_8cpp_source.xhtml#l00442">CLFullyConnectedLayer::prepare()</a>, <a class="el" href="_n_e_g_e_m_m_convolution_layer_8cpp_source.xhtml#l00591">NEGEMMConvolutionLayer::prepare()</a>, <a class="el" href="_c_l_g_e_m_m_convolution_layer_8cpp_source.xhtml#l00661">CLGEMMConvolutionLayer::prepare()</a>, <a class="el" href="_n_e_tensor_handle_8cpp_source.xhtml#l00068">NETensorHandle::release_if_unused()</a>, <a class="el" href="_c_l_tensor_handle_8cpp_source.xhtml#l00068">CLTensorHandle::release_if_unused()</a>, and <a class="el" href="_g_c_tensor_handle_8cpp_source.xhtml#l00068">GCTensorHandle::release_if_unused()</a>.</p>

</div>
</div>
<a id="a9bc00234de9adf8c99a21eb1d7d494c2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9bc00234de9adf8c99a21eb1d7d494c2">&#9670;&nbsp;</a></span>mark_as_unused()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void mark_as_unused </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Marks a tensor as unused. </p>

<p class="definition">Definition at line <a class="el" href="_i_tensor_8cpp_source.xhtml#l00168">168</a> of file <a class="el" href="_i_tensor_8cpp_source.xhtml">ITensor.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;{</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    _is_used = <span class="keyword">false</span>;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_n_e_winograd_convolution_layer_8cpp_source.xhtml#l00758">NEWinogradConvolutionLayer::prepare()</a>, <a class="el" href="_n_e_g_e_m_m_conv2d_8cpp_source.xhtml#l00157">NEGEMMConv2d::prepare()</a>, <a class="el" href="_g_c_fully_connected_layer_8cpp_source.xhtml#l00178">GCFullyConnectedLayer::prepare()</a>, <a class="el" href="_n_e_locally_connected_layer_8cpp_source.xhtml#l00190">NELocallyConnectedLayer::prepare()</a>, <a class="el" href="_g_c_g_e_m_m_8cpp_source.xhtml#l00192">GCGEMM::prepare()</a>, <a class="el" href="_n_e_depthwise_convolution_assembly_dispatch_8cpp_source.xhtml#l00545">NEDepthwiseConvolutionAssemblyDispatch::prepare()</a>, <a class="el" href="_n_e_g_e_m_m_8cpp_source.xhtml#l00360">NEGEMM::prepare()</a>, <a class="el" href="_c_l_locally_connected_layer_8cpp_source.xhtml#l00213">CLLocallyConnectedLayer::prepare()</a>, <a class="el" href="_n_e_f_f_t_convolution_layer_8cpp_source.xhtml#l00347">NEFFTConvolutionLayer::prepare()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_matrix_multiply_core_8cpp_source.xhtml#l00575">NEGEMMLowpMatrixMultiplyCore::prepare()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_matrix_multiply_core_8cpp_source.xhtml#l00539">CLGEMMLowpMatrixMultiplyCore::prepare()</a>, <a class="el" href="_n_e_deconvolution_layer_8cpp_source.xhtml#l00208">NEDeconvolutionLayer::prepare()</a>, <a class="el" href="_g_c_convolution_layer_8cpp_source.xhtml#l00226">GCConvolutionLayer::prepare()</a>, <a class="el" href="_c_l_f_f_t_convolution_layer_8cpp_source.xhtml#l00352">CLFFTConvolutionLayer::prepare()</a>, <a class="el" href="_c_l_winograd_convolution_layer_8cpp_source.xhtml#l00235">CLWinogradConvolutionLayer::prepare()</a>, <a class="el" href="_c_l_g_e_m_m_deconvolution_layer_8cpp_source.xhtml#l00390">CLGEMMDeconvolutionLayer::prepare()</a>, <a class="el" href="_c_l_direct_deconvolution_layer_8cpp_source.xhtml#l00212">CLDirectDeconvolutionLayer::prepare()</a>, <a class="el" href="_n_e_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00503">NELSTMLayerQuantized::prepare()</a>, <a class="el" href="_c_l_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00532">CLLSTMLayerQuantized::prepare()</a>, <a class="el" href="_n_e_fully_connected_layer_8cpp_source.xhtml#l00432">NEFullyConnectedLayer::prepare()</a>, <a class="el" href="_n_e_q_l_s_t_m_layer_8cpp_source.xhtml#l01086">NEQLSTMLayer::prepare()</a>, <a class="el" href="_c_l_g_e_m_m_8cpp_source.xhtml#l00760">CLGEMM::prepare()</a>, <a class="el" href="_c_l_fully_connected_layer_8cpp_source.xhtml#l00442">CLFullyConnectedLayer::prepare()</a>, <a class="el" href="_n_e_g_e_m_m_convolution_layer_8cpp_source.xhtml#l00591">NEGEMMConvolutionLayer::prepare()</a>, <a class="el" href="_c_l_q_l_s_t_m_layer_8cpp_source.xhtml#l01106">CLQLSTMLayer::prepare()</a>, <a class="el" href="_c_l_g_e_m_m_convolution_layer_8cpp_source.xhtml#l00661">CLGEMMConvolutionLayer::prepare()</a>, and <a class="el" href="_i_weights_manager_8cpp_source.xhtml#l00051">IWeightsManager::run()</a>.</p>

</div>
</div>
<a id="ade74189c92e70baa2848986c10dbe7ef"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ade74189c92e70baa2848986c10dbe7ef">&#9670;&nbsp;</a></span>print()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void print </td>
          <td>(</td>
          <td class="paramtype">std::ostream &amp;&#160;</td>
          <td class="paramname"><em>s</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1_i_o_format_info.xhtml">IOFormatInfo</a>&#160;</td>
          <td class="paramname"><em>io_fmt</em> = <code><a class="el" href="structarm__compute_1_1_i_o_format_info.xhtml">IOFormatInfo</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Print a tensor to a given stream using user defined formatting information. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">s</td><td>Output stream </td></tr>
    <tr><td class="paramname">io_fmt</td><td>Format information </td></tr>
  </table>
  </dd>
</dl>

<p class="reference">Referenced by <a class="el" href="neon__gemm__qasymm8_8cpp_source.xhtml#l00095">main()</a>.</p>

</div>
</div>
<a id="adbd73147d41e8a640bc299d12613c31e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adbd73147d41e8a640bc299d12613c31e">&#9670;&nbsp;</a></span>ptr_to_element()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t* ptr_to_element </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> &amp;&#160;</td>
          <td class="paramname"><em>id</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Return a pointer to the element at the passed coordinates. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">id</td><td><a class="el" href="classarm__compute_1_1_coordinates.xhtml" title="Coordinates of an item.">Coordinates</a> of the element</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Pointer to the requested element </dd></dl>

<p class="definition">Definition at line <a class="el" href="_i_tensor_8h_source.xhtml#l00063">63</a> of file <a class="el" href="_i_tensor_8h_source.xhtml">ITensor.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    {</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml#ab988210662dbd3bf32fd563c7dd1bdbf">buffer</a>() + <a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#ac80aea0e8c7c5c812ea8c7221fbfd4b2">offset_element_in_bytes</a>(<span class="keywordtype">id</span>);</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    }</div><div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_ac80aea0e8c7c5c812ea8c7221fbfd4b2"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#ac80aea0e8c7c5c812ea8c7221fbfd4b2">arm_compute::ITensorInfo::offset_element_in_bytes</a></div><div class="ttdeci">virtual int32_t offset_element_in_bytes(const Coordinates &amp;pos) const =0</div><div class="ttdoc">The offset in bytes from the beginning of the memory allocation to access the element at position (x,...</div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_xhtml_ab988210662dbd3bf32fd563c7dd1bdbf"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml#ab988210662dbd3bf32fd563c7dd1bdbf">arm_compute::ITensor::buffer</a></div><div class="ttdeci">virtual uint8_t * buffer() const =0</div><div class="ttdoc">Interface to be implemented by the child class to return a pointer to CPU memory.</div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_xhtml_a0e95dc1e53c361348314873b168ae237"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">arm_compute::ITensor::info</a></div><div class="ttdeci">virtual ITensorInfo * info() const =0</div><div class="ttdoc">Interface to be implemented by the child class to return the tensor's metadata.</div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="classarm__compute_1_1_i_tensor.xhtml#ab988210662dbd3bf32fd563c7dd1bdbf">ITensor::buffer()</a>, <a class="el" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">ITensor::info()</a>, and <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#ac80aea0e8c7c5c812ea8c7221fbfd4b2">ITensorInfo::offset_element_in_bytes()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_g_e_m_m_lowp_matrix_multiply_core_8cpp_source.xhtml#l00118">CLGEMMLowpMatrixMultiplyCore::configure()</a>, <a class="el" href="_n_e_crop_kernel_8cpp_source.xhtml#l00306">NECropKernel::configure_output_shape()</a>, <a class="el" href="_g_c_accessor_8h_source.xhtml#l00137">GCAccessor::operator()()</a>, <a class="el" href="_accessor_8h_source.xhtml#l00144">Accessor::operator()()</a>, <a class="el" href="_c_l_accessor_8h_source.xhtml#l00157">CLAccessor::operator()()</a>, <a class="el" href="_n_e_integral_image_kernel_8cpp_source.xhtml#l00076">NEIntegralImageKernel::run()</a>, <a class="el" href="_n_e_memset_kernel_8cpp_source.xhtml#l00053">NEMemsetKernel::run()</a>, <a class="el" href="_n_e_fast_corners_kernel_8cpp_source.xhtml#l00391">NEFastCornersKernel::run()</a>, <a class="el" href="_c_p_p_detection_output_layer_8cpp_source.xhtml#l00444">CPPDetectionOutputLayer::run()</a>, <a class="el" href="_n_e_tile_kernel_8cpp_source.xhtml#l00092">NETileKernel::run()</a>, <a class="el" href="_n_e_space_to_depth_layer_kernel_8cpp_source.xhtml#l00102">NESpaceToDepthLayerKernel::run()</a>, <a class="el" href="_n_e_r_o_i_pooling_layer_kernel_8cpp_source.xhtml#l00089">NEROIPoolingLayerKernel::run()</a>, <a class="el" href="_n_e_depth_to_space_layer_kernel_8cpp_source.xhtml#l00101">NEDepthToSpaceLayerKernel::run()</a>, <a class="el" href="_n_e_scharr3x3_kernel_8cpp_source.xhtml#l00140">NEScharr3x3Kernel::run()</a>, <a class="el" href="_n_e_sobel3x3_kernel_8cpp_source.xhtml#l00093">NESobel3x3Kernel::run()</a>, <a class="el" href="_c_p_p_non_maximum_suppression_kernel_8cpp_source.xhtml#l00092">CPPNonMaximumSuppressionKernel::run()</a>, <a class="el" href="_c_p_p_detection_post_process_layer_8cpp_source.xhtml#l00282">CPPDetectionPostProcessLayer::run()</a>, <a class="el" href="_n_e_batch_to_space_layer_kernel_8cpp_source.xhtml#l00138">NEBatchToSpaceLayerKernel::run()</a>, <a class="el" href="_n_e_crop_kernel_8cpp_source.xhtml#l00364">NECropKernel::run()</a>, <a class="el" href="_n_e_crop_resize_8cpp_source.xhtml#l00106">NECropResize::run()</a>, <a class="el" href="_n_e_space_to_batch_layer_kernel_8cpp_source.xhtml#l00143">NESpaceToBatchLayerKernel::run()</a>, <a class="el" href="_n_e_weights_reshape_kernel_8cpp_source.xhtml#l00123">NEWeightsReshapeKernel::run()</a>, <a class="el" href="_n_e_sobel5x5_kernel_8cpp_source.xhtml#l00267">NESobel5x5VertKernel::run()</a>, <a class="el" href="_c_p_p_box_with_non_maxima_suppression_limit_kernel_8cpp_source.xhtml#l00198">CPPBoxWithNonMaximaSuppressionLimitKernel::run_nmslimit()</a>, and <a class="el" href="_n_e_reverse_kernel_8cpp_source.xhtml#l00088">arm_compute::run_reverse()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>arm_compute/core/<a class="el" href="_i_tensor_8h_source.xhtml">ITensor.h</a></li>
<li>src/core/<a class="el" href="_i_tensor_8cpp_source.xhtml">ITensor.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a></li>
    <li class="footer">Generated on Fri Nov 27 2020 13:50:52 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
