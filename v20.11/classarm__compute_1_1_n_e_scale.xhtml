<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: NEScale Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1_n_e_scale.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">NEScale Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Basic function to run <a class="el" href="classarm__compute_1_1_n_e_scale_kernel.xhtml">NEScaleKernel</a>.  
 <a href="classarm__compute_1_1_n_e_scale.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_n_e_scale_8h_source.xhtml">NEScale.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for NEScale:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classarm__compute_1_1_n_e_scale__coll__graph.svg" width="212" height="187"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a30a0363a371ac59877079c6ec1962657"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_n_e_scale.xhtml#a30a0363a371ac59877079c6ec1962657">NEScale</a> ()</td></tr>
<tr class="memdesc:a30a0363a371ac59877079c6ec1962657"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="#a30a0363a371ac59877079c6ec1962657">More...</a><br /></td></tr>
<tr class="separator:a30a0363a371ac59877079c6ec1962657"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe4c55cb7564734d41554649f80df061"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_n_e_scale.xhtml#afe4c55cb7564734d41554649f80df061">configure</a> (<a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *input, <a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *output, const <a class="el" href="structarm__compute_1_1_scale_kernel_info.xhtml">ScaleKernelInfo</a> &amp;info)</td></tr>
<tr class="memdesc:afe4c55cb7564734d41554649f80df061"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialize the function's source, destination, interpolation type and border_mode.  <a href="#afe4c55cb7564734d41554649f80df061">More...</a><br /></td></tr>
<tr class="separator:afe4c55cb7564734d41554649f80df061"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1_i_n_e_simple_function_no_border"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1_i_n_e_simple_function_no_border')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1_i_n_e_simple_function_no_border.xhtml">INESimpleFunctionNoBorder</a></td></tr>
<tr class="memitem:a2faa1b5548448d6e6692a25babe5c33f inherit pub_methods_classarm__compute_1_1_i_n_e_simple_function_no_border"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_n_e_simple_function_no_border.xhtml#a2faa1b5548448d6e6692a25babe5c33f">INESimpleFunctionNoBorder</a> (<a class="el" href="classarm__compute_1_1_i_runtime_context.xhtml">IRuntimeContext</a> *ctx=nullptr)</td></tr>
<tr class="memdesc:a2faa1b5548448d6e6692a25babe5c33f inherit pub_methods_classarm__compute_1_1_i_n_e_simple_function_no_border"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="classarm__compute_1_1_i_n_e_simple_function_no_border.xhtml#a2faa1b5548448d6e6692a25babe5c33f">More...</a><br /></td></tr>
<tr class="separator:a2faa1b5548448d6e6692a25babe5c33f inherit pub_methods_classarm__compute_1_1_i_n_e_simple_function_no_border"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0a0586fce7992b016c97e0df7c05b382 inherit pub_methods_classarm__compute_1_1_i_n_e_simple_function_no_border"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_n_e_simple_function_no_border.xhtml#a0a0586fce7992b016c97e0df7c05b382">INESimpleFunctionNoBorder</a> (const <a class="el" href="classarm__compute_1_1_i_n_e_simple_function_no_border.xhtml">INESimpleFunctionNoBorder</a> &amp;)=delete</td></tr>
<tr class="memdesc:a0a0586fce7992b016c97e0df7c05b382 inherit pub_methods_classarm__compute_1_1_i_n_e_simple_function_no_border"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="classarm__compute_1_1_i_n_e_simple_function_no_border.xhtml#a0a0586fce7992b016c97e0df7c05b382">More...</a><br /></td></tr>
<tr class="separator:a0a0586fce7992b016c97e0df7c05b382 inherit pub_methods_classarm__compute_1_1_i_n_e_simple_function_no_border"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae935347b3bfcf6681bed61eccf2d34a8 inherit pub_methods_classarm__compute_1_1_i_n_e_simple_function_no_border"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_n_e_simple_function_no_border.xhtml#ae935347b3bfcf6681bed61eccf2d34a8">INESimpleFunctionNoBorder</a> (<a class="el" href="classarm__compute_1_1_i_n_e_simple_function_no_border.xhtml">INESimpleFunctionNoBorder</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:ae935347b3bfcf6681bed61eccf2d34a8 inherit pub_methods_classarm__compute_1_1_i_n_e_simple_function_no_border"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default move constructor.  <a href="classarm__compute_1_1_i_n_e_simple_function_no_border.xhtml#ae935347b3bfcf6681bed61eccf2d34a8">More...</a><br /></td></tr>
<tr class="separator:ae935347b3bfcf6681bed61eccf2d34a8 inherit pub_methods_classarm__compute_1_1_i_n_e_simple_function_no_border"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0cb531073d815579d7d66e712308de8e inherit pub_methods_classarm__compute_1_1_i_n_e_simple_function_no_border"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_n_e_simple_function_no_border.xhtml">INESimpleFunctionNoBorder</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_n_e_simple_function_no_border.xhtml#a0cb531073d815579d7d66e712308de8e">operator=</a> (const <a class="el" href="classarm__compute_1_1_i_n_e_simple_function_no_border.xhtml">INESimpleFunctionNoBorder</a> &amp;)=delete</td></tr>
<tr class="memdesc:a0cb531073d815579d7d66e712308de8e inherit pub_methods_classarm__compute_1_1_i_n_e_simple_function_no_border"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="classarm__compute_1_1_i_n_e_simple_function_no_border.xhtml#a0cb531073d815579d7d66e712308de8e">More...</a><br /></td></tr>
<tr class="separator:a0cb531073d815579d7d66e712308de8e inherit pub_methods_classarm__compute_1_1_i_n_e_simple_function_no_border"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a277fb3ac10c330a77c663823322e1055 inherit pub_methods_classarm__compute_1_1_i_n_e_simple_function_no_border"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_n_e_simple_function_no_border.xhtml">INESimpleFunctionNoBorder</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_n_e_simple_function_no_border.xhtml#a277fb3ac10c330a77c663823322e1055">operator=</a> (<a class="el" href="classarm__compute_1_1_i_n_e_simple_function_no_border.xhtml">INESimpleFunctionNoBorder</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:a277fb3ac10c330a77c663823322e1055 inherit pub_methods_classarm__compute_1_1_i_n_e_simple_function_no_border"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default move assignment operator.  <a href="classarm__compute_1_1_i_n_e_simple_function_no_border.xhtml#a277fb3ac10c330a77c663823322e1055">More...</a><br /></td></tr>
<tr class="separator:a277fb3ac10c330a77c663823322e1055 inherit pub_methods_classarm__compute_1_1_i_n_e_simple_function_no_border"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8b2208ff4f476a7b325b58df9edf7dac inherit pub_methods_classarm__compute_1_1_i_n_e_simple_function_no_border"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_n_e_simple_function_no_border.xhtml#a8b2208ff4f476a7b325b58df9edf7dac">~INESimpleFunctionNoBorder</a> ()</td></tr>
<tr class="memdesc:a8b2208ff4f476a7b325b58df9edf7dac inherit pub_methods_classarm__compute_1_1_i_n_e_simple_function_no_border"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default destructor.  <a href="classarm__compute_1_1_i_n_e_simple_function_no_border.xhtml#a8b2208ff4f476a7b325b58df9edf7dac">More...</a><br /></td></tr>
<tr class="separator:a8b2208ff4f476a7b325b58df9edf7dac inherit pub_methods_classarm__compute_1_1_i_n_e_simple_function_no_border"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a92fe532c342ae2b07956a65520c05362 inherit pub_methods_classarm__compute_1_1_i_n_e_simple_function_no_border"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_n_e_simple_function_no_border.xhtml#a92fe532c342ae2b07956a65520c05362">run</a> () override final</td></tr>
<tr class="memdesc:a92fe532c342ae2b07956a65520c05362 inherit pub_methods_classarm__compute_1_1_i_n_e_simple_function_no_border"><td class="mdescLeft">&#160;</td><td class="mdescRight">Run the kernels contained in the function.  <a href="classarm__compute_1_1_i_n_e_simple_function_no_border.xhtml#a92fe532c342ae2b07956a65520c05362">More...</a><br /></td></tr>
<tr class="separator:a92fe532c342ae2b07956a65520c05362 inherit pub_methods_classarm__compute_1_1_i_n_e_simple_function_no_border"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1_i_function"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1_i_function')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1_i_function.xhtml">IFunction</a></td></tr>
<tr class="memitem:ab921ecc3f3f6ae2b4bd61f3e1998d8c4 inherit pub_methods_classarm__compute_1_1_i_function"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_function.xhtml#ab921ecc3f3f6ae2b4bd61f3e1998d8c4">~IFunction</a> ()=default</td></tr>
<tr class="memdesc:ab921ecc3f3f6ae2b4bd61f3e1998d8c4 inherit pub_methods_classarm__compute_1_1_i_function"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="classarm__compute_1_1_i_function.xhtml#ab921ecc3f3f6ae2b4bd61f3e1998d8c4">More...</a><br /></td></tr>
<tr class="separator:ab921ecc3f3f6ae2b4bd61f3e1998d8c4 inherit pub_methods_classarm__compute_1_1_i_function"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a820f7291c24155a2980512fae45aac26 inherit pub_methods_classarm__compute_1_1_i_function"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_function.xhtml#a820f7291c24155a2980512fae45aac26">prepare</a> ()</td></tr>
<tr class="memdesc:a820f7291c24155a2980512fae45aac26 inherit pub_methods_classarm__compute_1_1_i_function"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prepare the function for executing.  <a href="classarm__compute_1_1_i_function.xhtml#a820f7291c24155a2980512fae45aac26">More...</a><br /></td></tr>
<tr class="separator:a820f7291c24155a2980512fae45aac26 inherit pub_methods_classarm__compute_1_1_i_function"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a0461c1d153545ee744d2b9e56c1dfd9f"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classarm__compute_1_1_status.xhtml">Status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_n_e_scale.xhtml#a0461c1d153545ee744d2b9e56c1dfd9f">validate</a> (const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *input, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output, const <a class="el" href="structarm__compute_1_1_scale_kernel_info.xhtml">ScaleKernelInfo</a> &amp;info)</td></tr>
<tr class="memdesc:a0461c1d153545ee744d2b9e56c1dfd9f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Static function to check if given info will lead to a valid configuration of <a class="el" href="classarm__compute_1_1_n_e_scale.xhtml">NEScale</a>.  <a href="#a0461c1d153545ee744d2b9e56c1dfd9f">More...</a><br /></td></tr>
<tr class="separator:a0461c1d153545ee744d2b9e56c1dfd9f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Basic function to run <a class="el" href="classarm__compute_1_1_n_e_scale_kernel.xhtml">NEScaleKernel</a>. </p>

<p class="definition">Definition at line <a class="el" href="_n_e_scale_8h_source.xhtml#l00037">37</a> of file <a class="el" href="_n_e_scale_8h_source.xhtml">NEScale.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a30a0363a371ac59877079c6ec1962657"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a30a0363a371ac59877079c6ec1962657">&#9670;&nbsp;</a></span>NEScale()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_n_e_scale.xhtml">NEScale</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>
<p>Initialize <a class="el" href="classarm__compute_1_1_n_e_scale.xhtml" title="Basic function to run NEScaleKernel.">NEScale</a> </p>

<p class="definition">Definition at line <a class="el" href="_n_e_scale_8cpp_source.xhtml#l00100">100</a> of file <a class="el" href="_n_e_scale_8cpp_source.xhtml">NEScale.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    : _offsets(), _dx(), _dy()</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;{</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="afe4c55cb7564734d41554649f80df061"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afe4c55cb7564734d41554649f80df061">&#9670;&nbsp;</a></span>configure()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void configure </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__compute_1_1_scale_kernel_info.xhtml">ScaleKernelInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>info</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialize the function's source, destination, interpolation type and border_mode. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">input</td><td>Source tensor. Data type supported: QASYMM8/QASYMM8_SIGNED/U8/S16/F16/F32. (Written to only for <code>border_mode</code> != UNDEFINED) </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">output</td><td>Destination tensor. Data type supported: Same as <code>input</code>. All but the lowest two dimensions must be the same size as in the input tensor, i.e. scaling is only performed within the XY-plane. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">info</td><td><a class="el" href="structarm__compute_1_1_scale_kernel_info.xhtml">ScaleKernelInfo</a> to be used for configuration </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_n_e_scale_8cpp_source.xhtml#l00105">105</a> of file <a class="el" href="_n_e_scale_8cpp_source.xhtml">NEScale.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;{</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, output);</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <a class="code" href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a>(<a class="code" href="classarm__compute_1_1_n_e_scale.xhtml#a0461c1d153545ee744d2b9e56c1dfd9f">NEScale::validate</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;info(), output-&gt;info(), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>));</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span> is_align_corners_used = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>.<a class="code" href="structarm__compute_1_1_scale_kernel_info.xhtml#ae4b9452a8d98cec5e781396d27006c73">align_corners</a> &amp;&amp; <a class="code" href="namespacearm__compute_1_1scale__utils.xhtml#ae89e1815d3845f647832dd3b88b8b015">arm_compute::scale_utils::is_align_corners_allowed_sampling_policy</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>.<a class="code" href="structarm__compute_1_1_scale_kernel_info.xhtml#ad348fa445d9af395a4803fbc7a16eaa3">sampling_policy</a>);</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="comment">// Get data layout and width/height indices</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">DataLayout</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a786677cbfb3f5677b4d84f3056eb08db">data_layout</a> = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;info()-&gt;data_layout();</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span>        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac354c23c8e4921ea8a8ad07e1a1d3fe5">idx_width</a>   = <a class="code" href="namespacearm__compute.xhtml#a46e938020a3ac8c926d0590b7fe957db">get_data_layout_dimension_index</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a786677cbfb3f5677b4d84f3056eb08db">data_layout</a>, <a class="code" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02a49da85b69bc6285eeee286ca49fa7195">DataLayoutDimension::WIDTH</a>);</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span>        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#abb9f749a8ea92dda58cc0881b1450158">idx_height</a>  = <a class="code" href="namespacearm__compute.xhtml#a46e938020a3ac8c926d0590b7fe957db">get_data_layout_dimension_index</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a786677cbfb3f5677b4d84f3056eb08db">data_layout</a>, <a class="code" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02ad770ba3ce18fa409965dfdf5e7c348e6">DataLayoutDimension::HEIGHT</a>);</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <span class="comment">// Get the tensor shape</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    TensorShape <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>(output-&gt;info()-&gt;dimension(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac354c23c8e4921ea8a8ad07e1a1d3fe5">idx_width</a>));</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>.set(1, output-&gt;info()-&gt;dimension(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#abb9f749a8ea92dda58cc0881b1450158">idx_height</a>), <span class="keyword">false</span>);</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <span class="comment">// Compute the ratio between source width/height and destination width/height</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> wr = <a class="code" href="namespacearm__compute_1_1scale__utils.xhtml#a8c25b29542a5312b947f72e5ea5c825b">arm_compute::scale_utils::calculate_resize_ratio</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;info()-&gt;dimension(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac354c23c8e4921ea8a8ad07e1a1d3fe5">idx_width</a>), output-&gt;info()-&gt;dimension(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac354c23c8e4921ea8a8ad07e1a1d3fe5">idx_width</a>), is_align_corners_used);</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> hr = <a class="code" href="namespacearm__compute_1_1scale__utils.xhtml#a8c25b29542a5312b947f72e5ea5c825b">arm_compute::scale_utils::calculate_resize_ratio</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;info()-&gt;dimension(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#abb9f749a8ea92dda58cc0881b1450158">idx_height</a>), output-&gt;info()-&gt;dimension(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#abb9f749a8ea92dda58cc0881b1450158">idx_height</a>), is_align_corners_used);</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <span class="comment">// Area interpolation behaves as Nearest Neighbour in case of up-sampling</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> policy_to_use = (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>.<a class="code" href="structarm__compute_1_1_scale_kernel_info.xhtml#a61b93996076d0e0da8bf19cc3aa95bd7">interpolation_policy</a> == <a class="code" href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9a639aaa22a784d5e5cb03a522267e79c4">InterpolationPolicy::AREA</a> &amp;&amp; wr &lt;= 1.f &amp;&amp; hr &lt;= 1.f) ? <a class="code" href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9a7f5ccbc3d30c2cd3fd04d567946cbde2">InterpolationPolicy::NEAREST_NEIGHBOR</a> : <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>.<a class="code" href="structarm__compute_1_1_scale_kernel_info.xhtml#a61b93996076d0e0da8bf19cc3aa95bd7">interpolation_policy</a>;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <span class="keyword">auto</span> scale_kernel = arm_compute::support::cpp14::make_unique&lt;NEScaleKernel&gt;();</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <span class="keywordflow">switch</span>(policy_to_use)</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    {</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9a7f5ccbc3d30c2cd3fd04d567946cbde2">InterpolationPolicy::NEAREST_NEIGHBOR</a>:</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        {</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;            TensorInfo tensor_info_offsets(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c">Format::S32</a>);</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;            _offsets.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a3fc6adad84b23f10d54d5a7b6928f872">init</a>(tensor_info_offsets);</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;            scale_kernel-&gt;configure(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <span class="keyword">nullptr</span>, <span class="keyword">nullptr</span>, &amp;_offsets, output, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>);</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;            <span class="comment">// Allocate once the configure methods have been called</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;            _offsets.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;            <span class="comment">// Pre-compute offsets for nearest interpolation</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;            precompute_dx_dy_offsets(<span class="keyword">nullptr</span>, <span class="keyword">nullptr</span>, &amp;_offsets, wr, hr, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>.<a class="code" href="structarm__compute_1_1_scale_kernel_info.xhtml#ad348fa445d9af395a4803fbc7a16eaa3">sampling_policy</a>, is_align_corners_used);</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        }</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9aad6fddf718ad19b063e02fdd7e8e3e65">InterpolationPolicy::BILINEAR</a>:</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        {</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;            TensorInfo tensor_info_offsets(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c">Format::S32</a>);</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;            TensorInfo tensor_info_dxdy(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">Format::F32</a>);</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;            _offsets.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a3fc6adad84b23f10d54d5a7b6928f872">init</a>(tensor_info_offsets);</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;            _dx.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a3fc6adad84b23f10d54d5a7b6928f872">init</a>(tensor_info_dxdy);</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;            _dy.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a3fc6adad84b23f10d54d5a7b6928f872">init</a>(tensor_info_dxdy);</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;            scale_kernel-&gt;configure(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, &amp;_dx, &amp;_dy, &amp;_offsets, output, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>);</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;            <span class="comment">// Allocate once the configure methods have been called</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;            _offsets.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;            _dx.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;            _dy.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;            <span class="comment">// Pre-compute dx, dy and offsets for bilinear interpolation</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;            precompute_dx_dy_offsets(&amp;_dx, &amp;_dy, &amp;_offsets, wr, hr, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>.<a class="code" href="structarm__compute_1_1_scale_kernel_info.xhtml#ad348fa445d9af395a4803fbc7a16eaa3">sampling_policy</a>, is_align_corners_used);</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        }</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9a639aaa22a784d5e5cb03a522267e79c4">InterpolationPolicy::AREA</a>:</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        {</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;            scale_kernel-&gt;configure(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <span class="keyword">nullptr</span>, <span class="keyword">nullptr</span>, <span class="keyword">nullptr</span>, output, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>);</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;        }</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        <span class="keywordflow">default</span>:</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;            <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Unsupported interpolation mode&quot;</span>);</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    }</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    _kernel = std::move(scale_kernel);</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;}</div><div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a45cde9abb508c62d67c3bb2b9bf566a5"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">arm_compute::test::validation::shape</a></div><div class="ttdeci">shape</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00115">DFT.cpp:115</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_ac354c23c8e4921ea8a8ad07e1a1d3fe5"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ac354c23c8e4921ea8a8ad07e1a1d3fe5">arm_compute::test::validation::idx_width</a></div><div class="ttdeci">const int idx_width</div><div class="ttdef"><b>Definition:</b> <a href="validation_2_n_e_o_n_2_scale_8cpp_source.xhtml#l00265">Scale.cpp:265</a></div></div>
<div class="ttc" id="structarm__compute_1_1_scale_kernel_info_xhtml_a61b93996076d0e0da8bf19cc3aa95bd7"><div class="ttname"><a href="structarm__compute_1_1_scale_kernel_info.xhtml#a61b93996076d0e0da8bf19cc3aa95bd7">arm_compute::ScaleKernelInfo::interpolation_policy</a></div><div class="ttdeci">InterpolationPolicy interpolation_policy</div><div class="ttdoc">Interpolation type to use.</div><div class="ttdef"><b>Definition:</b> <a href="_kernel_descriptors_8h_source.xhtml#l00201">KernelDescriptors.h:201</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_allocator_xhtml_a3fc6adad84b23f10d54d5a7b6928f872"><div class="ttname"><a href="classarm__compute_1_1_tensor_allocator.xhtml#a3fc6adad84b23f10d54d5a7b6928f872">arm_compute::TensorAllocator::init</a></div><div class="ttdeci">void init(const TensorAllocator &amp;allocator, const Coordinates &amp;coords, TensorInfo &amp;sub_info)</div><div class="ttdoc">Shares the same backing memory with another tensor allocator, while the tensor info might be differen...</div><div class="ttdef"><b>Definition:</b> <a href="src_2runtime_2_tensor_allocator_8cpp_source.xhtml#l00108">TensorAllocator.cpp:108</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a7cf8d8b669b8f7b05680230be30d60f4"><div class="ttname"><a href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR(msg)</div><div class="ttdoc">Print the given message then throw an std::runtime_error.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00352">Error.h:352</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">arm_compute::Format::F32</a></div><div class="ttdoc">1 channel, 1 F32 per channel</div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a74ce3f7420453d3446218ff3b7453e02ad770ba3ce18fa409965dfdf5e7c348e6"><div class="ttname"><a href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02ad770ba3ce18fa409965dfdf5e7c348e6">arm_compute::DataLayoutDimension::HEIGHT</a></div><div class="ttdoc">height</div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a966a9c417ce5e94dca08d9b5e745c0c9aad6fddf718ad19b063e02fdd7e8e3e65"><div class="ttname"><a href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9aad6fddf718ad19b063e02fdd7e8e3e65">arm_compute::InterpolationPolicy::BILINEAR</a></div><div class="ttdoc">Output values are defined by bilinear interpolation between the pixels.</div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a786677cbfb3f5677b4d84f3056eb08db"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a786677cbfb3f5677b4d84f3056eb08db">arm_compute::test::validation::data_layout</a></div><div class="ttdeci">const DataLayout data_layout</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_o_n_2_im2_col_8cpp_source.xhtml#l00146">Im2Col.cpp:146</a></div></div>
<div class="ttc" id="structarm__compute_1_1_scale_kernel_info_xhtml_ae4b9452a8d98cec5e781396d27006c73"><div class="ttname"><a href="structarm__compute_1_1_scale_kernel_info.xhtml#ae4b9452a8d98cec5e781396d27006c73">arm_compute::ScaleKernelInfo::align_corners</a></div><div class="ttdeci">bool align_corners</div><div class="ttdoc">Align corners of input and output.</div><div class="ttdef"><b>Definition:</b> <a href="_kernel_descriptors_8h_source.xhtml#l00206">KernelDescriptors.h:206</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a938dcd406ce611ef5345ad2531cdb948"><div class="ttname"><a href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_THROW_ON(status)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00455">Error.h:455</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a966a9c417ce5e94dca08d9b5e745c0c9a7f5ccbc3d30c2cd3fd04d567946cbde2"><div class="ttname"><a href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9a7f5ccbc3d30c2cd3fd04d567946cbde2">arm_compute::InterpolationPolicy::NEAREST_NEIGHBOR</a></div><div class="ttdoc">Output values are defined to match the source pixel whose center is nearest to the sample position.</div></div>
<div class="ttc" id="namespacearm__compute_1_1scale__utils_xhtml_ae89e1815d3845f647832dd3b88b8b015"><div class="ttname"><a href="namespacearm__compute_1_1scale__utils.xhtml#ae89e1815d3845f647832dd3b88b8b015">arm_compute::scale_utils::is_align_corners_allowed_sampling_policy</a></div><div class="ttdeci">bool is_align_corners_allowed_sampling_policy(SamplingPolicy sampling_policy)</div><div class="ttdoc">Returns if aligned corners are allowed for the given sampling policy.</div><div class="ttdef"><b>Definition:</b> <a href="_scale_utils_8h_source.xhtml#l00052">ScaleUtils.h:52</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_xhtml_adbd0cf83a8e1b335a9bf405a8e5019fa"><div class="ttname"><a href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">arm_compute::Tensor::allocator</a></div><div class="ttdeci">TensorAllocator * allocator()</div><div class="ttdoc">Return a pointer to the tensor's allocator.</div><div class="ttdef"><b>Definition:</b> <a href="runtime_2_tensor_8cpp_source.xhtml#l00048">Tensor.cpp:48</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a8fcf2ddd9a1d58b1b280f5c0aed71845"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">arm_compute::test::validation::input</a></div><div class="ttdeci">auto input</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00486">LSTMLayerQuantized.cpp:486</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c">arm_compute::Format::S32</a></div><div class="ttdoc">1 channel, 1 S32 per channel</div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_scale_xhtml_a0461c1d153545ee744d2b9e56c1dfd9f"><div class="ttname"><a href="classarm__compute_1_1_n_e_scale.xhtml#a0461c1d153545ee744d2b9e56c1dfd9f">arm_compute::NEScale::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input, const ITensorInfo *output, const ScaleKernelInfo &amp;info)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of NEScale.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_scale_8cpp_source.xhtml#l00176">NEScale.cpp:176</a></div></div>
<div class="ttc" id="structarm__compute_1_1_scale_kernel_info_xhtml_ad348fa445d9af395a4803fbc7a16eaa3"><div class="ttname"><a href="structarm__compute_1_1_scale_kernel_info.xhtml#ad348fa445d9af395a4803fbc7a16eaa3">arm_compute::ScaleKernelInfo::sampling_policy</a></div><div class="ttdeci">SamplingPolicy sampling_policy</div><div class="ttdoc">Sampling policy used by the interpolation.</div><div class="ttdef"><b>Definition:</b> <a href="_kernel_descriptors_8h_source.xhtml#l00204">KernelDescriptors.h:204</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_abb9f749a8ea92dda58cc0881b1450158"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#abb9f749a8ea92dda58cc0881b1450158">arm_compute::test::validation::idx_height</a></div><div class="ttdeci">const int idx_height</div><div class="ttdef"><b>Definition:</b> <a href="validation_2_n_e_o_n_2_scale_8cpp_source.xhtml#l00266">Scale.cpp:266</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_allocator_xhtml_a6e509c2a177b0b29e9e2369535094dee"><div class="ttname"><a href="classarm__compute_1_1_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">arm_compute::TensorAllocator::allocate</a></div><div class="ttdeci">void allocate() override</div><div class="ttdoc">Allocate size specified by TensorInfo of CPU memory.</div><div class="ttdef"><b>Definition:</b> <a href="src_2runtime_2_tensor_allocator_8cpp_source.xhtml#l00133">TensorAllocator.cpp:133</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a966a9c417ce5e94dca08d9b5e745c0c9a639aaa22a784d5e5cb03a522267e79c4"><div class="ttname"><a href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9a639aaa22a784d5e5cb03a522267e79c4">arm_compute::InterpolationPolicy::AREA</a></div><div class="ttdoc">Output values are determined by averaging the source pixels whose areas fall under the area of the de...</div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_ac57b92957968088a392021cac1d2076b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">arm_compute::test::validation::info</a></div><div class="ttdeci">ScaleKernelInfo info(interpolation_policy, default_border_mode, PixelValue(), sampling_policy, false)</div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a74ce3f7420453d3446218ff3b7453e02a49da85b69bc6285eeee286ca49fa7195"><div class="ttname"><a href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02a49da85b69bc6285eeee286ca49fa7195">arm_compute::DataLayoutDimension::WIDTH</a></div><div class="ttdoc">width</div></div>
<div class="ttc" id="arm__compute_2core_2_validate_8h_xhtml_a921b705e9e3e0fe928928447869e62a5"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_NULLPTR(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00161">Validate.h:161</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1scale__utils_xhtml_a8c25b29542a5312b947f72e5ea5c825b"><div class="ttname"><a href="namespacearm__compute_1_1scale__utils.xhtml#a8c25b29542a5312b947f72e5ea5c825b">arm_compute::scale_utils::calculate_resize_ratio</a></div><div class="ttdeci">float calculate_resize_ratio(size_t input_size, size_t output_size, bool align_corners=false)</div><div class="ttdoc">Returns resize ratio between input and output with consideration of aligned corners.</div><div class="ttdef"><b>Definition:</b> <a href="_scale_utils_8cpp_source.xhtml#l00027">ScaleUtils.cpp:27</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a46e938020a3ac8c926d0590b7fe957db"><div class="ttname"><a href="namespacearm__compute.xhtml#a46e938020a3ac8c926d0590b7fe957db">arm_compute::get_data_layout_dimension_index</a></div><div class="ttdeci">size_t get_data_layout_dimension_index(const DataLayout data_layout, const DataLayoutDimension data_layout_dimension)</div><div class="ttdoc">Get the index of the given dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_helpers_8inl_source.xhtml#l00193">Helpers.inl:193</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0"><div class="ttname"><a href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">arm_compute::DataLayout</a></div><div class="ttdeci">DataLayout</div><div class="ttdoc">[DataLayout enum definition]</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00120">Types.h:120</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_kernel_descriptors_8h_source.xhtml#l00206">ScaleKernelInfo::align_corners</a>, <a class="el" href="src_2runtime_2_tensor_allocator_8cpp_source.xhtml#l00133">TensorAllocator::allocate()</a>, <a class="el" href="runtime_2_tensor_8cpp_source.xhtml#l00048">Tensor::allocator()</a>, <a class="el" href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9a639aaa22a784d5e5cb03a522267e79c4">arm_compute::AREA</a>, <a class="el" href="_error_8h_source.xhtml#l00352">ARM_COMPUTE_ERROR</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00161">ARM_COMPUTE_ERROR_ON_NULLPTR</a>, <a class="el" href="_error_8h_source.xhtml#l00455">ARM_COMPUTE_ERROR_THROW_ON</a>, <a class="el" href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9aad6fddf718ad19b063e02fdd7e8e3e65">arm_compute::BILINEAR</a>, <a class="el" href="_scale_utils_8cpp_source.xhtml#l00027">arm_compute::scale_utils::calculate_resize_ratio()</a>, <a class="el" href="_n_e_o_n_2_im2_col_8cpp_source.xhtml#l00146">arm_compute::test::validation::data_layout</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">ITensorInfo::dimension()</a>, <a class="el" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">arm_compute::F32</a>, <a class="el" href="_helpers_8inl_source.xhtml#l00193">arm_compute::get_data_layout_dimension_index()</a>, <a class="el" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02ad770ba3ce18fa409965dfdf5e7c348e6">arm_compute::HEIGHT</a>, <a class="el" href="validation_2_n_e_o_n_2_scale_8cpp_source.xhtml#l00266">arm_compute::test::validation::idx_height</a>, <a class="el" href="validation_2_n_e_o_n_2_scale_8cpp_source.xhtml#l00265">arm_compute::test::validation::idx_width</a>, <a class="el" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">ITensor::info()</a>, <a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">arm_compute::test::validation::info</a>, <a class="el" href="src_2runtime_2_tensor_allocator_8cpp_source.xhtml#l00108">TensorAllocator::init()</a>, <a class="el" href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00486">arm_compute::test::validation::input</a>, <a class="el" href="_kernel_descriptors_8h_source.xhtml#l00201">ScaleKernelInfo::interpolation_policy</a>, <a class="el" href="_scale_utils_8h_source.xhtml#l00052">arm_compute::scale_utils::is_align_corners_allowed_sampling_policy()</a>, <a class="el" href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9a7f5ccbc3d30c2cd3fd04d567946cbde2">arm_compute::NEAREST_NEIGHBOR</a>, <a class="el" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c">arm_compute::S32</a>, <a class="el" href="_kernel_descriptors_8h_source.xhtml#l00204">ScaleKernelInfo::sampling_policy</a>, <a class="el" href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00115">arm_compute::test::validation::shape</a>, <a class="el" href="_n_e_scale_8cpp_source.xhtml#l00176">NEScale::validate()</a>, and <a class="el" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02a49da85b69bc6285eeee286ca49fa7195">arm_compute::WIDTH</a>.</p>

</div>
</div>
<a id="a0461c1d153545ee744d2b9e56c1dfd9f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0461c1d153545ee744d2b9e56c1dfd9f">&#9670;&nbsp;</a></span>validate()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_status.xhtml">Status</a> validate </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__compute_1_1_scale_kernel_info.xhtml">ScaleKernelInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>info</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Static function to check if given info will lead to a valid configuration of <a class="el" href="classarm__compute_1_1_n_e_scale.xhtml">NEScale</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">input</td><td>Source tensor. Data type supported: QASYMM8/QASYMM8_SIGNED/U8/S16/F16/F32. (Written to only for <code>border_mode</code> != UNDEFINED) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">output</td><td>Destination tensor. Data type supported: Same as <code>input</code>. All but the lowest two dimensions must be the same size as in the input tensor, i.e. scaling is only performed within the XY-plane. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">info</td><td><a class="el" href="structarm__compute_1_1_scale_kernel_info.xhtml">ScaleKernelInfo</a> to be used for validation</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>a status </dd></dl>

<p class="definition">Definition at line <a class="el" href="_n_e_scale_8cpp_source.xhtml#l00176">176</a> of file <a class="el" href="_n_e_scale_8cpp_source.xhtml">NEScale.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;{</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#aff911654521523937ff24372a870b89f">ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, output);</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>.<a class="code" href="structarm__compute_1_1_scale_kernel_info.xhtml#ad348fa445d9af395a4803fbc7a16eaa3">sampling_policy</a> != <a class="code" href="namespacearm__compute.xhtml#a16a59381d4d74d17d86d69eb4d286d7bac397289ee45877be0cd49811fe245b4e">SamplingPolicy::CENTER</a> &amp;&amp; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>.<a class="code" href="structarm__compute_1_1_scale_kernel_info.xhtml#ad348fa445d9af395a4803fbc7a16eaa3">sampling_policy</a> != <a class="code" href="namespacearm__compute.xhtml#a16a59381d4d74d17d86d69eb4d286d7ba747385047b85ae751f83adb36435a3c1">SamplingPolicy::TOP_LEFT</a>);</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    ITensorInfo *offsets = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    ITensorInfo *dx      = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    ITensorInfo *dy      = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    <span class="comment">// Get data layout and width/height indices</span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">DataLayout</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a786677cbfb3f5677b4d84f3056eb08db">data_layout</a> = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;data_layout();</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span>        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac354c23c8e4921ea8a8ad07e1a1d3fe5">idx_width</a>   = <a class="code" href="namespacearm__compute.xhtml#a46e938020a3ac8c926d0590b7fe957db">get_data_layout_dimension_index</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a786677cbfb3f5677b4d84f3056eb08db">data_layout</a>, <a class="code" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02a49da85b69bc6285eeee286ca49fa7195">DataLayoutDimension::WIDTH</a>);</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span>        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#abb9f749a8ea92dda58cc0881b1450158">idx_height</a>  = <a class="code" href="namespacearm__compute.xhtml#a46e938020a3ac8c926d0590b7fe957db">get_data_layout_dimension_index</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a786677cbfb3f5677b4d84f3056eb08db">data_layout</a>, <a class="code" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02ad770ba3ce18fa409965dfdf5e7c348e6">DataLayoutDimension::HEIGHT</a>);</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    <span class="comment">// Get the tensor shape of auxilary buffers</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    <span class="keyword">const</span> TensorShape <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>(output-&gt;dimension(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac354c23c8e4921ea8a8ad07e1a1d3fe5">idx_width</a>), output-&gt;dimension(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#abb9f749a8ea92dda58cc0881b1450158">idx_height</a>));</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    TensorInfo tensor_info_offsets(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c">Format::S32</a>);</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    TensorInfo tensor_info_dx(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">Format::F32</a>);</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    TensorInfo tensor_info_dy(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">Format::F32</a>);</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    <span class="keywordflow">switch</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>.<a class="code" href="structarm__compute_1_1_scale_kernel_info.xhtml#a61b93996076d0e0da8bf19cc3aa95bd7">interpolation_policy</a>)</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    {</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9a7f5ccbc3d30c2cd3fd04d567946cbde2">InterpolationPolicy::NEAREST_NEIGHBOR</a>:</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;            offsets = &amp;tensor_info_offsets;</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9aad6fddf718ad19b063e02fdd7e8e3e65">InterpolationPolicy::BILINEAR</a>:</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;            offsets = &amp;tensor_info_offsets;</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;            dx      = &amp;tensor_info_dx;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;            dy      = &amp;tensor_info_dy;</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;        <span class="keywordflow">default</span>:</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    }</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_n_e_scale_kernel.xhtml#af183ea6bfada77d4e1e706a43fb2edf6">NEScaleKernel::validate</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;clone().get(), dx, dy, offsets, output-&gt;clone().get(), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>));</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    <span class="keywordflow">return</span> Status{};</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;}</div><div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a45cde9abb508c62d67c3bb2b9bf566a5"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">arm_compute::test::validation::shape</a></div><div class="ttdeci">shape</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00115">DFT.cpp:115</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_ac354c23c8e4921ea8a8ad07e1a1d3fe5"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ac354c23c8e4921ea8a8ad07e1a1d3fe5">arm_compute::test::validation::idx_width</a></div><div class="ttdeci">const int idx_width</div><div class="ttdef"><b>Definition:</b> <a href="validation_2_n_e_o_n_2_scale_8cpp_source.xhtml#l00265">Scale.cpp:265</a></div></div>
<div class="ttc" id="structarm__compute_1_1_scale_kernel_info_xhtml_a61b93996076d0e0da8bf19cc3aa95bd7"><div class="ttname"><a href="structarm__compute_1_1_scale_kernel_info.xhtml#a61b93996076d0e0da8bf19cc3aa95bd7">arm_compute::ScaleKernelInfo::interpolation_policy</a></div><div class="ttdeci">InterpolationPolicy interpolation_policy</div><div class="ttdoc">Interpolation type to use.</div><div class="ttdef"><b>Definition:</b> <a href="_kernel_descriptors_8h_source.xhtml#l00201">KernelDescriptors.h:201</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a8a1e1c105f0bdaf37db408c7cfcb77a4"><div class="ttname"><a href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ON_ERROR(status)</div><div class="ttdoc">Checks if a status contains an error and returns it.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00204">Error.h:204</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">arm_compute::Format::F32</a></div><div class="ttdoc">1 channel, 1 F32 per channel</div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a74ce3f7420453d3446218ff3b7453e02ad770ba3ce18fa409965dfdf5e7c348e6"><div class="ttname"><a href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02ad770ba3ce18fa409965dfdf5e7c348e6">arm_compute::DataLayoutDimension::HEIGHT</a></div><div class="ttdoc">height</div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a966a9c417ce5e94dca08d9b5e745c0c9aad6fddf718ad19b063e02fdd7e8e3e65"><div class="ttname"><a href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9aad6fddf718ad19b063e02fdd7e8e3e65">arm_compute::InterpolationPolicy::BILINEAR</a></div><div class="ttdoc">Output values are defined by bilinear interpolation between the pixels.</div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a786677cbfb3f5677b4d84f3056eb08db"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a786677cbfb3f5677b4d84f3056eb08db">arm_compute::test::validation::data_layout</a></div><div class="ttdeci">const DataLayout data_layout</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_o_n_2_im2_col_8cpp_source.xhtml#l00146">Im2Col.cpp:146</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a966a9c417ce5e94dca08d9b5e745c0c9a7f5ccbc3d30c2cd3fd04d567946cbde2"><div class="ttname"><a href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9a7f5ccbc3d30c2cd3fd04d567946cbde2">arm_compute::InterpolationPolicy::NEAREST_NEIGHBOR</a></div><div class="ttdoc">Output values are defined to match the source pixel whose center is nearest to the sample position.</div></div>
<div class="ttc" id="_error_8h_xhtml_a206d6e247e0957ac3dee45d27756fc25"><div class="ttname"><a href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true, an error is returned.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00296">Error.h:296</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a16a59381d4d74d17d86d69eb4d286d7bac397289ee45877be0cd49811fe245b4e"><div class="ttname"><a href="namespacearm__compute.xhtml#a16a59381d4d74d17d86d69eb4d286d7bac397289ee45877be0cd49811fe245b4e">arm_compute::SamplingPolicy::CENTER</a></div><div class="ttdoc">Samples are taken at pixel center.</div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a8fcf2ddd9a1d58b1b280f5c0aed71845"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">arm_compute::test::validation::input</a></div><div class="ttdeci">auto input</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00486">LSTMLayerQuantized.cpp:486</a></div></div>
<div class="ttc" id="arm__compute_2core_2_validate_8h_xhtml_aff911654521523937ff24372a870b89f"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#aff911654521523937ff24372a870b89f">ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00163">Validate.h:163</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c">arm_compute::Format::S32</a></div><div class="ttdoc">1 channel, 1 S32 per channel</div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_scale_kernel_xhtml_af183ea6bfada77d4e1e706a43fb2edf6"><div class="ttname"><a href="classarm__compute_1_1_n_e_scale_kernel.xhtml#af183ea6bfada77d4e1e706a43fb2edf6">arm_compute::NEScaleKernel::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input, const ITensorInfo *dx, const ITensorInfo *dy, const ITensorInfo *offsets, ITensorInfo *output, const ScaleKernelInfo &amp;info)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of NEScaleKernel.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_scale_kernel_8cpp_source.xhtml#l00613">NEScaleKernel.cpp:613</a></div></div>
<div class="ttc" id="structarm__compute_1_1_scale_kernel_info_xhtml_ad348fa445d9af395a4803fbc7a16eaa3"><div class="ttname"><a href="structarm__compute_1_1_scale_kernel_info.xhtml#ad348fa445d9af395a4803fbc7a16eaa3">arm_compute::ScaleKernelInfo::sampling_policy</a></div><div class="ttdeci">SamplingPolicy sampling_policy</div><div class="ttdoc">Sampling policy used by the interpolation.</div><div class="ttdef"><b>Definition:</b> <a href="_kernel_descriptors_8h_source.xhtml#l00204">KernelDescriptors.h:204</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_abb9f749a8ea92dda58cc0881b1450158"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#abb9f749a8ea92dda58cc0881b1450158">arm_compute::test::validation::idx_height</a></div><div class="ttdeci">const int idx_height</div><div class="ttdef"><b>Definition:</b> <a href="validation_2_n_e_o_n_2_scale_8cpp_source.xhtml#l00266">Scale.cpp:266</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a16a59381d4d74d17d86d69eb4d286d7ba747385047b85ae751f83adb36435a3c1"><div class="ttname"><a href="namespacearm__compute.xhtml#a16a59381d4d74d17d86d69eb4d286d7ba747385047b85ae751f83adb36435a3c1">arm_compute::SamplingPolicy::TOP_LEFT</a></div><div class="ttdoc">Samples are taken at pixel top left corner.</div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_ac57b92957968088a392021cac1d2076b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">arm_compute::test::validation::info</a></div><div class="ttdeci">ScaleKernelInfo info(interpolation_policy, default_border_mode, PixelValue(), sampling_policy, false)</div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a74ce3f7420453d3446218ff3b7453e02a49da85b69bc6285eeee286ca49fa7195"><div class="ttname"><a href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02a49da85b69bc6285eeee286ca49fa7195">arm_compute::DataLayoutDimension::WIDTH</a></div><div class="ttdoc">width</div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a46e938020a3ac8c926d0590b7fe957db"><div class="ttname"><a href="namespacearm__compute.xhtml#a46e938020a3ac8c926d0590b7fe957db">arm_compute::get_data_layout_dimension_index</a></div><div class="ttdeci">size_t get_data_layout_dimension_index(const DataLayout data_layout, const DataLayoutDimension data_layout_dimension)</div><div class="ttdoc">Get the index of the given dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_helpers_8inl_source.xhtml#l00193">Helpers.inl:193</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0"><div class="ttname"><a href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">arm_compute::DataLayout</a></div><div class="ttdeci">DataLayout</div><div class="ttdoc">[DataLayout enum definition]</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00120">Types.h:120</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00296">ARM_COMPUTE_RETURN_ERROR_ON</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00163">ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR</a>, <a class="el" href="_error_8h_source.xhtml#l00204">ARM_COMPUTE_RETURN_ON_ERROR</a>, <a class="el" href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9aad6fddf718ad19b063e02fdd7e8e3e65">arm_compute::BILINEAR</a>, <a class="el" href="namespacearm__compute.xhtml#a16a59381d4d74d17d86d69eb4d286d7bac397289ee45877be0cd49811fe245b4e">arm_compute::CENTER</a>, <a class="el" href="classarm__compute_1_1misc_1_1_i_cloneable.xhtml#a4d10e5012a872e7f78f2b539b673049d">ICloneable&lt; T &gt;::clone()</a>, <a class="el" href="_n_e_o_n_2_im2_col_8cpp_source.xhtml#l00146">arm_compute::test::validation::data_layout</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">ITensorInfo::dimension()</a>, <a class="el" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">arm_compute::F32</a>, <a class="el" href="_helpers_8inl_source.xhtml#l00193">arm_compute::get_data_layout_dimension_index()</a>, <a class="el" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02ad770ba3ce18fa409965dfdf5e7c348e6">arm_compute::HEIGHT</a>, <a class="el" href="validation_2_n_e_o_n_2_scale_8cpp_source.xhtml#l00266">arm_compute::test::validation::idx_height</a>, <a class="el" href="validation_2_n_e_o_n_2_scale_8cpp_source.xhtml#l00265">arm_compute::test::validation::idx_width</a>, <a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">arm_compute::test::validation::info</a>, <a class="el" href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00486">arm_compute::test::validation::input</a>, <a class="el" href="_kernel_descriptors_8h_source.xhtml#l00201">ScaleKernelInfo::interpolation_policy</a>, <a class="el" href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9a7f5ccbc3d30c2cd3fd04d567946cbde2">arm_compute::NEAREST_NEIGHBOR</a>, <a class="el" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c">arm_compute::S32</a>, <a class="el" href="_kernel_descriptors_8h_source.xhtml#l00204">ScaleKernelInfo::sampling_policy</a>, <a class="el" href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00115">arm_compute::test::validation::shape</a>, <a class="el" href="namespacearm__compute.xhtml#a16a59381d4d74d17d86d69eb4d286d7ba747385047b85ae751f83adb36435a3c1">arm_compute::TOP_LEFT</a>, <a class="el" href="_n_e_scale_kernel_8cpp_source.xhtml#l00613">NEScaleKernel::validate()</a>, and <a class="el" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02a49da85b69bc6285eeee286ca49fa7195">arm_compute::WIDTH</a>.</p>

<p class="reference">Referenced by <a class="el" href="_n_e_scale_8cpp_source.xhtml#l00105">NEScale::configure()</a>, and <a class="el" href="validation_2_n_e_o_n_2_scale_8cpp_source.xhtml#l00189">arm_compute::test::validation::TEST_CASE()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>arm_compute/runtime/NEON/functions/<a class="el" href="_n_e_scale_8h_source.xhtml">NEScale.h</a></li>
<li>src/runtime/NEON/functions/<a class="el" href="_n_e_scale_8cpp_source.xhtml">NEScale.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_n_e_scale.xhtml">NEScale</a></li>
    <li class="footer">Generated on Fri Nov 27 2020 13:50:55 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
