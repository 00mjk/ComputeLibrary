<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: GemvPretransposed&lt; strategy, To, Tr &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__gemm_1_1_gemv_pretransposed.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">GemvPretransposed&lt; strategy, To, Tr &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="gemv__pretransposed_8hpp_source.xhtml">gemv_pretransposed.hpp</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for GemvPretransposed&lt; strategy, To, Tr &gt;:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classarm__gemm_1_1_gemv_pretransposed__coll__graph.svg" width="198" height="127"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a1721e8ac2ad69c15d7c13a063d4c00c4"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_gemv_pretransposed.xhtml#a1721e8ac2ad69c15d7c13a063d4c00c4">GemvPretransposed</a> (<a class="el" href="classarm__gemm_1_1_gemv_pretransposed.xhtml">GemvPretransposed</a> &amp;)=delete</td></tr>
<tr class="separator:a1721e8ac2ad69c15d7c13a063d4c00c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4bd9591d6da5b65a99c56f82acc14c4c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__gemm_1_1_gemv_pretransposed.xhtml">GemvPretransposed</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_gemv_pretransposed.xhtml#a4bd9591d6da5b65a99c56f82acc14c4c">operator=</a> (<a class="el" href="classarm__gemm_1_1_gemv_pretransposed.xhtml">GemvPretransposed</a> &amp;)=delete</td></tr>
<tr class="separator:a4bd9591d6da5b65a99c56f82acc14c4c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0df30a3c7eef1ac61383dc72c653c34c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_gemv_pretransposed.xhtml#a0df30a3c7eef1ac61383dc72c653c34c">GemvPretransposed</a> (const GemmArgs &amp;args)</td></tr>
<tr class="separator:a0df30a3c7eef1ac61383dc72c653c34c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8f983ca114ef72d25515a8651ea1d0e7"><td class="memItemLeft" align="right" valign="top">ndrange_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_gemv_pretransposed.xhtml#a8f983ca114ef72d25515a8651ea1d0e7">get_window_size</a> () const override</td></tr>
<tr class="separator:a8f983ca114ef72d25515a8651ea1d0e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d37407e8d582183b35dedbf7fa43b43"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_gemv_pretransposed.xhtml#a1d37407e8d582183b35dedbf7fa43b43">execute</a> (const ndcoord_t &amp;work_range, const ndcoord_t &amp;, int) override</td></tr>
<tr class="separator:a1d37407e8d582183b35dedbf7fa43b43"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac5dec5063a75604fdc60555f15577b94"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_gemv_pretransposed.xhtml#ac5dec5063a75604fdc60555f15577b94">B_is_pretransposed</a> () const override</td></tr>
<tr class="separator:ac5dec5063a75604fdc60555f15577b94"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa7cfff39cbb2be65cd40042a75e5ae1c"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_gemv_pretransposed.xhtml#aa7cfff39cbb2be65cd40042a75e5ae1c">B_pretranspose_required</a> () const override</td></tr>
<tr class="separator:aa7cfff39cbb2be65cd40042a75e5ae1c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae9fc7380e533c43a1d91e48a7578e412"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_gemv_pretransposed.xhtml#ae9fc7380e533c43a1d91e48a7578e412">get_B_pretransposed_array_size</a> () const override</td></tr>
<tr class="separator:ae9fc7380e533c43a1d91e48a7578e412"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a28341e4e1158f3446a8dfa13c9f5c6f0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_gemv_pretransposed.xhtml#a28341e4e1158f3446a8dfa13c9f5c6f0">pretranspose_B_array</a> (void *buffer, const To *B, const int ldb, const int B_multi_stride) override</td></tr>
<tr class="separator:a28341e4e1158f3446a8dfa13c9f5c6f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a27df64c6276eb144594c5d37d1110b20"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_gemv_pretransposed.xhtml#a27df64c6276eb144594c5d37d1110b20">set_pretransposed_B_data</a> (void *buffer) override</td></tr>
<tr class="separator:a27df64c6276eb144594c5d37d1110b20"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;typename strategy, typename To, typename Tr&gt;<br />
class arm_gemm::GemvPretransposed&lt; strategy, To, Tr &gt;</h3>


<p class="definition">Definition at line <a class="el" href="gemv__pretransposed_8hpp_source.xhtml#l00045">45</a> of file <a class="el" href="gemv__pretransposed_8hpp_source.xhtml">gemv_pretransposed.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a1721e8ac2ad69c15d7c13a063d4c00c4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1721e8ac2ad69c15d7c13a063d4c00c4">&#9670;&nbsp;</a></span>GemvPretransposed() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__gemm_1_1_gemv_pretransposed.xhtml">GemvPretransposed</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__gemm_1_1_gemv_pretransposed.xhtml">GemvPretransposed</a>&lt; strategy, To, Tr &gt; &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a0df30a3c7eef1ac61383dc72c653c34c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0df30a3c7eef1ac61383dc72c653c34c">&#9670;&nbsp;</a></span>GemvPretransposed() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__gemm_1_1_gemv_pretransposed.xhtml">GemvPretransposed</a> </td>
          <td>(</td>
          <td class="paramtype">const GemmArgs &amp;&#160;</td>
          <td class="paramname"><em>args</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="gemv__pretransposed_8hpp_source.xhtml#l00062">62</a> of file <a class="el" href="gemv__pretransposed_8hpp_source.xhtml">gemv_pretransposed.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                      : _args(<a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>),</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;                        _buffer_per_multi(<a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>._Ksize * <a class="code" href="namespacearm__gemm.xhtml#a2cfd518808ae94de30b3d1a3ba7c7890">roundup</a>(<a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>._Nsize, strategy::out_width())) {</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        <span class="comment">/* For now don&#39;t do any blocking. TODO: figure out if we should. */</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        <span class="keywordflow">if</span> (strategy::supports_accumulate() &amp;&amp; <a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>._cfg &amp;&amp; <a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>._cfg-&gt;inner_block_size) {</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;            k_block = <a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>._cfg-&gt;inner_block_size;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;            k_block = <a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>._Ksize;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        }</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>._cfg &amp;&amp; <a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>._cfg-&gt;outer_block_size) {</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;            n_block = <a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>._cfg-&gt;outer_block_size;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;            n_block = <a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>._Nsize;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        }</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    }</div><div class="ttc" id="namespacearm__gemm_xhtml_a2cfd518808ae94de30b3d1a3ba7c7890"><div class="ttname"><a href="namespacearm__gemm.xhtml#a2cfd518808ae94de30b3d1a3ba7c7890">arm_gemm::roundup</a></div><div class="ttdeci">T roundup(const T a, const T b)</div><div class="ttdef"><b>Definition:</b> <a href="utils_8hpp_source.xhtml#l00045">utils.hpp:45</a></div></div>
<div class="ttc" id="namespace_gemm_tuner_xhtml_a8187411843a6284ffb964ef3fb9fcab3"><div class="ttname"><a href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">GemmTuner.args</a></div><div class="ttdeci">args</div><div class="ttdef"><b>Definition:</b> <a href="_gemm_tuner_8py_source.xhtml#l00679">GemmTuner.py:679</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_gemm_tuner_8py_source.xhtml#l00679">GemmTuner::args</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="ac5dec5063a75604fdc60555f15577b94"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac5dec5063a75604fdc60555f15577b94">&#9670;&nbsp;</a></span>B_is_pretransposed()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool B_is_pretransposed </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="gemv__pretransposed_8hpp_source.xhtml#l00132">132</a> of file <a class="el" href="gemv__pretransposed_8hpp_source.xhtml">gemv_pretransposed.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;                                             {</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="aa7cfff39cbb2be65cd40042a75e5ae1c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa7cfff39cbb2be65cd40042a75e5ae1c">&#9670;&nbsp;</a></span>B_pretranspose_required()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool B_pretranspose_required </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="gemv__pretransposed_8hpp_source.xhtml#l00136">136</a> of file <a class="el" href="gemv__pretransposed_8hpp_source.xhtml">gemv_pretransposed.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;                                                  {</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        <span class="comment">/* Transpose is required if _B_pretransposed is still nullptr */</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        <span class="keywordflow">return</span> (_B_pretransposed == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="a1d37407e8d582183b35dedbf7fa43b43"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1d37407e8d582183b35dedbf7fa43b43">&#9670;&nbsp;</a></span>execute()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void execute </td>
          <td>(</td>
          <td class="paramtype">const ndcoord_t &amp;&#160;</td>
          <td class="paramname"><em>work_range</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const ndcoord_t &amp;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="gemv__pretransposed_8hpp_source.xhtml#l00085">85</a> of file <a class="el" href="gemv__pretransposed_8hpp_source.xhtml">gemv_pretransposed.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;                                                                               {</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="preprocessor">#ifdef CYCLE_PROFILING</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        profiler prof;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        strategy strat(_args._ci);</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> <a class="code" href="namespaceenable__tracing.xhtml#ab376b87f96a574a793c03c53e75afec8">start</a> = work_range.get_position(0);</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> end   = work_range.get_position_end(0);</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        <span class="comment">/* Break the window values down into multis of interest... */</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> window_per_multi = <a class="code" href="namespacearm__gemm.xhtml#aed0e2852860309af99fad49a8c3ef315">iceildiv</a>(_args._Nsize, strategy::out_width());</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> multi_0    = <a class="code" href="namespaceenable__tracing.xhtml#ab376b87f96a574a793c03c53e75afec8">start</a> / window_per_multi;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> multi_end  = end   / window_per_multi;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        <span class="comment">/* ... and figure out where we start and end in the first and last multi. */</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> n_0   = (<a class="code" href="namespaceenable__tracing.xhtml#ab376b87f96a574a793c03c53e75afec8">start</a> - (multi_0 * window_per_multi)) * strategy::out_width();</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> n_max = (end - (multi_end * window_per_multi)) * strategy::out_width();</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        static_assert(std::is_same&lt;Tr, Tri&gt;::value, <span class="stringliteral">&quot;GemvPretransposed: Result types must be the same.&quot;</span>);</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> multi=multi_0; multi&lt;=multi_end; multi++) {</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> n_start = (multi==multi_0) ? n_0 : 0;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> n_end = (multi==multi_end) ? n_max : _args._Nsize;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            if (n_end &lt;= n_start)</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                <span class="keywordflow">continue</span>;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> k0=0; k0&lt;_args._Ksize; k0+=k_block) {</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> kmax = std::min(k0 + k_block, _args._Ksize);</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> n=n_start; n&lt;n_end; n+=n_block) {</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> nmax = std::min(n + n_block, n_end);</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="preprocessor">#ifdef CYCLE_PROFILING</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                    <span class="keyword">auto</span> p = prof.ScopedProfiler(PROFILE_KERNEL, (kmax-k0) * (nmax-n));</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                    strat.kernel(this-&gt;_Aptr + (multi * this-&gt;_A_multi_stride) + k0,</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;                                 _B_pretransposed + (multi * _buffer_per_multi) + (n * <a class="code" href="namespacearm__gemm.xhtml#a2cfd518808ae94de30b3d1a3ba7c7890">roundup</a>(_args._Ksize, strategy::k_unroll())) + (k0 * strategy::out_width()),</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;                                 this-&gt;_Cptr + (multi * this-&gt;_C_multi_stride) + n,</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;                                 (nmax - n), (kmax-k0),</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                                 this-&gt;_bias ? this-&gt;_bias + (multi * this-&gt;_bias_multi_stride) + n : <span class="keyword">nullptr</span>,</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                                 _args._act, (k0 != 0));</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                }</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;            }</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        }</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    }</div><div class="ttc" id="namespacearm__gemm_xhtml_a2cfd518808ae94de30b3d1a3ba7c7890"><div class="ttname"><a href="namespacearm__gemm.xhtml#a2cfd518808ae94de30b3d1a3ba7c7890">arm_gemm::roundup</a></div><div class="ttdeci">T roundup(const T a, const T b)</div><div class="ttdef"><b>Definition:</b> <a href="utils_8hpp_source.xhtml#l00045">utils.hpp:45</a></div></div>
<div class="ttc" id="namespacearm__gemm_xhtml_aed0e2852860309af99fad49a8c3ef315"><div class="ttname"><a href="namespacearm__gemm.xhtml#aed0e2852860309af99fad49a8c3ef315">arm_gemm::iceildiv</a></div><div class="ttdeci">T iceildiv(const T a, const T b)</div><div class="ttdef"><b>Definition:</b> <a href="utils_8hpp_source.xhtml#l00040">utils.hpp:40</a></div></div>
<div class="ttc" id="namespaceenable__tracing_xhtml_ab376b87f96a574a793c03c53e75afec8"><div class="ttname"><a href="namespaceenable__tracing.xhtml#ab376b87f96a574a793c03c53e75afec8">enable_tracing.start</a></div><div class="ttdeci">bool start</div><div class="ttdef"><b>Definition:</b> <a href="enable__tracing_8py_source.xhtml#l00111">enable_tracing.py:111</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="utils_8hpp_source.xhtml#l00040">arm_gemm::iceildiv()</a>, and <a class="el" href="enable__tracing_8py_source.xhtml#l00111">enable_tracing::start</a>.</p>

</div>
</div>
<a id="ae9fc7380e533c43a1d91e48a7578e412"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae9fc7380e533c43a1d91e48a7578e412">&#9670;&nbsp;</a></span>get_B_pretransposed_array_size()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t get_B_pretransposed_array_size </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="gemv__pretransposed_8hpp_source.xhtml#l00141">141</a> of file <a class="el" href="gemv__pretransposed_8hpp_source.xhtml">gemv_pretransposed.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                                                           {</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        <span class="keywordflow">return</span> _buffer_per_multi * _args._nmulti * <span class="keyword">sizeof</span>(To);</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="a8f983ca114ef72d25515a8651ea1d0e7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8f983ca114ef72d25515a8651ea1d0e7">&#9670;&nbsp;</a></span>get_window_size()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">ndrange_t get_window_size </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="gemv__pretransposed_8hpp_source.xhtml#l00080">80</a> of file <a class="el" href="gemv__pretransposed_8hpp_source.xhtml">gemv_pretransposed.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;                                               {</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        <span class="keywordflow">return</span> { <a class="code" href="namespacearm__gemm.xhtml#aed0e2852860309af99fad49a8c3ef315">iceildiv</a>(_args._Nsize, strategy::out_width()) * _args._nmulti };</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    }</div><div class="ttc" id="namespacearm__gemm_xhtml_aed0e2852860309af99fad49a8c3ef315"><div class="ttname"><a href="namespacearm__gemm.xhtml#aed0e2852860309af99fad49a8c3ef315">arm_gemm::iceildiv</a></div><div class="ttdeci">T iceildiv(const T a, const T b)</div><div class="ttdef"><b>Definition:</b> <a href="utils_8hpp_source.xhtml#l00040">utils.hpp:40</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="utils_8hpp_source.xhtml#l00040">arm_gemm::iceildiv()</a>.</p>

</div>
</div>
<a id="a4bd9591d6da5b65a99c56f82acc14c4c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4bd9591d6da5b65a99c56f82acc14c4c">&#9670;&nbsp;</a></span>operator=()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__gemm_1_1_gemv_pretransposed.xhtml">GemvPretransposed</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__gemm_1_1_gemv_pretransposed.xhtml">GemvPretransposed</a>&lt; strategy, To, Tr &gt; &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a28341e4e1158f3446a8dfa13c9f5c6f0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a28341e4e1158f3446a8dfa13c9f5c6f0">&#9670;&nbsp;</a></span>pretranspose_B_array()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void pretranspose_B_array </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>buffer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const To *&#160;</td>
          <td class="paramname"><em>B</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>ldb</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>B_multi_stride</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="gemv__pretransposed_8hpp_source.xhtml#l00145">145</a> of file <a class="el" href="gemv__pretransposed_8hpp_source.xhtml">gemv_pretransposed.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;                                                                                                           {</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        Toi *B_buffer = reinterpret_cast&lt;Toi *&gt;(buffer);</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        strategy strat(_args._ci);</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> multi=0; multi&lt;_args._nmulti; multi++) {</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;            strat.transforms.PrepareB(B_buffer + (multi * _buffer_per_multi), B + (multi * B_multi_stride), ldb, 0, _args._Nsize, 0, _args._Ksize);</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        }</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        _B_pretransposed = B_buffer;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="a27df64c6276eb144594c5d37d1110b20"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a27df64c6276eb144594c5d37d1110b20">&#9670;&nbsp;</a></span>set_pretransposed_B_data()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void set_pretransposed_B_data </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>buffer</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="gemv__pretransposed_8hpp_source.xhtml#l00156">156</a> of file <a class="el" href="gemv__pretransposed_8hpp_source.xhtml">gemv_pretransposed.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;                                                         {</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        _B_pretransposed = reinterpret_cast&lt;Toi *&gt;(buffer);</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>src/core/NEON/kernels/arm_gemm/<a class="el" href="gemv__pretransposed_8hpp_source.xhtml">gemv_pretransposed.hpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__gemm.xhtml">arm_gemm</a></li><li class="navelem"><a class="el" href="classarm__gemm_1_1_gemv_pretransposed.xhtml">GemvPretransposed</a></li>
    <li class="footer">Generated on Fri Nov 27 2020 13:51:00 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
