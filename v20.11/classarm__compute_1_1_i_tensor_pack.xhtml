<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: ITensorPack Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1_i_tensor_pack.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">ITensorPack Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><a class="el" href="classarm__compute_1_1_tensor.xhtml" title="Basic implementation of the tensor interface.">Tensor</a> packing service.  
 <a href="classarm__compute_1_1_i_tensor_pack.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_i_tensor_pack_8h_source.xhtml">ITensorPack.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a0e01a567f0df623287c8f1bb6fbe26f7"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor_pack.xhtml#a0e01a567f0df623287c8f1bb6fbe26f7">ITensorPack</a> ()=default</td></tr>
<tr class="memdesc:a0e01a567f0df623287c8f1bb6fbe26f7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default Constructor.  <a href="#a0e01a567f0df623287c8f1bb6fbe26f7">More...</a><br /></td></tr>
<tr class="separator:a0e01a567f0df623287c8f1bb6fbe26f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d8078b635739e84400cf8240a2993e7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor_pack.xhtml#a6d8078b635739e84400cf8240a2993e7">add_tensor</a> (int id, <a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *tensor)</td></tr>
<tr class="memdesc:a6d8078b635739e84400cf8240a2993e7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add tensor to the pack.  <a href="#a6d8078b635739e84400cf8240a2993e7">More...</a><br /></td></tr>
<tr class="separator:a6d8078b635739e84400cf8240a2993e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0354c0e680cff7f7f89f217def8616c3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor_pack.xhtml#a0354c0e680cff7f7f89f217def8616c3">add_tensor</a> (int id, const <a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *tensor)</td></tr>
<tr class="memdesc:a0354c0e680cff7f7f89f217def8616c3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add const tensor to the pack.  <a href="#a0354c0e680cff7f7f89f217def8616c3">More...</a><br /></td></tr>
<tr class="separator:a0354c0e680cff7f7f89f217def8616c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a341a4c8a24d190d39504656989573d91"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor_pack.xhtml#a341a4c8a24d190d39504656989573d91">get_tensor</a> (int id)</td></tr>
<tr class="memdesc:a341a4c8a24d190d39504656989573d91"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get tensor of a given id from the pac.  <a href="#a341a4c8a24d190d39504656989573d91">More...</a><br /></td></tr>
<tr class="separator:a341a4c8a24d190d39504656989573d91"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a000c70e9839ed364ab7343de880a4d35"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor_pack.xhtml#a000c70e9839ed364ab7343de880a4d35">get_const_tensor</a> (int id) const</td></tr>
<tr class="memdesc:a000c70e9839ed364ab7343de880a4d35"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get constant tensor of a given id.  <a href="#a000c70e9839ed364ab7343de880a4d35">More...</a><br /></td></tr>
<tr class="separator:a000c70e9839ed364ab7343de880a4d35"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a259cb5a711406a8c3e5d937eb9350cca"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor_pack.xhtml#a259cb5a711406a8c3e5d937eb9350cca">size</a> () const</td></tr>
<tr class="memdesc:a259cb5a711406a8c3e5d937eb9350cca"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pack size accessor.  <a href="#a259cb5a711406a8c3e5d937eb9350cca">More...</a><br /></td></tr>
<tr class="separator:a259cb5a711406a8c3e5d937eb9350cca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a644718bb2fb240de962dc3c9a1fdf0dc"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor_pack.xhtml#a644718bb2fb240de962dc3c9a1fdf0dc">empty</a> () const</td></tr>
<tr class="memdesc:a644718bb2fb240de962dc3c9a1fdf0dc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if pack is empty.  <a href="#a644718bb2fb240de962dc3c9a1fdf0dc">More...</a><br /></td></tr>
<tr class="separator:a644718bb2fb240de962dc3c9a1fdf0dc"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p><a class="el" href="classarm__compute_1_1_tensor.xhtml" title="Basic implementation of the tensor interface.">Tensor</a> packing service. </p>

<p class="definition">Definition at line <a class="el" href="_i_tensor_pack_8h_source.xhtml#l00036">36</a> of file <a class="el" href="_i_tensor_pack_8h_source.xhtml">ITensorPack.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a0e01a567f0df623287c8f1bb6fbe26f7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0e01a567f0df623287c8f1bb6fbe26f7">&#9670;&nbsp;</a></span>ITensorPack()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default Constructor. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a6d8078b635739e84400cf8240a2993e7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6d8078b635739e84400cf8240a2993e7">&#9670;&nbsp;</a></span>add_tensor() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void add_tensor </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *&#160;</td>
          <td class="paramname"><em>tensor</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Add tensor to the pack. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">id</td><td>ID/type of the tensor to add </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">tensor</td><td><a class="el" href="classarm__compute_1_1_tensor.xhtml" title="Basic implementation of the tensor interface.">Tensor</a> to add </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_i_tensor_pack_8cpp_source.xhtml#l00030">30</a> of file <a class="el" href="_i_tensor_pack_8cpp_source.xhtml">ITensorPack.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;{</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    _pack[id] = PackElement(tensor);</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_n_e_reshape_layer_8cpp_source.xhtml#l00087">NEReshapeLayer::run()</a>, <a class="el" href="_c_l_element_wise_unary_layer_8cpp_source.xhtml#l00154">CLRsqrtLayer::run()</a>, <a class="el" href="_n_e_elementwise_operators_8cpp_source.xhtml#l00164">NEElementwiseMax::run()</a>, <a class="el" href="_c_l_reshape_layer_8cpp_source.xhtml#l00085">CLReshapeLayer::run()</a>, <a class="el" href="_n_e_activation_layer_8cpp_source.xhtml#l00088">NEActivationLayer::run()</a>, <a class="el" href="_n_e_concatenate_layer_8cpp_source.xhtml#l00218">NEConcatenateLayer::run()</a>, <a class="el" href="_c_l_activation_layer_8cpp_source.xhtml#l00090">CLActivationLayer::run()</a>, <a class="el" href="_n_e_p_relu_layer_8cpp_source.xhtml#l00072">NEPReluLayer::run()</a>, <a class="el" href="_c_l_concatenate_layer_8cpp_source.xhtml#l00305">CLConcatenateLayer::run()</a>, <a class="el" href="_c_l_logical_not_8cpp_source.xhtml#l00086">CLLogicalNot::run()</a>, <a class="el" href="_c_l_strided_slice_8cpp_source.xhtml#l00097">CLStridedSlice::run()</a>, <a class="el" href="_c_l_logical_and_8cpp_source.xhtml#l00088">CLLogicalAnd::run()</a>, <a class="el" href="_c_l_logical_or_8cpp_source.xhtml#l00088">CLLogicalOr::run()</a>, <a class="el" href="_n_e_slice_8cpp_source.xhtml#l00095">NESlice::run()</a>, <a class="el" href="_c_l_p_relu_layer_8cpp_source.xhtml#l00092">CLPReluLayer::run()</a>, <a class="el" href="_c_l_element_wise_unary_layer_8cpp_source.xhtml#l00196">CLExpLayer::run()</a>, <a class="el" href="_n_e_elementwise_operators_8cpp_source.xhtml#l00205">NEElementwiseMin::run()</a>, <a class="el" href="_n_e_strided_slice_8cpp_source.xhtml#l00077">NEStridedSlice::run()</a>, <a class="el" href="_c_l_slice_8cpp_source.xhtml#l00098">CLSlice::run()</a>, <a class="el" href="_n_e_arithmetic_subtraction_8cpp_source.xhtml#l00081">NEArithmeticSubtraction::run()</a>, <a class="el" href="_n_e_arithmetic_addition_8cpp_source.xhtml#l00082">NEArithmeticAddition::run()</a>, <a class="el" href="_n_e_concatenate_layer_8cpp_source.xhtml#l00150">NEConcatenation::run()</a>, <a class="el" href="_c_l_concatenate_layer_8cpp_source.xhtml#l00224">CLConcatenation::run()</a>, <a class="el" href="_c_l_element_wise_unary_layer_8cpp_source.xhtml#l00237">CLNegLayer::run()</a>, <a class="el" href="_n_e_elementwise_operators_8cpp_source.xhtml#l00246">NEElementwiseSquaredDiff::run()</a>, <a class="el" href="_n_e_pixel_wise_multiplication_8cpp_source.xhtml#l00098">NEPixelWiseMultiplication::run()</a>, <a class="el" href="_c_l_element_wise_unary_layer_8cpp_source.xhtml#l00278">CLSinLayer::run()</a>, <a class="el" href="_n_e_elementwise_operators_8cpp_source.xhtml#l00287">NEElementwiseDivision::run()</a>, <a class="el" href="_n_e_pixel_wise_multiplication_8cpp_source.xhtml#l00137">NEComplexPixelWiseMultiplication::run()</a>, <a class="el" href="_c_l_pixel_wise_multiplication_8cpp_source.xhtml#l00167">CLPixelWiseMultiplication::run()</a>, <a class="el" href="_c_l_element_wise_unary_layer_8cpp_source.xhtml#l00360">CLLogLayer::run()</a>, <a class="el" href="_n_e_elementwise_operators_8cpp_source.xhtml#l00328">NEElementwisePower::run()</a>, <a class="el" href="_c_l_element_wise_unary_layer_8cpp_source.xhtml#l00319">CLAbsLayer::run()</a>, <a class="el" href="_c_l_pixel_wise_multiplication_8cpp_source.xhtml#l00212">CLComplexPixelWiseMultiplication::run()</a>, <a class="el" href="_n_e_elementwise_operators_8cpp_source.xhtml#l00414">NEElementwiseComparison::run()</a>, <a class="el" href="_c_l_element_wise_unary_layer_8cpp_source.xhtml#l00401">CLRoundLayer::run()</a>, <a class="el" href="_n_e_elementwise_operators_8cpp_source.xhtml#l00375">NEElementwiseComparisonStatic&lt; op &gt;::run()</a>, <a class="el" href="_c_l_elementwise_operations_8cpp_source.xhtml#l00222">CLArithmeticAddition::run()</a>, <a class="el" href="_c_l_elementwise_operations_8cpp_source.xhtml#l00268">CLArithmeticSubtraction::run()</a>, <a class="el" href="_c_l_elementwise_operations_8cpp_source.xhtml#l00313">CLArithmeticDivision::run()</a>, <a class="el" href="_c_l_elementwise_operations_8cpp_source.xhtml#l00358">CLElementwiseMax::run()</a>, <a class="el" href="_c_l_elementwise_operations_8cpp_source.xhtml#l00403">CLElementwiseMin::run()</a>, <a class="el" href="_c_l_elementwise_operations_8cpp_source.xhtml#l00448">CLElementwiseSquaredDiff::run()</a>, and <a class="el" href="_c_l_elementwise_operations_8cpp_source.xhtml#l00493">CLElementwisePower::run()</a>.</p>

</div>
</div>
<a id="a0354c0e680cff7f7f89f217def8616c3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0354c0e680cff7f7f89f217def8616c3">&#9670;&nbsp;</a></span>add_tensor() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void add_tensor </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *&#160;</td>
          <td class="paramname"><em>tensor</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Add const tensor to the pack. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">id</td><td>ID/type of the tensor to add </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">tensor</td><td><a class="el" href="classarm__compute_1_1_tensor.xhtml" title="Basic implementation of the tensor interface.">Tensor</a> to add </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_i_tensor_pack_8cpp_source.xhtml#l00035">35</a> of file <a class="el" href="_i_tensor_pack_8cpp_source.xhtml">ITensorPack.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;{</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    _pack[id] = PackElement(tensor);</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a644718bb2fb240de962dc3c9a1fdf0dc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a644718bb2fb240de962dc3c9a1fdf0dc">&#9670;&nbsp;</a></span>empty()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool empty </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Checks if pack is empty. </p>
<dl class="section return"><dt>Returns</dt><dd>True if empty else false </dd></dl>

<p class="definition">Definition at line <a class="el" href="_i_tensor_pack_8cpp_source.xhtml#l00061">61</a> of file <a class="el" href="_i_tensor_pack_8cpp_source.xhtml">ITensorPack.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;{</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="keywordflow">return</span> _pack.empty();</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_c_l_operator_8cpp_source.xhtml#l00038">ICLOperator::run()</a>, <a class="el" href="_i_n_e_operator_8cpp_source.xhtml#l00040">INEOperator::run()</a>, <a class="el" href="_n_e_concatenate_layer_8cpp_source.xhtml#l00150">NEConcatenation::run()</a>, <a class="el" href="_c_l_concatenate_layer_8cpp_source.xhtml#l00224">CLConcatenation::run()</a>, <a class="el" href="_n_e_logical_kernel_8cpp_source.xhtml#l00324">NELogicalKernel::run_op()</a>, and <a class="el" href="_n_e_activation_layer_kernel_8cpp_source.xhtml#l00199">NEActivationLayerKernel::run_op()</a>.</p>

</div>
</div>
<a id="a000c70e9839ed364ab7343de880a4d35"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a000c70e9839ed364ab7343de880a4d35">&#9670;&nbsp;</a></span>get_const_tensor()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> * get_const_tensor </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>id</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get constant tensor of a given id. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">id</td><td>ID of tensor to extract</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The pointer to the tensor if exist and is const else nullptr </dd></dl>

<p class="definition">Definition at line <a class="el" href="_i_tensor_pack_8cpp_source.xhtml#l00040">40</a> of file <a class="el" href="_i_tensor_pack_8cpp_source.xhtml">ITensorPack.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;{</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <span class="keyword">auto</span> it = _pack.find(<span class="keywordtype">id</span>);</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <span class="keywordflow">if</span>(it != _pack.end())</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    {</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        <span class="keywordflow">return</span> it-&gt;second.ctensor != <span class="keyword">nullptr</span> ? it-&gt;second.ctensor : it-&gt;second.tensor;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    }</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_n_e_concatenate_layer_8cpp_source.xhtml#l00150">NEConcatenation::run()</a>, <a class="el" href="_c_l_concatenate_layer_8cpp_source.xhtml#l00224">CLConcatenation::run()</a>, <a class="el" href="_c_l_reshape_layer_kernel_8cpp_source.xhtml#l00107">CLReshapeLayerKernel::run_op()</a>, <a class="el" href="_c_l_elementwise_operation_kernel_8cpp_source.xhtml#l00288">CLElementwiseOperationKernel::run_op()</a>, <a class="el" href="_c_l_element_wise_unary_layer_kernel_8cpp_source.xhtml#l00146">CLElementWiseUnaryLayerKernel::run_op()</a>, <a class="el" href="_n_e_logical_kernel_8cpp_source.xhtml#l00324">NELogicalKernel::run_op()</a>, <a class="el" href="_n_e_elementwise_operation_kernel_8cpp_source.xhtml#l01213">NEElementwiseOperationKernel::run_op()</a>, <a class="el" href="_c_l_width_concatenate2_tensors_kernel_8cpp_source.xhtml#l00129">CLWidthConcatenate2TensorsKernel::run_op()</a>, <a class="el" href="_c_l_activation_layer_kernel_8cpp_source.xhtml#l00222">CLActivationLayerKernel::run_op()</a>, <a class="el" href="_c_l_height_concatenate_layer_kernel_8cpp_source.xhtml#l00115">CLHeightConcatenateLayerKernel::run_op()</a>, <a class="el" href="_c_l_width_concatenate_layer_kernel_8cpp_source.xhtml#l00110">CLWidthConcatenateLayerKernel::run_op()</a>, <a class="el" href="_n_e_reshape_layer_kernel_8cpp_source.xhtml#l00091">NEReshapeLayerKernel::run_op()</a>, <a class="el" href="_c_l_width_concatenate4_tensors_kernel_8cpp_source.xhtml#l00155">CLWidthConcatenate4TensorsKernel::run_op()</a>, <a class="el" href="_c_l_depth_concatenate_layer_kernel_8cpp_source.xhtml#l00111">CLDepthConcatenateLayerKernel::run_op()</a>, <a class="el" href="_c_l_batch_concatenate_layer_kernel_8cpp_source.xhtml#l00126">CLBatchConcatenateLayerKernel::run_op()</a>, <a class="el" href="_n_e_width_concatenate_layer_kernel_8cpp_source.xhtml#l00089">NEWidthConcatenateLayerKernel::run_op()</a>, <a class="el" href="_c_l_strided_slice_kernel_8cpp_source.xhtml#l00177">CLStridedSliceKernel::run_op()</a>, <a class="el" href="_n_e_height_concatenate_layer_kernel_8cpp_source.xhtml#l00089">NEHeightConcatenateLayerKernel::run_op()</a>, <a class="el" href="_n_e_batch_concatenate_layer_kernel_8cpp_source.xhtml#l00196">NEBatchConcatenateLayerKernel::run_op()</a>, <a class="el" href="_n_e_depth_concatenate_layer_kernel_8cpp_source.xhtml#l00194">NEDepthConcatenateLayerKernel::run_op()</a>, <a class="el" href="_n_e_activation_layer_kernel_8cpp_source.xhtml#l00199">NEActivationLayerKernel::run_op()</a>, <a class="el" href="_c_l_fill_border_kernel_8cpp_source.xhtml#l00171">CLFillBorderKernel::run_op()</a>, <a class="el" href="_n_e_arithmetic_addition_kernel_8cpp_source.xhtml#l00989">NEArithmeticAdditionKernel::run_op()</a>, <a class="el" href="_n_e_strided_slice_kernel_8cpp_source.xhtml#l00170">NEStridedSliceKernel::run_op()</a>, <a class="el" href="_n_e_arithmetic_subtraction_kernel_8cpp_source.xhtml#l00821">NEArithmeticSubtractionKernel::run_op()</a>, <a class="el" href="_n_e_pixel_wise_multiplication_kernel_8cpp_source.xhtml#l01590">NEPixelWiseMultiplicationKernel::run_op()</a>, <a class="el" href="_c_l_pixel_wise_multiplication_kernel_8cpp_source.xhtml#l00272">CLPixelWiseMultiplicationKernel::run_op()</a>, <a class="el" href="_n_e_pixel_wise_multiplication_kernel_8cpp_source.xhtml#l01666">NEComplexPixelWiseMultiplicationKernel::run_op()</a>, and <a class="el" href="_c_l_pixel_wise_multiplication_kernel_8cpp_source.xhtml#l00425">CLComplexPixelWiseMultiplicationKernel::run_op()</a>.</p>

</div>
</div>
<a id="a341a4c8a24d190d39504656989573d91"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a341a4c8a24d190d39504656989573d91">&#9670;&nbsp;</a></span>get_tensor()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> * get_tensor </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get tensor of a given id from the pac. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">id</td><td>ID of tensor to extract</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The pointer to the tensor if exist and is non-const else nullptr </dd></dl>

<p class="definition">Definition at line <a class="el" href="_i_tensor_pack_8cpp_source.xhtml#l00050">50</a> of file <a class="el" href="_i_tensor_pack_8cpp_source.xhtml">ITensorPack.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;{</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <span class="keyword">auto</span> it = _pack.find(<span class="keywordtype">id</span>);</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="keywordflow">return</span> it != _pack.end() ? it-&gt;second.tensor : <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_n_e_concatenate_layer_8cpp_source.xhtml#l00150">NEConcatenation::run()</a>, <a class="el" href="_c_l_concatenate_layer_8cpp_source.xhtml#l00224">CLConcatenation::run()</a>, <a class="el" href="_c_l_reshape_layer_kernel_8cpp_source.xhtml#l00107">CLReshapeLayerKernel::run_op()</a>, <a class="el" href="_c_l_elementwise_operation_kernel_8cpp_source.xhtml#l00288">CLElementwiseOperationKernel::run_op()</a>, <a class="el" href="_c_l_element_wise_unary_layer_kernel_8cpp_source.xhtml#l00146">CLElementWiseUnaryLayerKernel::run_op()</a>, <a class="el" href="_n_e_logical_kernel_8cpp_source.xhtml#l00324">NELogicalKernel::run_op()</a>, <a class="el" href="_n_e_elementwise_operation_kernel_8cpp_source.xhtml#l01213">NEElementwiseOperationKernel::run_op()</a>, <a class="el" href="_c_l_width_concatenate2_tensors_kernel_8cpp_source.xhtml#l00129">CLWidthConcatenate2TensorsKernel::run_op()</a>, <a class="el" href="_c_l_activation_layer_kernel_8cpp_source.xhtml#l00222">CLActivationLayerKernel::run_op()</a>, <a class="el" href="_c_l_height_concatenate_layer_kernel_8cpp_source.xhtml#l00115">CLHeightConcatenateLayerKernel::run_op()</a>, <a class="el" href="_c_l_width_concatenate_layer_kernel_8cpp_source.xhtml#l00110">CLWidthConcatenateLayerKernel::run_op()</a>, <a class="el" href="_n_e_reshape_layer_kernel_8cpp_source.xhtml#l00091">NEReshapeLayerKernel::run_op()</a>, <a class="el" href="_c_l_width_concatenate4_tensors_kernel_8cpp_source.xhtml#l00155">CLWidthConcatenate4TensorsKernel::run_op()</a>, <a class="el" href="_c_l_depth_concatenate_layer_kernel_8cpp_source.xhtml#l00111">CLDepthConcatenateLayerKernel::run_op()</a>, <a class="el" href="_n_e_width_concatenate_layer_kernel_8cpp_source.xhtml#l00089">NEWidthConcatenateLayerKernel::run_op()</a>, <a class="el" href="_c_l_batch_concatenate_layer_kernel_8cpp_source.xhtml#l00126">CLBatchConcatenateLayerKernel::run_op()</a>, <a class="el" href="_c_l_strided_slice_kernel_8cpp_source.xhtml#l00177">CLStridedSliceKernel::run_op()</a>, <a class="el" href="_n_e_height_concatenate_layer_kernel_8cpp_source.xhtml#l00089">NEHeightConcatenateLayerKernel::run_op()</a>, <a class="el" href="_n_e_batch_concatenate_layer_kernel_8cpp_source.xhtml#l00196">NEBatchConcatenateLayerKernel::run_op()</a>, <a class="el" href="_n_e_depth_concatenate_layer_kernel_8cpp_source.xhtml#l00194">NEDepthConcatenateLayerKernel::run_op()</a>, <a class="el" href="_n_e_activation_layer_kernel_8cpp_source.xhtml#l00199">NEActivationLayerKernel::run_op()</a>, <a class="el" href="_n_e_arithmetic_addition_kernel_8cpp_source.xhtml#l00989">NEArithmeticAdditionKernel::run_op()</a>, <a class="el" href="_n_e_strided_slice_kernel_8cpp_source.xhtml#l00170">NEStridedSliceKernel::run_op()</a>, <a class="el" href="_n_e_arithmetic_subtraction_kernel_8cpp_source.xhtml#l00821">NEArithmeticSubtractionKernel::run_op()</a>, <a class="el" href="_n_e_pixel_wise_multiplication_kernel_8cpp_source.xhtml#l01590">NEPixelWiseMultiplicationKernel::run_op()</a>, <a class="el" href="_c_l_pixel_wise_multiplication_kernel_8cpp_source.xhtml#l00272">CLPixelWiseMultiplicationKernel::run_op()</a>, <a class="el" href="_n_e_pixel_wise_multiplication_kernel_8cpp_source.xhtml#l01666">NEComplexPixelWiseMultiplicationKernel::run_op()</a>, and <a class="el" href="_c_l_pixel_wise_multiplication_kernel_8cpp_source.xhtml#l00425">CLComplexPixelWiseMultiplicationKernel::run_op()</a>.</p>

</div>
</div>
<a id="a259cb5a711406a8c3e5d937eb9350cca"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a259cb5a711406a8c3e5d937eb9350cca">&#9670;&nbsp;</a></span>size()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t size </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Pack size accessor. </p>
<dl class="section return"><dt>Returns</dt><dd>Number of tensors registered to the pack </dd></dl>

<p class="definition">Definition at line <a class="el" href="_i_tensor_pack_8cpp_source.xhtml#l00056">56</a> of file <a class="el" href="_i_tensor_pack_8cpp_source.xhtml">ITensorPack.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;{</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="keywordflow">return</span> _pack.size();</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_n_e_concatenate_layer_8cpp_source.xhtml#l00150">NEConcatenation::run()</a>, and <a class="el" href="_c_l_concatenate_layer_8cpp_source.xhtml#l00224">CLConcatenation::run()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>arm_compute/core/<a class="el" href="_i_tensor_pack_8h_source.xhtml">ITensorPack.h</a></li>
<li>src/core/<a class="el" href="_i_tensor_pack_8cpp_source.xhtml">ITensorPack.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a></li>
    <li class="footer">Generated on Fri Nov 27 2020 13:50:52 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
