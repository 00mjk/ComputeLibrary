<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: arm_conv::pooling Namespace Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">21.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('namespacearm__conv_1_1pooling.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">arm_conv::pooling Namespace Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__conv_1_1pooling_1_1a64__fp32__nhwc__avg__3x3__s1__output2x2__depthfirst.xhtml">a64_fp32_nhwc_avg_3x3_s1_output2x2_depthfirst</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__conv_1_1pooling_1_1a64__fp32__nhwc__max__2x2__s1__output2x2__depthfirst.xhtml">a64_fp32_nhwc_max_2x2_s1_output2x2_depthfirst</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__conv_1_1pooling_1_1a64__s8__nhwc__max__2x2__s1__output2x2__depthfirst.xhtml">a64_s8_nhwc_max_2x2_s1_output2x2_depthfirst</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__conv_1_1pooling_1_1a64__u8__nhwc__max__2x2__s1__output2x2__depthfirst.xhtml">a64_u8_nhwc_max_2x2_s1_output2x2_depthfirst</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__conv_1_1pooling_1_1cpp__nhwc__1x1__stride__any__depthfirst.xhtml">cpp_nhwc_1x1_stride_any_depthfirst</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__conv_1_1pooling_1_1_pooling_depthfirst.xhtml">PoolingDepthfirst</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__conv_1_1pooling_1_1_pooling_depthfirst_cache_oblivious.xhtml">PoolingDepthfirstCacheOblivious</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__conv_1_1pooling_1_1_pooling_depthfirst_generic.xhtml">PoolingDepthfirstGeneric</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__conv_1_1pooling_1_1_pooling_depthfirst_generic_quantized.xhtml">PoolingDepthfirstGenericQuantized</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__conv_1_1pooling_1_1_pooling_implementation.xhtml">PoolingImplementation</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a9a5a684efc6549b84d4407a883423cdd"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__conv_1_1pooling.xhtml#a9a5a684efc6549b84d4407a883423cdd">a64_fp32_nhwc_avg_3x3_s1_output2x2_depthfirst_impl</a> (const unsigned int n_channels, const float *const *const inptrs, float *const *const outptrs, const bool exclude_padding, const unsigned int pad_left, const unsigned int pad_top, const unsigned int pad_right, const unsigned int pad_bottom)</td></tr>
<tr class="separator:a9a5a684efc6549b84d4407a883423cdd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b12ebb4dca330b8e8d1fadda74a0543"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__conv_1_1pooling.xhtml#a4b12ebb4dca330b8e8d1fadda74a0543">a64_fp32_nhwc_max_2x2_s1_output2x2_depthfirst_impl</a> (const unsigned int n_channels, const float *const *const inptrs, float *const *const outptrs, const bool exclude_padding, const unsigned int pad_left, const unsigned int pad_top, const unsigned int pad_right, const unsigned int pad_bottom)</td></tr>
<tr class="separator:a4b12ebb4dca330b8e8d1fadda74a0543"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeb0dd4784217ad7ae84fb17486657831"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__conv_1_1pooling.xhtml#aeb0dd4784217ad7ae84fb17486657831">a64_s8_nhwc_max_2x2_s1_output2x2_depthfirst_impl</a> (const unsigned int n_channels, const int8_t *const *const inptrs, int8_t *const *const outptrs, const bool exclude_padding, const unsigned int pad_left, const unsigned int pad_top, const unsigned int pad_right, const unsigned int pad_bottom)</td></tr>
<tr class="separator:aeb0dd4784217ad7ae84fb17486657831"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b4fb6be3b8407051efb6332d95196d2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__conv_1_1pooling.xhtml#a4b4fb6be3b8407051efb6332d95196d2">a64_u8_nhwc_max_2x2_s1_output2x2_depthfirst_impl</a> (const unsigned int n_channels, const uint8_t *const *const inptrs, uint8_t *const *const outptrs, const bool exclude_padding, const unsigned int pad_left, const unsigned int pad_top, const unsigned int pad_right, const unsigned int pad_bottom)</td></tr>
<tr class="separator:a4b4fb6be3b8407051efb6332d95196d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aabc3b75050cf75332af4b31216401f69"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:aabc3b75050cf75332af4b31216401f69"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__conv_1_1pooling.xhtml#aabc3b75050cf75332af4b31216401f69">cpp_nhwc_1x1_stride_any_depthfirst_impl</a> (uint64_t, uint64_t, const uint64_t n_channels, const T *const *const inptrs, T *outptr)</td></tr>
<tr class="separator:aabc3b75050cf75332af4b31216401f69"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab34fd1116040e1c221224b283b749c23"><td class="memItemLeft" align="right" valign="top">template void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__conv_1_1pooling.xhtml#ab34fd1116040e1c221224b283b749c23">cpp_nhwc_1x1_stride_any_depthfirst_impl</a> (uint64_t, uint64_t, uint64_t, const float *const *, float *)</td></tr>
<tr class="separator:ab34fd1116040e1c221224b283b749c23"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a943a41657d5c7f9e3c03ae5e677c77d9"><td class="memItemLeft" align="right" valign="top">template void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__conv_1_1pooling.xhtml#a943a41657d5c7f9e3c03ae5e677c77d9">cpp_nhwc_1x1_stride_any_depthfirst_impl</a> (uint64_t, uint64_t, uint64_t, const int8_t *const *, int8_t *)</td></tr>
<tr class="separator:a943a41657d5c7f9e3c03ae5e677c77d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2852ee376fbccfca9126d4d0891c9def"><td class="memItemLeft" align="right" valign="top">template void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__conv_1_1pooling.xhtml#a2852ee376fbccfca9126d4d0891c9def">cpp_nhwc_1x1_stride_any_depthfirst_impl</a> (uint64_t, uint64_t, uint64_t, const uint8_t *const *, uint8_t *)</td></tr>
<tr class="separator:a2852ee376fbccfca9126d4d0891c9def"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4c9bf60a0c8879f8d417aa59041b398d"><td class="memTemplParams" colspan="2">template&lt;&gt; </td></tr>
<tr class="memitem:a4c9bf60a0c8879f8d417aa59041b398d"><td class="memTemplItemLeft" align="right" valign="top">const <a class="el" href="structarm__conv_1_1pooling_1_1_pooling_implementation.xhtml">PoolingImplementation</a>&lt; float, float &gt; *&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__conv_1_1pooling.xhtml#a4c9bf60a0c8879f8d417aa59041b398d">pooling_implementation_list</a> ()</td></tr>
<tr class="separator:a4c9bf60a0c8879f8d417aa59041b398d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2dbb9d67088387c8cb61b8d7d063afd1"><td class="memItemLeft" align="right" valign="top">template UniquePoolingCommon&lt; float, float &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__conv_1_1pooling.xhtml#a2dbb9d67088387c8cb61b8d7d063afd1">pooling</a> (const PoolingArgs &amp;, const Nothing &amp;)</td></tr>
<tr class="separator:a2dbb9d67088387c8cb61b8d7d063afd1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8eab7e5b5329fa3cd319f7f1647d3bd1"><td class="memTemplParams" colspan="2">template&lt;typename TInput , typename TOutput , class OutputStage  = Nothing&gt; </td></tr>
<tr class="memitem:a8eab7e5b5329fa3cd319f7f1647d3bd1"><td class="memTemplItemLeft" align="right" valign="top">const <a class="el" href="structarm__conv_1_1pooling_1_1_pooling_implementation.xhtml">PoolingImplementation</a>&lt; TInput, TOutput, OutputStage &gt; *&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__conv_1_1pooling.xhtml#a8eab7e5b5329fa3cd319f7f1647d3bd1">pooling_implementation_list</a> ()</td></tr>
<tr class="separator:a8eab7e5b5329fa3cd319f7f1647d3bd1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf2b1fe16f2ef298d0a2129d2952d44c"><td class="memTemplParams" colspan="2">template&lt;typename TInput , typename TOutput , class OutputStage  = Nothing&gt; </td></tr>
<tr class="memitem:aaf2b1fe16f2ef298d0a2129d2952d44c"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__conv_1_1pooling.xhtml#aaf2b1fe16f2ef298d0a2129d2952d44c">find_implementation</a> (const PoolingArgs &amp;args, const OutputStage &amp;os, const <a class="el" href="structarm__conv_1_1pooling_1_1_pooling_implementation.xhtml">PoolingImplementation</a>&lt; TInput, TOutput, OutputStage &gt; *&amp;selected)</td></tr>
<tr class="separator:aaf2b1fe16f2ef298d0a2129d2952d44c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a403efdec31ffae1d68e06c0a96650ab2"><td class="memTemplParams" colspan="2">template&lt;typename TInput , typename TOutput , class OutputStage &gt; </td></tr>
<tr class="memitem:a403efdec31ffae1d68e06c0a96650ab2"><td class="memTemplItemLeft" align="right" valign="top">UniquePoolingCommon&lt; TInput, TOutput, OutputStage &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__conv_1_1pooling.xhtml#a403efdec31ffae1d68e06c0a96650ab2">pooling</a> (const PoolingArgs &amp;args, const OutputStage &amp;os)</td></tr>
<tr class="separator:a403efdec31ffae1d68e06c0a96650ab2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d48fc2e894ccf10d2a3894f412f3ed0"><td class="memTemplParams" colspan="2">template&lt;&gt; </td></tr>
<tr class="memitem:a6d48fc2e894ccf10d2a3894f412f3ed0"><td class="memTemplItemLeft" align="right" valign="top">const <a class="el" href="structarm__conv_1_1pooling_1_1_pooling_implementation.xhtml">PoolingImplementation</a>&lt; int8_t, int8_t &gt; *&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__conv_1_1pooling.xhtml#a6d48fc2e894ccf10d2a3894f412f3ed0">pooling_implementation_list</a> ()</td></tr>
<tr class="separator:a6d48fc2e894ccf10d2a3894f412f3ed0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa188e0b5766fd9c2cd882866d4a493ad"><td class="memTemplParams" colspan="2">template&lt;&gt; </td></tr>
<tr class="memitem:aa188e0b5766fd9c2cd882866d4a493ad"><td class="memTemplItemLeft" align="right" valign="top">const <a class="el" href="structarm__conv_1_1pooling_1_1_pooling_implementation.xhtml">PoolingImplementation</a>&lt; int8_t, int8_t, Requantize32 &gt; *&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__conv_1_1pooling.xhtml#aa188e0b5766fd9c2cd882866d4a493ad">pooling_implementation_list</a> ()</td></tr>
<tr class="separator:aa188e0b5766fd9c2cd882866d4a493ad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8ba0af13ee876fd852245fa2670ac854"><td class="memItemLeft" align="right" valign="top">template UniquePoolingCommon&lt; int8_t, int8_t, Requantize32 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__conv_1_1pooling.xhtml#a8ba0af13ee876fd852245fa2670ac854">pooling</a> (const PoolingArgs &amp;, const Requantize32 &amp;)</td></tr>
<tr class="separator:a8ba0af13ee876fd852245fa2670ac854"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2cacb9706db5850728e9c5134e237d96"><td class="memTemplParams" colspan="2">template&lt;&gt; </td></tr>
<tr class="memitem:a2cacb9706db5850728e9c5134e237d96"><td class="memTemplItemLeft" align="right" valign="top">const <a class="el" href="structarm__conv_1_1pooling_1_1_pooling_implementation.xhtml">PoolingImplementation</a>&lt; uint8_t, uint8_t &gt; *&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__conv_1_1pooling.xhtml#a2cacb9706db5850728e9c5134e237d96">pooling_implementation_list</a> ()</td></tr>
<tr class="separator:a2cacb9706db5850728e9c5134e237d96"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ba142211e436f397fe2f926ef188315"><td class="memTemplParams" colspan="2">template&lt;&gt; </td></tr>
<tr class="memitem:a9ba142211e436f397fe2f926ef188315"><td class="memTemplItemLeft" align="right" valign="top">const <a class="el" href="structarm__conv_1_1pooling_1_1_pooling_implementation.xhtml">PoolingImplementation</a>&lt; uint8_t, uint8_t, Requantize32 &gt; *&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__conv_1_1pooling.xhtml#a9ba142211e436f397fe2f926ef188315">pooling_implementation_list</a> ()</td></tr>
<tr class="separator:a9ba142211e436f397fe2f926ef188315"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a id="a9a5a684efc6549b84d4407a883423cdd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9a5a684efc6549b84d4407a883423cdd">&#9670;&nbsp;</a></span>a64_fp32_nhwc_avg_3x3_s1_output2x2_depthfirst_impl()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void a64_fp32_nhwc_avg_3x3_s1_output2x2_depthfirst_impl </td>
          <td>(</td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>n_channels</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float *const *const&#160;</td>
          <td class="paramname"><em>inptrs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float *const *const&#160;</td>
          <td class="paramname"><em>outptrs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>exclude_padding</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>pad_left</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>pad_top</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>pad_right</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>pad_bottom</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="arm__conv_2pooling_2kernels_2a64__fp32__nhwc__avg__3x3__s1__output2x2__depthfirst_2generic_8cpp_source.xhtml#l00032">32</a> of file <a class="el" href="arm__conv_2pooling_2kernels_2a64__fp32__nhwc__avg__3x3__s1__output2x2__depthfirst_2generic_8cpp_source.xhtml">generic.cpp</a>.</p>

<p class="reference">References <a class="el" href="_gemm_tuner_8py_source.xhtml#l00679">GemmTuner::args</a>.</p>
<div class="fragment"><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;{</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  <span class="keyword">struct </span>KernelArgs</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;  {</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <span class="keyword">const</span> uint64_t n_channels;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">float</span> *<span class="keyword">const</span> *<span class="keyword">const</span> inptrs;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <span class="keywordtype">float</span> *<span class="keyword">const</span> *<span class="keyword">const</span> outptrs;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <span class="keywordtype">float</span> rescale_vals[4];</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    KernelArgs(</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;      <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> channels,</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;      <span class="keyword">const</span> <span class="keywordtype">float</span> *<span class="keyword">const</span> *input_ptrs,</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;      <span class="keywordtype">float</span> *<span class="keyword">const</span> * output_ptrs,</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;      <span class="keywordtype">bool</span> exclude_padding, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> pad_left, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> pad_top, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> pad_right, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> pad_bottom</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    ) : n_channels(channels),</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        inptrs(input_ptrs),</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        outptrs(output_ptrs)</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    {</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;      <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i &lt; 2; i++)</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;      {</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span> start_i = 1*i - <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span>(pad_top);</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span> end_i = std::min&lt;int&gt;(start_i + 3, 4 - pad_top - pad_bottom);</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span> valid_rows = end_i - std::max&lt;int&gt;(0, start_i);</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> j = 0; j &lt; 2; j++)</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        {</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;          <span class="keyword">const</span> <span class="keywordtype">int</span> start_j = 1*j - <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span>(pad_left);</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;          <span class="keyword">const</span> <span class="keywordtype">int</span> end_j = std::min&lt;int&gt;(start_j + 3, 4 - pad_left - pad_right);</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;          <span class="keyword">const</span> <span class="keywordtype">int</span> valid_cols = end_j - std::max&lt;int&gt;(0, start_j);</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;          rescale_vals[i*2 + j] = <span class="keyword">static_cast&lt;</span><span class="keywordtype">float</span><span class="keyword">&gt;</span>(1.0f / <span class="keyword">static_cast&lt;</span><span class="keywordtype">float</span><span class="keyword">&gt;</span>(</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;            exclude_padding ? valid_rows * valid_cols : 9</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;          ));</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        }</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;      }</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    }</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;  };</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;  <span class="keyword">const</span> KernelArgs <a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>(n_channels, inptrs, outptrs, exclude_padding,</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;                        pad_left, pad_top, pad_right, pad_bottom);</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;  __asm__ __volatile__(</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="stringliteral">&quot;ldr x4, [%x[args], %[offsetof_n_channels]]\n&quot;</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <span class="stringliteral">&quot;mov x5, #0x0\n&quot;</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="stringliteral">&quot;ldr x20, [%x[args], %[offsetof_outptrs]]\n&quot;</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="stringliteral">&quot;mov x6, #0x0\n&quot;</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="stringliteral">&quot;ldr x19, [%x[args], %[offsetof_inptrs]]\n&quot;</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <span class="stringliteral">&quot;cmp x4, #0x4\n&quot;</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="stringliteral">&quot;ldp x7, x8, [x20, #0x0]\n&quot;</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="stringliteral">&quot;ldp x17, x16, [x20, #0x10]\n&quot;</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="stringliteral">&quot;ldp x15, x14, [x19, #0x0]\n&quot;</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <span class="stringliteral">&quot;ldp x13, x12, [x19, #0x10]\n&quot;</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="stringliteral">&quot;ldp x11, x10, [x19, #0x20]\n&quot;</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <span class="stringliteral">&quot;ldp x9, x28, [x19, #0x30]\n&quot;</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="stringliteral">&quot;ldp x27, x26, [x19, #0x40]\n&quot;</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <span class="stringliteral">&quot;ldp x25, x24, [x19, #0x50]\n&quot;</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <span class="stringliteral">&quot;ldp x23, x22, [x19, #0x60]\n&quot;</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <span class="stringliteral">&quot;ldp x21, x20, [x19, #0x70]\n&quot;</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <span class="stringliteral">&quot;ldr q8, [%x[args], %[offsetof_rescale]]\n&quot;</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="stringliteral">&quot;blt 3f\n&quot;</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <span class="stringliteral">&quot;ldr q7, [x10, x5]\n&quot;</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="stringliteral">&quot;lsr x19, x4, #0x2\n&quot;</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <span class="stringliteral">&quot;ldr q6, [x9, x5]\n&quot;</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="stringliteral">&quot;sub x4, x4, x19, LSL #2\n&quot;</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="stringliteral">&quot;ldr q5, [x26, x5]\n&quot;</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <span class="stringliteral">&quot;subs x19, x19, #0x1\n&quot;</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="stringliteral">&quot;ldr q4, [x25, x5]\n&quot;</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <span class="stringliteral">&quot;ldr q3, [x14, x5]\n&quot;</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <span class="stringliteral">&quot;ldr q2, [x13, x5]\n&quot;</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <span class="stringliteral">&quot;ldr q1, [x11, x5]\n&quot;</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <span class="stringliteral">&quot;ldr q0, [x27, x5]\n&quot;</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="stringliteral">&quot;ldr q31, [x28, x5]\n&quot;</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <span class="stringliteral">&quot;ldr q30, [x24, x5]\n&quot;</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="stringliteral">&quot;ldr q29, [x22, x5]\n&quot;</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="stringliteral">&quot;ldr q28, [x21, x5]\n&quot;</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <span class="stringliteral">&quot;ldr q27, [x15, x5]\n&quot;</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <span class="stringliteral">&quot;ldr q26, [x12, x5]\n&quot;</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <span class="stringliteral">&quot;ldr q25, [x23, x5]\n&quot;</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <span class="stringliteral">&quot;ldr q24, [x20, x5]\n&quot;</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="stringliteral">&quot;add x5, x5, #0x10\n&quot;</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <span class="stringliteral">&quot;beq 2f\n&quot;</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <span class="stringliteral">&quot;1:&quot;</span>  <span class="comment">// Vector: Loop</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <span class="stringliteral">&quot;fadd v17.4s, v7.4s, v6.4s\n&quot;</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <span class="stringliteral">&quot;ldr q7, [x10, x5]\n&quot;</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <span class="stringliteral">&quot;subs x19, x19, #0x1\n&quot;</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <span class="stringliteral">&quot;fadd v16.4s, v5.4s, v4.4s\n&quot;</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <span class="stringliteral">&quot;ldr q6, [x9, x5]\n&quot;</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <span class="stringliteral">&quot;fadd v18.4s, v3.4s, v2.4s\n&quot;</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <span class="stringliteral">&quot;ldr q5, [x26, x5]\n&quot;</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <span class="stringliteral">&quot;fadd v23.4s, v1.4s, v0.4s\n&quot;</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <span class="stringliteral">&quot;ldr q4, [x25, x5]\n&quot;</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <span class="stringliteral">&quot;fadd v22.4s, v31.4s, v30.4s\n&quot;</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <span class="stringliteral">&quot;ldr q3, [x14, x5]\n&quot;</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <span class="stringliteral">&quot;fadd v17.4s, v17.4s, v16.4s\n&quot;</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <span class="stringliteral">&quot;ldr q2, [x13, x5]\n&quot;</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <span class="stringliteral">&quot;fadd v16.4s, v29.4s, v28.4s\n&quot;</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <span class="stringliteral">&quot;ldr q1, [x11, x5]\n&quot;</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <span class="stringliteral">&quot;fadd v19.4s, v27.4s, v23.4s\n&quot;</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <span class="stringliteral">&quot;ldr q0, [x27, x5]\n&quot;</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <span class="stringliteral">&quot;fadd v21.4s, v18.4s, v17.4s\n&quot;</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <span class="stringliteral">&quot;ldr q31, [x28, x5]\n&quot;</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    <span class="stringliteral">&quot;fadd v20.4s, v16.4s, v17.4s\n&quot;</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <span class="stringliteral">&quot;ldr q30, [x24, x5]\n&quot;</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <span class="stringliteral">&quot;fadd v18.4s, v26.4s, v22.4s\n&quot;</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <span class="stringliteral">&quot;ldr q29, [x22, x5]\n&quot;</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <span class="stringliteral">&quot;fadd v17.4s, v25.4s, v23.4s\n&quot;</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <span class="stringliteral">&quot;ldr q28, [x21, x5]\n&quot;</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    <span class="stringliteral">&quot;fadd v16.4s, v24.4s, v22.4s\n&quot;</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <span class="stringliteral">&quot;ldr q27, [x15, x5]\n&quot;</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <span class="stringliteral">&quot;fadd v19.4s, v21.4s, v19.4s\n&quot;</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    <span class="stringliteral">&quot;ldr q26, [x12, x5]\n&quot;</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <span class="stringliteral">&quot;fadd v18.4s, v21.4s, v18.4s\n&quot;</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <span class="stringliteral">&quot;ldr q25, [x23, x5]\n&quot;</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <span class="stringliteral">&quot;fadd v17.4s, v17.4s, v20.4s\n&quot;</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <span class="stringliteral">&quot;ldr q24, [x20, x5]\n&quot;</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    <span class="stringliteral">&quot;add x5, x5, #0x10\n&quot;</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <span class="stringliteral">&quot;fadd v16.4s, v20.4s, v16.4s\n&quot;</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <span class="stringliteral">&quot;fmul v19.4s, v19.4s, v8.s[0]\n&quot;</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    <span class="stringliteral">&quot;str q19, [x7, x6]\n&quot;</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    <span class="stringliteral">&quot;fmul v18.4s, v18.4s, v8.s[1]\n&quot;</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    <span class="stringliteral">&quot;fmul v17.4s, v17.4s, v8.s[2]\n&quot;</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    <span class="stringliteral">&quot;str q18, [x8, x6]\n&quot;</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <span class="stringliteral">&quot;fmul v16.4s, v16.4s, v8.s[3]\n&quot;</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <span class="stringliteral">&quot;str q17, [x17, x6]\n&quot;</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <span class="stringliteral">&quot;str q16, [x16, x6]\n&quot;</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    <span class="stringliteral">&quot;add x6, x6, #0x10\n&quot;</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    <span class="stringliteral">&quot;bgt 1b\n&quot;</span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    <span class="stringliteral">&quot;2:&quot;</span>  <span class="comment">// Vector: Tail</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    <span class="stringliteral">&quot;fadd v17.4s, v7.4s, v6.4s\n&quot;</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    <span class="stringliteral">&quot;fadd v16.4s, v5.4s, v4.4s\n&quot;</span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    <span class="stringliteral">&quot;fadd v18.4s, v3.4s, v2.4s\n&quot;</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    <span class="stringliteral">&quot;fadd v23.4s, v1.4s, v0.4s\n&quot;</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    <span class="stringliteral">&quot;fadd v17.4s, v17.4s, v16.4s\n&quot;</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <span class="stringliteral">&quot;fadd v22.4s, v31.4s, v30.4s\n&quot;</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <span class="stringliteral">&quot;fadd v16.4s, v29.4s, v28.4s\n&quot;</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    <span class="stringliteral">&quot;fadd v21.4s, v18.4s, v17.4s\n&quot;</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    <span class="stringliteral">&quot;fadd v19.4s, v27.4s, v23.4s\n&quot;</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    <span class="stringliteral">&quot;fadd v20.4s, v16.4s, v17.4s\n&quot;</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    <span class="stringliteral">&quot;fadd v18.4s, v26.4s, v22.4s\n&quot;</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    <span class="stringliteral">&quot;fadd v17.4s, v25.4s, v23.4s\n&quot;</span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    <span class="stringliteral">&quot;fadd v16.4s, v24.4s, v22.4s\n&quot;</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    <span class="stringliteral">&quot;fadd v19.4s, v21.4s, v19.4s\n&quot;</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    <span class="stringliteral">&quot;fadd v18.4s, v21.4s, v18.4s\n&quot;</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    <span class="stringliteral">&quot;fadd v17.4s, v17.4s, v20.4s\n&quot;</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    <span class="stringliteral">&quot;fadd v16.4s, v20.4s, v16.4s\n&quot;</span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    <span class="stringliteral">&quot;fmul v19.4s, v19.4s, v8.s[0]\n&quot;</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    <span class="stringliteral">&quot;str q19, [x7, x6]\n&quot;</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    <span class="stringliteral">&quot;fmul v18.4s, v18.4s, v8.s[1]\n&quot;</span></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    <span class="stringliteral">&quot;fmul v17.4s, v17.4s, v8.s[2]\n&quot;</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    <span class="stringliteral">&quot;str q18, [x8, x6]\n&quot;</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    <span class="stringliteral">&quot;fmul v16.4s, v16.4s, v8.s[3]\n&quot;</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    <span class="stringliteral">&quot;str q17, [x17, x6]\n&quot;</span></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    <span class="stringliteral">&quot;str q16, [x16, x6]\n&quot;</span></div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    <span class="stringliteral">&quot;add x6, x6, #0x10\n&quot;</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    <span class="stringliteral">&quot;cbz x4, 4f\n&quot;</span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    <span class="stringliteral">&quot;3:&quot;</span>  <span class="comment">// Oddments</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    <span class="stringliteral">&quot;ldr s7, [x10, x5]\n&quot;</span></div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    <span class="stringliteral">&quot;subs x4, x4, #0x1\n&quot;</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    <span class="stringliteral">&quot;ldr s6, [x9, x5]\n&quot;</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    <span class="stringliteral">&quot;fadd v17.4s, v7.4s, v6.4s\n&quot;</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    <span class="stringliteral">&quot;ldr s5, [x26, x5]\n&quot;</span></div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    <span class="stringliteral">&quot;ldr s4, [x25, x5]\n&quot;</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    <span class="stringliteral">&quot;fadd v16.4s, v5.4s, v4.4s\n&quot;</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    <span class="stringliteral">&quot;ldr s3, [x14, x5]\n&quot;</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    <span class="stringliteral">&quot;ldr s2, [x13, x5]\n&quot;</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    <span class="stringliteral">&quot;fadd v17.4s, v17.4s, v16.4s\n&quot;</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    <span class="stringliteral">&quot;ldr s1, [x11, x5]\n&quot;</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    <span class="stringliteral">&quot;ldr s0, [x27, x5]\n&quot;</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    <span class="stringliteral">&quot;fadd v18.4s, v3.4s, v2.4s\n&quot;</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    <span class="stringliteral">&quot;ldr s31, [x28, x5]\n&quot;</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    <span class="stringliteral">&quot;fadd v23.4s, v1.4s, v0.4s\n&quot;</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    <span class="stringliteral">&quot;ldr s30, [x24, x5]\n&quot;</span></div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    <span class="stringliteral">&quot;fadd v21.4s, v18.4s, v17.4s\n&quot;</span></div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    <span class="stringliteral">&quot;ldr s29, [x22, x5]\n&quot;</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    <span class="stringliteral">&quot;ldr s28, [x21, x5]\n&quot;</span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    <span class="stringliteral">&quot;fadd v22.4s, v31.4s, v30.4s\n&quot;</span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    <span class="stringliteral">&quot;ldr s27, [x15, x5]\n&quot;</span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    <span class="stringliteral">&quot;ldr s26, [x12, x5]\n&quot;</span></div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    <span class="stringliteral">&quot;fadd v16.4s, v29.4s, v28.4s\n&quot;</span></div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    <span class="stringliteral">&quot;ldr s25, [x23, x5]\n&quot;</span></div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    <span class="stringliteral">&quot;fadd v20.4s, v16.4s, v17.4s\n&quot;</span></div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    <span class="stringliteral">&quot;ldr s24, [x20, x5]\n&quot;</span></div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    <span class="stringliteral">&quot;add x5, x5, #0x4\n&quot;</span></div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    <span class="stringliteral">&quot;fadd v19.4s, v27.4s, v23.4s\n&quot;</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    <span class="stringliteral">&quot;fadd v18.4s, v26.4s, v22.4s\n&quot;</span></div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    <span class="stringliteral">&quot;fadd v17.4s, v25.4s, v23.4s\n&quot;</span></div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    <span class="stringliteral">&quot;fadd v16.4s, v24.4s, v22.4s\n&quot;</span></div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    <span class="stringliteral">&quot;fadd v19.4s, v21.4s, v19.4s\n&quot;</span></div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    <span class="stringliteral">&quot;fadd v18.4s, v21.4s, v18.4s\n&quot;</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    <span class="stringliteral">&quot;fadd v17.4s, v17.4s, v20.4s\n&quot;</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    <span class="stringliteral">&quot;fadd v16.4s, v20.4s, v16.4s\n&quot;</span></div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    <span class="stringliteral">&quot;fmul v19.4s, v19.4s, v8.s[0]\n&quot;</span></div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    <span class="stringliteral">&quot;str s19, [x7, x6]\n&quot;</span></div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    <span class="stringliteral">&quot;fmul v18.4s, v18.4s, v8.s[1]\n&quot;</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    <span class="stringliteral">&quot;fmul v17.4s, v17.4s, v8.s[2]\n&quot;</span></div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    <span class="stringliteral">&quot;str s18, [x8, x6]\n&quot;</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    <span class="stringliteral">&quot;fmul v16.4s, v16.4s, v8.s[3]\n&quot;</span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    <span class="stringliteral">&quot;str s17, [x17, x6]\n&quot;</span></div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    <span class="stringliteral">&quot;str s16, [x16, x6]\n&quot;</span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    <span class="stringliteral">&quot;add x6, x6, #0x4\n&quot;</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    <span class="stringliteral">&quot;bgt 3b\n&quot;</span></div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    <span class="stringliteral">&quot;4:&quot;</span>  <span class="comment">// End</span></div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    :</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    : [<a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>] <span class="stringliteral">&quot;r&quot;</span> (&amp;<a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>), [offsetof_inptrs] <span class="stringliteral">&quot;I&quot;</span> (offsetof(KernelArgs, inptrs)), [offsetof_n_channels] <span class="stringliteral">&quot;I&quot;</span> (offsetof(KernelArgs, n_channels)), [offsetof_outptrs] <span class="stringliteral">&quot;I&quot;</span> (offsetof(KernelArgs, outptrs)), [offsetof_rescale] <span class="stringliteral">&quot;I&quot;</span> (offsetof(KernelArgs, rescale_vals))</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    : <span class="stringliteral">&quot;cc&quot;</span>, <span class="stringliteral">&quot;memory&quot;</span>, <span class="stringliteral">&quot;v0&quot;</span>, <span class="stringliteral">&quot;v1&quot;</span>, <span class="stringliteral">&quot;v2&quot;</span>, <span class="stringliteral">&quot;v3&quot;</span>, <span class="stringliteral">&quot;v4&quot;</span>, <span class="stringliteral">&quot;v5&quot;</span>, <span class="stringliteral">&quot;v6&quot;</span>, <span class="stringliteral">&quot;v7&quot;</span>, <span class="stringliteral">&quot;v8&quot;</span>, <span class="stringliteral">&quot;v16&quot;</span>, <span class="stringliteral">&quot;v17&quot;</span>, <span class="stringliteral">&quot;v18&quot;</span>, <span class="stringliteral">&quot;v19&quot;</span>, <span class="stringliteral">&quot;v20&quot;</span>, <span class="stringliteral">&quot;v21&quot;</span>, <span class="stringliteral">&quot;v22&quot;</span>, <span class="stringliteral">&quot;v23&quot;</span>, <span class="stringliteral">&quot;v24&quot;</span>, <span class="stringliteral">&quot;v25&quot;</span>, <span class="stringliteral">&quot;v26&quot;</span>, <span class="stringliteral">&quot;v27&quot;</span>, <span class="stringliteral">&quot;v28&quot;</span>, <span class="stringliteral">&quot;v29&quot;</span>, <span class="stringliteral">&quot;v30&quot;</span>, <span class="stringliteral">&quot;v31&quot;</span>, <span class="stringliteral">&quot;x4&quot;</span>, <span class="stringliteral">&quot;x5&quot;</span>, <span class="stringliteral">&quot;x6&quot;</span>, <span class="stringliteral">&quot;x7&quot;</span>, <span class="stringliteral">&quot;x8&quot;</span>, <span class="stringliteral">&quot;x9&quot;</span>, <span class="stringliteral">&quot;x10&quot;</span>, <span class="stringliteral">&quot;x11&quot;</span>, <span class="stringliteral">&quot;x12&quot;</span>, <span class="stringliteral">&quot;x13&quot;</span>, <span class="stringliteral">&quot;x14&quot;</span>, <span class="stringliteral">&quot;x15&quot;</span>, <span class="stringliteral">&quot;x16&quot;</span>, <span class="stringliteral">&quot;x17&quot;</span>, <span class="stringliteral">&quot;x19&quot;</span>, <span class="stringliteral">&quot;x20&quot;</span>, <span class="stringliteral">&quot;x21&quot;</span>, <span class="stringliteral">&quot;x22&quot;</span>, <span class="stringliteral">&quot;x23&quot;</span>, <span class="stringliteral">&quot;x24&quot;</span>, <span class="stringliteral">&quot;x25&quot;</span>, <span class="stringliteral">&quot;x26&quot;</span>, <span class="stringliteral">&quot;x27&quot;</span>, <span class="stringliteral">&quot;x28&quot;</span></div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;  );</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;}</div><div class="ttc" id="namespace_gemm_tuner_xhtml_a8187411843a6284ffb964ef3fb9fcab3"><div class="ttname"><a href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">GemmTuner.args</a></div><div class="ttdeci">args</div><div class="ttdef"><b>Definition:</b> <a href="_gemm_tuner_8py_source.xhtml#l00679">GemmTuner.py:679</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a4b12ebb4dca330b8e8d1fadda74a0543"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4b12ebb4dca330b8e8d1fadda74a0543">&#9670;&nbsp;</a></span>a64_fp32_nhwc_max_2x2_s1_output2x2_depthfirst_impl()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void a64_fp32_nhwc_max_2x2_s1_output2x2_depthfirst_impl </td>
          <td>(</td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>n_channels</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float *const *const&#160;</td>
          <td class="paramname"><em>inptrs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float *const *const&#160;</td>
          <td class="paramname"><em>outptrs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>exclude_padding</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>pad_left</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>pad_top</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>pad_right</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>pad_bottom</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="arm__conv_2pooling_2kernels_2a64__fp32__nhwc__max__2x2__s1__output2x2__depthfirst_2generic_8cpp_source.xhtml#l00032">32</a> of file <a class="el" href="arm__conv_2pooling_2kernels_2a64__fp32__nhwc__max__2x2__s1__output2x2__depthfirst_2generic_8cpp_source.xhtml">generic.cpp</a>.</p>

<p class="reference">References <a class="el" href="_gemm_tuner_8py_source.xhtml#l00679">GemmTuner::args</a>.</p>
<div class="fragment"><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;{</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  <span class="keyword">struct </span>KernelArgs</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;  {</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <span class="keyword">const</span> uint64_t n_channels;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">float</span> *<span class="keyword">const</span> *<span class="keyword">const</span> inptrs;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <span class="keywordtype">float</span> *<span class="keyword">const</span> *<span class="keyword">const</span> outptrs;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    KernelArgs(</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;      <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> channels,</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;      <span class="keyword">const</span> <span class="keywordtype">float</span> *<span class="keyword">const</span> *input_ptrs,</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;      <span class="keywordtype">float</span> *<span class="keyword">const</span> * output_ptrs,</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;      <span class="keywordtype">bool</span>, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    ) : n_channels(channels),</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        inptrs(input_ptrs),</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        outptrs(output_ptrs)</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    {</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    }</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;  };</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;  <span class="keyword">const</span> KernelArgs <a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>(n_channels, inptrs, outptrs, exclude_padding,</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                        pad_left, pad_top, pad_right, pad_bottom);</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;  __asm__ __volatile__(</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="stringliteral">&quot;ldr x15, [%x[args], %[offsetof_n_channels]]\n&quot;</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="stringliteral">&quot;mov x14, #0x0\n&quot;</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="stringliteral">&quot;ldr x20, [%x[args], %[offsetof_outptrs]]\n&quot;</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="stringliteral">&quot;mov x13, #0x0\n&quot;</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="stringliteral">&quot;ldr x19, [%x[args], %[offsetof_inptrs]]\n&quot;</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="stringliteral">&quot;cmp x15, #0x4\n&quot;</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="stringliteral">&quot;ldp x12, x11, [x20, #0x0]\n&quot;</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="stringliteral">&quot;ldp x10, x9, [x20, #0x10]\n&quot;</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="stringliteral">&quot;ldp x28, x27, [x19, #0x0]\n&quot;</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="stringliteral">&quot;ldp x26, x25, [x19, #0x10]\n&quot;</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="stringliteral">&quot;ldp x24, x23, [x19, #0x20]\n&quot;</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="stringliteral">&quot;ldp x22, x21, [x19, #0x30]\n&quot;</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <span class="stringliteral">&quot;ldr x20, [x19, #0x40]\n&quot;</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="stringliteral">&quot;blt 3f\n&quot;</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="stringliteral">&quot;ldr q30, [x27, x14]\n&quot;</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="stringliteral">&quot;lsr x19, x15, #0x2\n&quot;</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="stringliteral">&quot;ldr q29, [x24, x14]\n&quot;</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <span class="stringliteral">&quot;sub x15, x15, x19, LSL #2\n&quot;</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <span class="stringliteral">&quot;ldr q28, [x21, x14]\n&quot;</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="stringliteral">&quot;subs x19, x19, #0x1\n&quot;</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <span class="stringliteral">&quot;ldr q27, [x25, x14]\n&quot;</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="stringliteral">&quot;ldr q26, [x28, x14]\n&quot;</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="stringliteral">&quot;ldr q25, [x23, x14]\n&quot;</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="stringliteral">&quot;ldr q24, [x26, x14]\n&quot;</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <span class="stringliteral">&quot;ldr q23, [x22, x14]\n&quot;</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="stringliteral">&quot;ldr q22, [x20, x14]\n&quot;</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="stringliteral">&quot;add x14, x14, #0x10\n&quot;</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="stringliteral">&quot;beq 2f\n&quot;</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <span class="stringliteral">&quot;1:&quot;</span>  <span class="comment">// Vector: Loop</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="stringliteral">&quot;fmax v21.4s, v30.4s, v29.4s\n&quot;</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <span class="stringliteral">&quot;ldr q30, [x27, x14]\n&quot;</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="stringliteral">&quot;subs x19, x19, #0x1\n&quot;</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <span class="stringliteral">&quot;fmax v20.4s, v29.4s, v28.4s\n&quot;</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <span class="stringliteral">&quot;ldr q29, [x24, x14]\n&quot;</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <span class="stringliteral">&quot;fmax v19.4s, v27.4s, v26.4s\n&quot;</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <span class="stringliteral">&quot;ldr q28, [x21, x14]\n&quot;</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="stringliteral">&quot;fmax v18.4s, v25.4s, v24.4s\n&quot;</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <span class="stringliteral">&quot;ldr q26, [x28, x14]\n&quot;</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="stringliteral">&quot;fmax v17.4s, v23.4s, v27.4s\n&quot;</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <span class="stringliteral">&quot;ldr q27, [x25, x14]\n&quot;</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="stringliteral">&quot;fmax v16.4s, v25.4s, v22.4s\n&quot;</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="stringliteral">&quot;ldr q25, [x23, x14]\n&quot;</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <span class="stringliteral">&quot;fmax v19.4s, v21.4s, v19.4s\n&quot;</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="stringliteral">&quot;ldr q24, [x26, x14]\n&quot;</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <span class="stringliteral">&quot;fmax v18.4s, v21.4s, v18.4s\n&quot;</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <span class="stringliteral">&quot;ldr q23, [x22, x14]\n&quot;</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <span class="stringliteral">&quot;fmax v17.4s, v20.4s, v17.4s\n&quot;</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <span class="stringliteral">&quot;ldr q22, [x20, x14]\n&quot;</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="stringliteral">&quot;add x14, x14, #0x10\n&quot;</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <span class="stringliteral">&quot;fmax v16.4s, v20.4s, v16.4s\n&quot;</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="stringliteral">&quot;str q19, [x12, x13]\n&quot;</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="stringliteral">&quot;str q18, [x11, x13]\n&quot;</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <span class="stringliteral">&quot;str q17, [x10, x13]\n&quot;</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <span class="stringliteral">&quot;str q16, [x9, x13]\n&quot;</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <span class="stringliteral">&quot;add x13, x13, #0x10\n&quot;</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <span class="stringliteral">&quot;bgt 1b\n&quot;</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="stringliteral">&quot;2:&quot;</span>  <span class="comment">// Vector: Tail</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <span class="stringliteral">&quot;fmax v21.4s, v30.4s, v29.4s\n&quot;</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <span class="stringliteral">&quot;fmax v20.4s, v29.4s, v28.4s\n&quot;</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <span class="stringliteral">&quot;fmax v19.4s, v27.4s, v26.4s\n&quot;</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <span class="stringliteral">&quot;fmax v18.4s, v25.4s, v24.4s\n&quot;</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <span class="stringliteral">&quot;fmax v17.4s, v23.4s, v27.4s\n&quot;</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <span class="stringliteral">&quot;fmax v16.4s, v25.4s, v22.4s\n&quot;</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <span class="stringliteral">&quot;fmax v19.4s, v21.4s, v19.4s\n&quot;</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <span class="stringliteral">&quot;str q19, [x12, x13]\n&quot;</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <span class="stringliteral">&quot;fmax v18.4s, v21.4s, v18.4s\n&quot;</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <span class="stringliteral">&quot;fmax v17.4s, v20.4s, v17.4s\n&quot;</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <span class="stringliteral">&quot;str q18, [x11, x13]\n&quot;</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <span class="stringliteral">&quot;fmax v16.4s, v20.4s, v16.4s\n&quot;</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <span class="stringliteral">&quot;str q17, [x10, x13]\n&quot;</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <span class="stringliteral">&quot;str q16, [x9, x13]\n&quot;</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <span class="stringliteral">&quot;add x13, x13, #0x10\n&quot;</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <span class="stringliteral">&quot;cbz x15, 4f\n&quot;</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <span class="stringliteral">&quot;3:&quot;</span>  <span class="comment">// Oddments</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <span class="stringliteral">&quot;ldr s30, [x27, x14]\n&quot;</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <span class="stringliteral">&quot;subs x15, x15, #0x1\n&quot;</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <span class="stringliteral">&quot;ldr s29, [x24, x14]\n&quot;</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <span class="stringliteral">&quot;fmax v21.4s, v30.4s, v29.4s\n&quot;</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    <span class="stringliteral">&quot;ldr s28, [x21, x14]\n&quot;</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <span class="stringliteral">&quot;ldr s27, [x25, x14]\n&quot;</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <span class="stringliteral">&quot;fmax v20.4s, v29.4s, v28.4s\n&quot;</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <span class="stringliteral">&quot;ldr s26, [x28, x14]\n&quot;</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <span class="stringliteral">&quot;ldr s25, [x23, x14]\n&quot;</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <span class="stringliteral">&quot;fmax v19.4s, v27.4s, v26.4s\n&quot;</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    <span class="stringliteral">&quot;ldr s24, [x26, x14]\n&quot;</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <span class="stringliteral">&quot;ldr s23, [x22, x14]\n&quot;</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <span class="stringliteral">&quot;fmax v19.4s, v21.4s, v19.4s\n&quot;</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    <span class="stringliteral">&quot;ldr s22, [x20, x14]\n&quot;</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <span class="stringliteral">&quot;add x14, x14, #0x4\n&quot;</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <span class="stringliteral">&quot;fmax v18.4s, v25.4s, v24.4s\n&quot;</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <span class="stringliteral">&quot;str s19, [x12, x13]\n&quot;</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <span class="stringliteral">&quot;fmax v17.4s, v23.4s, v27.4s\n&quot;</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    <span class="stringliteral">&quot;fmax v16.4s, v25.4s, v22.4s\n&quot;</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <span class="stringliteral">&quot;fmax v18.4s, v21.4s, v18.4s\n&quot;</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <span class="stringliteral">&quot;str s18, [x11, x13]\n&quot;</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    <span class="stringliteral">&quot;fmax v17.4s, v20.4s, v17.4s\n&quot;</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    <span class="stringliteral">&quot;fmax v16.4s, v20.4s, v16.4s\n&quot;</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    <span class="stringliteral">&quot;str s17, [x10, x13]\n&quot;</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    <span class="stringliteral">&quot;str s16, [x9, x13]\n&quot;</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <span class="stringliteral">&quot;add x13, x13, #0x4\n&quot;</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <span class="stringliteral">&quot;bgt 3b\n&quot;</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <span class="stringliteral">&quot;4:&quot;</span>  <span class="comment">// End</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    :</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    : [<a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>] <span class="stringliteral">&quot;r&quot;</span> (&amp;<a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>), [offsetof_inptrs] <span class="stringliteral">&quot;I&quot;</span> (offsetof(KernelArgs, inptrs)), [offsetof_n_channels] <span class="stringliteral">&quot;I&quot;</span> (offsetof(KernelArgs, n_channels)), [offsetof_outptrs] <span class="stringliteral">&quot;I&quot;</span> (offsetof(KernelArgs, outptrs))</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    : <span class="stringliteral">&quot;cc&quot;</span>, <span class="stringliteral">&quot;memory&quot;</span>, <span class="stringliteral">&quot;v16&quot;</span>, <span class="stringliteral">&quot;v17&quot;</span>, <span class="stringliteral">&quot;v18&quot;</span>, <span class="stringliteral">&quot;v19&quot;</span>, <span class="stringliteral">&quot;v20&quot;</span>, <span class="stringliteral">&quot;v21&quot;</span>, <span class="stringliteral">&quot;v22&quot;</span>, <span class="stringliteral">&quot;v23&quot;</span>, <span class="stringliteral">&quot;v24&quot;</span>, <span class="stringliteral">&quot;v25&quot;</span>, <span class="stringliteral">&quot;v26&quot;</span>, <span class="stringliteral">&quot;v27&quot;</span>, <span class="stringliteral">&quot;v28&quot;</span>, <span class="stringliteral">&quot;v29&quot;</span>, <span class="stringliteral">&quot;v30&quot;</span>, <span class="stringliteral">&quot;x9&quot;</span>, <span class="stringliteral">&quot;x10&quot;</span>, <span class="stringliteral">&quot;x11&quot;</span>, <span class="stringliteral">&quot;x12&quot;</span>, <span class="stringliteral">&quot;x13&quot;</span>, <span class="stringliteral">&quot;x14&quot;</span>, <span class="stringliteral">&quot;x15&quot;</span>, <span class="stringliteral">&quot;x19&quot;</span>, <span class="stringliteral">&quot;x20&quot;</span>, <span class="stringliteral">&quot;x21&quot;</span>, <span class="stringliteral">&quot;x22&quot;</span>, <span class="stringliteral">&quot;x23&quot;</span>, <span class="stringliteral">&quot;x24&quot;</span>, <span class="stringliteral">&quot;x25&quot;</span>, <span class="stringliteral">&quot;x26&quot;</span>, <span class="stringliteral">&quot;x27&quot;</span>, <span class="stringliteral">&quot;x28&quot;</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;  );</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;}</div><div class="ttc" id="namespace_gemm_tuner_xhtml_a8187411843a6284ffb964ef3fb9fcab3"><div class="ttname"><a href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">GemmTuner.args</a></div><div class="ttdeci">args</div><div class="ttdef"><b>Definition:</b> <a href="_gemm_tuner_8py_source.xhtml#l00679">GemmTuner.py:679</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="aeb0dd4784217ad7ae84fb17486657831"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeb0dd4784217ad7ae84fb17486657831">&#9670;&nbsp;</a></span>a64_s8_nhwc_max_2x2_s1_output2x2_depthfirst_impl()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void a64_s8_nhwc_max_2x2_s1_output2x2_depthfirst_impl </td>
          <td>(</td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>n_channels</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8_t *const *const&#160;</td>
          <td class="paramname"><em>inptrs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int8_t *const *const&#160;</td>
          <td class="paramname"><em>outptrs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>exclude_padding</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>pad_left</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>pad_top</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>pad_right</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>pad_bottom</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="arm__conv_2pooling_2kernels_2a64__s8__nhwc__max__2x2__s1__output2x2__depthfirst_2generic_8cpp_source.xhtml#l00032">32</a> of file <a class="el" href="arm__conv_2pooling_2kernels_2a64__s8__nhwc__max__2x2__s1__output2x2__depthfirst_2generic_8cpp_source.xhtml">generic.cpp</a>.</p>

<p class="reference">References <a class="el" href="_gemm_tuner_8py_source.xhtml#l00679">GemmTuner::args</a>.</p>
<div class="fragment"><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;{</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  <span class="keyword">struct </span>KernelArgs</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;  {</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <span class="keyword">const</span> uint64_t n_channels;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <span class="keyword">const</span> int8_t *<span class="keyword">const</span> *<span class="keyword">const</span> inptrs;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    int8_t *<span class="keyword">const</span> *<span class="keyword">const</span> outptrs;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    KernelArgs(</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;      <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> channels,</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;      <span class="keyword">const</span> int8_t *<span class="keyword">const</span> *input_ptrs,</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;      int8_t *<span class="keyword">const</span> * output_ptrs,</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;      <span class="keywordtype">bool</span>, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    ) : n_channels(channels),</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        inptrs(input_ptrs),</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        outptrs(output_ptrs)</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    {</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    }</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;  };</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;  <span class="keyword">const</span> KernelArgs <a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>(n_channels, inptrs, outptrs, exclude_padding,</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                        pad_left, pad_top, pad_right, pad_bottom);</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;  __asm__ __volatile__(</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="stringliteral">&quot;ldr x15, [%x[args], %[offsetof_n_channels]]\n&quot;</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="stringliteral">&quot;mov x14, #0x0\n&quot;</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="stringliteral">&quot;ldr x20, [%x[args], %[offsetof_outptrs]]\n&quot;</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="stringliteral">&quot;mov x13, #0x0\n&quot;</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="stringliteral">&quot;ldr x19, [%x[args], %[offsetof_inptrs]]\n&quot;</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="stringliteral">&quot;cmp x15, #0x10\n&quot;</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="stringliteral">&quot;ldp x12, x11, [x20, #0x0]\n&quot;</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="stringliteral">&quot;ldp x10, x9, [x20, #0x10]\n&quot;</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="stringliteral">&quot;ldp x28, x27, [x19, #0x0]\n&quot;</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="stringliteral">&quot;ldp x26, x25, [x19, #0x10]\n&quot;</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="stringliteral">&quot;ldp x24, x23, [x19, #0x20]\n&quot;</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="stringliteral">&quot;ldp x22, x21, [x19, #0x30]\n&quot;</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <span class="stringliteral">&quot;ldr x20, [x19, #0x40]\n&quot;</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="stringliteral">&quot;blt 3f\n&quot;</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="stringliteral">&quot;ldr q30, [x27, x14]\n&quot;</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="stringliteral">&quot;lsr x19, x15, #0x4\n&quot;</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="stringliteral">&quot;ldr q29, [x24, x14]\n&quot;</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <span class="stringliteral">&quot;sub x15, x15, x19, LSL #4\n&quot;</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <span class="stringliteral">&quot;ldr q28, [x21, x14]\n&quot;</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="stringliteral">&quot;subs x19, x19, #0x1\n&quot;</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <span class="stringliteral">&quot;ldr q27, [x25, x14]\n&quot;</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="stringliteral">&quot;ldr q26, [x28, x14]\n&quot;</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="stringliteral">&quot;ldr q25, [x23, x14]\n&quot;</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="stringliteral">&quot;ldr q24, [x26, x14]\n&quot;</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <span class="stringliteral">&quot;ldr q23, [x22, x14]\n&quot;</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="stringliteral">&quot;ldr q22, [x20, x14]\n&quot;</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="stringliteral">&quot;add x14, x14, #0x10\n&quot;</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="stringliteral">&quot;beq 2f\n&quot;</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <span class="stringliteral">&quot;1:&quot;</span>  <span class="comment">// Vector: Loop</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="stringliteral">&quot;smax v21.16b, v30.16b, v29.16b\n&quot;</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <span class="stringliteral">&quot;ldr q30, [x27, x14]\n&quot;</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="stringliteral">&quot;subs x19, x19, #0x1\n&quot;</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <span class="stringliteral">&quot;smax v20.16b, v29.16b, v28.16b\n&quot;</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <span class="stringliteral">&quot;ldr q29, [x24, x14]\n&quot;</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <span class="stringliteral">&quot;smax v19.16b, v27.16b, v26.16b\n&quot;</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <span class="stringliteral">&quot;ldr q28, [x21, x14]\n&quot;</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="stringliteral">&quot;smax v18.16b, v25.16b, v24.16b\n&quot;</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <span class="stringliteral">&quot;ldr q26, [x28, x14]\n&quot;</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="stringliteral">&quot;smax v17.16b, v23.16b, v27.16b\n&quot;</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <span class="stringliteral">&quot;ldr q27, [x25, x14]\n&quot;</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="stringliteral">&quot;smax v16.16b, v25.16b, v22.16b\n&quot;</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="stringliteral">&quot;ldr q25, [x23, x14]\n&quot;</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <span class="stringliteral">&quot;smax v19.16b, v21.16b, v19.16b\n&quot;</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="stringliteral">&quot;ldr q24, [x26, x14]\n&quot;</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <span class="stringliteral">&quot;smax v18.16b, v21.16b, v18.16b\n&quot;</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <span class="stringliteral">&quot;ldr q23, [x22, x14]\n&quot;</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <span class="stringliteral">&quot;smax v17.16b, v20.16b, v17.16b\n&quot;</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <span class="stringliteral">&quot;ldr q22, [x20, x14]\n&quot;</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="stringliteral">&quot;add x14, x14, #0x10\n&quot;</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <span class="stringliteral">&quot;smax v16.16b, v20.16b, v16.16b\n&quot;</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="stringliteral">&quot;str q19, [x12, x13]\n&quot;</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="stringliteral">&quot;str q18, [x11, x13]\n&quot;</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <span class="stringliteral">&quot;str q17, [x10, x13]\n&quot;</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <span class="stringliteral">&quot;str q16, [x9, x13]\n&quot;</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <span class="stringliteral">&quot;add x13, x13, #0x10\n&quot;</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <span class="stringliteral">&quot;bgt 1b\n&quot;</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="stringliteral">&quot;2:&quot;</span>  <span class="comment">// Vector: Tail</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <span class="stringliteral">&quot;smax v21.16b, v30.16b, v29.16b\n&quot;</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <span class="stringliteral">&quot;smax v20.16b, v29.16b, v28.16b\n&quot;</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <span class="stringliteral">&quot;smax v19.16b, v27.16b, v26.16b\n&quot;</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <span class="stringliteral">&quot;smax v18.16b, v25.16b, v24.16b\n&quot;</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <span class="stringliteral">&quot;smax v17.16b, v23.16b, v27.16b\n&quot;</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <span class="stringliteral">&quot;smax v16.16b, v25.16b, v22.16b\n&quot;</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <span class="stringliteral">&quot;smax v19.16b, v21.16b, v19.16b\n&quot;</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <span class="stringliteral">&quot;str q19, [x12, x13]\n&quot;</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <span class="stringliteral">&quot;smax v18.16b, v21.16b, v18.16b\n&quot;</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <span class="stringliteral">&quot;smax v17.16b, v20.16b, v17.16b\n&quot;</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <span class="stringliteral">&quot;str q18, [x11, x13]\n&quot;</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <span class="stringliteral">&quot;smax v16.16b, v20.16b, v16.16b\n&quot;</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <span class="stringliteral">&quot;str q17, [x10, x13]\n&quot;</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <span class="stringliteral">&quot;str q16, [x9, x13]\n&quot;</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <span class="stringliteral">&quot;add x13, x13, #0x10\n&quot;</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <span class="stringliteral">&quot;cbz x15, 4f\n&quot;</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <span class="stringliteral">&quot;3:&quot;</span>  <span class="comment">// Oddments</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <span class="stringliteral">&quot;ldr b30, [x27, x14]\n&quot;</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <span class="stringliteral">&quot;subs x15, x15, #0x1\n&quot;</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <span class="stringliteral">&quot;ldr b29, [x24, x14]\n&quot;</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <span class="stringliteral">&quot;smax v21.16b, v30.16b, v29.16b\n&quot;</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    <span class="stringliteral">&quot;ldr b28, [x21, x14]\n&quot;</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <span class="stringliteral">&quot;ldr b27, [x25, x14]\n&quot;</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <span class="stringliteral">&quot;smax v20.16b, v29.16b, v28.16b\n&quot;</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <span class="stringliteral">&quot;ldr b26, [x28, x14]\n&quot;</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <span class="stringliteral">&quot;ldr b25, [x23, x14]\n&quot;</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <span class="stringliteral">&quot;smax v19.16b, v27.16b, v26.16b\n&quot;</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    <span class="stringliteral">&quot;ldr b24, [x26, x14]\n&quot;</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <span class="stringliteral">&quot;ldr b23, [x22, x14]\n&quot;</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <span class="stringliteral">&quot;smax v19.16b, v21.16b, v19.16b\n&quot;</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    <span class="stringliteral">&quot;ldr b22, [x20, x14]\n&quot;</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <span class="stringliteral">&quot;add x14, x14, #0x1\n&quot;</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <span class="stringliteral">&quot;smax v18.16b, v25.16b, v24.16b\n&quot;</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <span class="stringliteral">&quot;str b19, [x12, x13]\n&quot;</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <span class="stringliteral">&quot;smax v17.16b, v23.16b, v27.16b\n&quot;</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    <span class="stringliteral">&quot;smax v16.16b, v25.16b, v22.16b\n&quot;</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <span class="stringliteral">&quot;smax v18.16b, v21.16b, v18.16b\n&quot;</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <span class="stringliteral">&quot;str b18, [x11, x13]\n&quot;</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    <span class="stringliteral">&quot;smax v17.16b, v20.16b, v17.16b\n&quot;</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    <span class="stringliteral">&quot;smax v16.16b, v20.16b, v16.16b\n&quot;</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    <span class="stringliteral">&quot;str b17, [x10, x13]\n&quot;</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    <span class="stringliteral">&quot;str b16, [x9, x13]\n&quot;</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <span class="stringliteral">&quot;add x13, x13, #0x1\n&quot;</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <span class="stringliteral">&quot;bgt 3b\n&quot;</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <span class="stringliteral">&quot;4:&quot;</span>  <span class="comment">// End</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    :</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    : [<a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>] <span class="stringliteral">&quot;r&quot;</span> (&amp;<a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>), [offsetof_inptrs] <span class="stringliteral">&quot;I&quot;</span> (offsetof(KernelArgs, inptrs)), [offsetof_n_channels] <span class="stringliteral">&quot;I&quot;</span> (offsetof(KernelArgs, n_channels)), [offsetof_outptrs] <span class="stringliteral">&quot;I&quot;</span> (offsetof(KernelArgs, outptrs))</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    : <span class="stringliteral">&quot;cc&quot;</span>, <span class="stringliteral">&quot;memory&quot;</span>, <span class="stringliteral">&quot;v16&quot;</span>, <span class="stringliteral">&quot;v17&quot;</span>, <span class="stringliteral">&quot;v18&quot;</span>, <span class="stringliteral">&quot;v19&quot;</span>, <span class="stringliteral">&quot;v20&quot;</span>, <span class="stringliteral">&quot;v21&quot;</span>, <span class="stringliteral">&quot;v22&quot;</span>, <span class="stringliteral">&quot;v23&quot;</span>, <span class="stringliteral">&quot;v24&quot;</span>, <span class="stringliteral">&quot;v25&quot;</span>, <span class="stringliteral">&quot;v26&quot;</span>, <span class="stringliteral">&quot;v27&quot;</span>, <span class="stringliteral">&quot;v28&quot;</span>, <span class="stringliteral">&quot;v29&quot;</span>, <span class="stringliteral">&quot;v30&quot;</span>, <span class="stringliteral">&quot;x9&quot;</span>, <span class="stringliteral">&quot;x10&quot;</span>, <span class="stringliteral">&quot;x11&quot;</span>, <span class="stringliteral">&quot;x12&quot;</span>, <span class="stringliteral">&quot;x13&quot;</span>, <span class="stringliteral">&quot;x14&quot;</span>, <span class="stringliteral">&quot;x15&quot;</span>, <span class="stringliteral">&quot;x19&quot;</span>, <span class="stringliteral">&quot;x20&quot;</span>, <span class="stringliteral">&quot;x21&quot;</span>, <span class="stringliteral">&quot;x22&quot;</span>, <span class="stringliteral">&quot;x23&quot;</span>, <span class="stringliteral">&quot;x24&quot;</span>, <span class="stringliteral">&quot;x25&quot;</span>, <span class="stringliteral">&quot;x26&quot;</span>, <span class="stringliteral">&quot;x27&quot;</span>, <span class="stringliteral">&quot;x28&quot;</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;  );</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;}</div><div class="ttc" id="namespace_gemm_tuner_xhtml_a8187411843a6284ffb964ef3fb9fcab3"><div class="ttname"><a href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">GemmTuner.args</a></div><div class="ttdeci">args</div><div class="ttdef"><b>Definition:</b> <a href="_gemm_tuner_8py_source.xhtml#l00679">GemmTuner.py:679</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a4b4fb6be3b8407051efb6332d95196d2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4b4fb6be3b8407051efb6332d95196d2">&#9670;&nbsp;</a></span>a64_u8_nhwc_max_2x2_s1_output2x2_depthfirst_impl()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void a64_u8_nhwc_max_2x2_s1_output2x2_depthfirst_impl </td>
          <td>(</td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>n_channels</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8_t *const *const&#160;</td>
          <td class="paramname"><em>inptrs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t *const *const&#160;</td>
          <td class="paramname"><em>outptrs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>exclude_padding</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>pad_left</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>pad_top</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>pad_right</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>pad_bottom</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="arm__conv_2pooling_2kernels_2a64__u8__nhwc__max__2x2__s1__output2x2__depthfirst_2generic_8cpp_source.xhtml#l00032">32</a> of file <a class="el" href="arm__conv_2pooling_2kernels_2a64__u8__nhwc__max__2x2__s1__output2x2__depthfirst_2generic_8cpp_source.xhtml">generic.cpp</a>.</p>

<p class="reference">References <a class="el" href="_gemm_tuner_8py_source.xhtml#l00679">GemmTuner::args</a>.</p>
<div class="fragment"><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;{</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  <span class="keyword">struct </span>KernelArgs</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;  {</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <span class="keyword">const</span> uint64_t n_channels;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <span class="keyword">const</span> uint8_t *<span class="keyword">const</span> *<span class="keyword">const</span> inptrs;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    uint8_t *<span class="keyword">const</span> *<span class="keyword">const</span> outptrs;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    KernelArgs(</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;      <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> channels,</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;      <span class="keyword">const</span> uint8_t *<span class="keyword">const</span> *input_ptrs,</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;      uint8_t *<span class="keyword">const</span> * output_ptrs,</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;      <span class="keywordtype">bool</span>, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    ) : n_channels(channels),</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        inptrs(input_ptrs),</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        outptrs(output_ptrs)</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    {</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    }</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;  };</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;  <span class="keyword">const</span> KernelArgs <a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>(n_channels, inptrs, outptrs, exclude_padding,</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                        pad_left, pad_top, pad_right, pad_bottom);</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;  __asm__ __volatile__(</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="stringliteral">&quot;ldr x15, [%x[args], %[offsetof_n_channels]]\n&quot;</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="stringliteral">&quot;mov x14, #0x0\n&quot;</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="stringliteral">&quot;ldr x20, [%x[args], %[offsetof_outptrs]]\n&quot;</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="stringliteral">&quot;mov x13, #0x0\n&quot;</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="stringliteral">&quot;ldr x19, [%x[args], %[offsetof_inptrs]]\n&quot;</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="stringliteral">&quot;cmp x15, #0x10\n&quot;</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="stringliteral">&quot;ldp x12, x11, [x20, #0x0]\n&quot;</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="stringliteral">&quot;ldp x10, x9, [x20, #0x10]\n&quot;</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="stringliteral">&quot;ldp x28, x27, [x19, #0x0]\n&quot;</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="stringliteral">&quot;ldp x26, x25, [x19, #0x10]\n&quot;</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="stringliteral">&quot;ldp x24, x23, [x19, #0x20]\n&quot;</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="stringliteral">&quot;ldp x22, x21, [x19, #0x30]\n&quot;</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <span class="stringliteral">&quot;ldr x20, [x19, #0x40]\n&quot;</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="stringliteral">&quot;blt 3f\n&quot;</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="stringliteral">&quot;ldr q30, [x27, x14]\n&quot;</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="stringliteral">&quot;lsr x19, x15, #0x4\n&quot;</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="stringliteral">&quot;ldr q29, [x24, x14]\n&quot;</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <span class="stringliteral">&quot;sub x15, x15, x19, LSL #4\n&quot;</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <span class="stringliteral">&quot;ldr q28, [x21, x14]\n&quot;</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="stringliteral">&quot;subs x19, x19, #0x1\n&quot;</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <span class="stringliteral">&quot;ldr q27, [x25, x14]\n&quot;</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="stringliteral">&quot;ldr q26, [x28, x14]\n&quot;</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="stringliteral">&quot;ldr q25, [x23, x14]\n&quot;</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="stringliteral">&quot;ldr q24, [x26, x14]\n&quot;</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <span class="stringliteral">&quot;ldr q23, [x22, x14]\n&quot;</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="stringliteral">&quot;ldr q22, [x20, x14]\n&quot;</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="stringliteral">&quot;add x14, x14, #0x10\n&quot;</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="stringliteral">&quot;beq 2f\n&quot;</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <span class="stringliteral">&quot;1:&quot;</span>  <span class="comment">// Vector: Loop</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="stringliteral">&quot;umax v21.16b, v30.16b, v29.16b\n&quot;</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <span class="stringliteral">&quot;ldr q30, [x27, x14]\n&quot;</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="stringliteral">&quot;subs x19, x19, #0x1\n&quot;</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <span class="stringliteral">&quot;umax v20.16b, v29.16b, v28.16b\n&quot;</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <span class="stringliteral">&quot;ldr q29, [x24, x14]\n&quot;</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <span class="stringliteral">&quot;umax v19.16b, v27.16b, v26.16b\n&quot;</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <span class="stringliteral">&quot;ldr q28, [x21, x14]\n&quot;</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="stringliteral">&quot;umax v18.16b, v25.16b, v24.16b\n&quot;</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <span class="stringliteral">&quot;ldr q26, [x28, x14]\n&quot;</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="stringliteral">&quot;umax v17.16b, v23.16b, v27.16b\n&quot;</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <span class="stringliteral">&quot;ldr q27, [x25, x14]\n&quot;</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="stringliteral">&quot;umax v16.16b, v25.16b, v22.16b\n&quot;</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="stringliteral">&quot;ldr q25, [x23, x14]\n&quot;</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <span class="stringliteral">&quot;umax v19.16b, v21.16b, v19.16b\n&quot;</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="stringliteral">&quot;ldr q24, [x26, x14]\n&quot;</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <span class="stringliteral">&quot;umax v18.16b, v21.16b, v18.16b\n&quot;</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <span class="stringliteral">&quot;ldr q23, [x22, x14]\n&quot;</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <span class="stringliteral">&quot;umax v17.16b, v20.16b, v17.16b\n&quot;</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <span class="stringliteral">&quot;ldr q22, [x20, x14]\n&quot;</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="stringliteral">&quot;add x14, x14, #0x10\n&quot;</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <span class="stringliteral">&quot;umax v16.16b, v20.16b, v16.16b\n&quot;</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="stringliteral">&quot;str q19, [x12, x13]\n&quot;</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="stringliteral">&quot;str q18, [x11, x13]\n&quot;</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <span class="stringliteral">&quot;str q17, [x10, x13]\n&quot;</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <span class="stringliteral">&quot;str q16, [x9, x13]\n&quot;</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <span class="stringliteral">&quot;add x13, x13, #0x10\n&quot;</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <span class="stringliteral">&quot;bgt 1b\n&quot;</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="stringliteral">&quot;2:&quot;</span>  <span class="comment">// Vector: Tail</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <span class="stringliteral">&quot;umax v21.16b, v30.16b, v29.16b\n&quot;</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <span class="stringliteral">&quot;umax v20.16b, v29.16b, v28.16b\n&quot;</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <span class="stringliteral">&quot;umax v19.16b, v27.16b, v26.16b\n&quot;</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <span class="stringliteral">&quot;umax v18.16b, v25.16b, v24.16b\n&quot;</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <span class="stringliteral">&quot;umax v17.16b, v23.16b, v27.16b\n&quot;</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <span class="stringliteral">&quot;umax v16.16b, v25.16b, v22.16b\n&quot;</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <span class="stringliteral">&quot;umax v19.16b, v21.16b, v19.16b\n&quot;</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <span class="stringliteral">&quot;str q19, [x12, x13]\n&quot;</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <span class="stringliteral">&quot;umax v18.16b, v21.16b, v18.16b\n&quot;</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <span class="stringliteral">&quot;umax v17.16b, v20.16b, v17.16b\n&quot;</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <span class="stringliteral">&quot;str q18, [x11, x13]\n&quot;</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <span class="stringliteral">&quot;umax v16.16b, v20.16b, v16.16b\n&quot;</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <span class="stringliteral">&quot;str q17, [x10, x13]\n&quot;</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <span class="stringliteral">&quot;str q16, [x9, x13]\n&quot;</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <span class="stringliteral">&quot;add x13, x13, #0x10\n&quot;</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <span class="stringliteral">&quot;cbz x15, 4f\n&quot;</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <span class="stringliteral">&quot;3:&quot;</span>  <span class="comment">// Oddments</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <span class="stringliteral">&quot;ldr b30, [x27, x14]\n&quot;</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <span class="stringliteral">&quot;subs x15, x15, #0x1\n&quot;</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <span class="stringliteral">&quot;ldr b29, [x24, x14]\n&quot;</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <span class="stringliteral">&quot;umax v21.16b, v30.16b, v29.16b\n&quot;</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    <span class="stringliteral">&quot;ldr b28, [x21, x14]\n&quot;</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <span class="stringliteral">&quot;ldr b27, [x25, x14]\n&quot;</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <span class="stringliteral">&quot;umax v20.16b, v29.16b, v28.16b\n&quot;</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <span class="stringliteral">&quot;ldr b26, [x28, x14]\n&quot;</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <span class="stringliteral">&quot;ldr b25, [x23, x14]\n&quot;</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <span class="stringliteral">&quot;umax v19.16b, v27.16b, v26.16b\n&quot;</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    <span class="stringliteral">&quot;ldr b24, [x26, x14]\n&quot;</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <span class="stringliteral">&quot;ldr b23, [x22, x14]\n&quot;</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <span class="stringliteral">&quot;umax v19.16b, v21.16b, v19.16b\n&quot;</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    <span class="stringliteral">&quot;ldr b22, [x20, x14]\n&quot;</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <span class="stringliteral">&quot;add x14, x14, #0x1\n&quot;</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <span class="stringliteral">&quot;umax v18.16b, v25.16b, v24.16b\n&quot;</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <span class="stringliteral">&quot;str b19, [x12, x13]\n&quot;</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <span class="stringliteral">&quot;umax v17.16b, v23.16b, v27.16b\n&quot;</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    <span class="stringliteral">&quot;umax v16.16b, v25.16b, v22.16b\n&quot;</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <span class="stringliteral">&quot;umax v18.16b, v21.16b, v18.16b\n&quot;</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <span class="stringliteral">&quot;str b18, [x11, x13]\n&quot;</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    <span class="stringliteral">&quot;umax v17.16b, v20.16b, v17.16b\n&quot;</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    <span class="stringliteral">&quot;umax v16.16b, v20.16b, v16.16b\n&quot;</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    <span class="stringliteral">&quot;str b17, [x10, x13]\n&quot;</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    <span class="stringliteral">&quot;str b16, [x9, x13]\n&quot;</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <span class="stringliteral">&quot;add x13, x13, #0x1\n&quot;</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <span class="stringliteral">&quot;bgt 3b\n&quot;</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <span class="stringliteral">&quot;4:&quot;</span>  <span class="comment">// End</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    :</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    : [<a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>] <span class="stringliteral">&quot;r&quot;</span> (&amp;<a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>), [offsetof_inptrs] <span class="stringliteral">&quot;I&quot;</span> (offsetof(KernelArgs, inptrs)), [offsetof_n_channels] <span class="stringliteral">&quot;I&quot;</span> (offsetof(KernelArgs, n_channels)), [offsetof_outptrs] <span class="stringliteral">&quot;I&quot;</span> (offsetof(KernelArgs, outptrs))</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    : <span class="stringliteral">&quot;cc&quot;</span>, <span class="stringliteral">&quot;memory&quot;</span>, <span class="stringliteral">&quot;v16&quot;</span>, <span class="stringliteral">&quot;v17&quot;</span>, <span class="stringliteral">&quot;v18&quot;</span>, <span class="stringliteral">&quot;v19&quot;</span>, <span class="stringliteral">&quot;v20&quot;</span>, <span class="stringliteral">&quot;v21&quot;</span>, <span class="stringliteral">&quot;v22&quot;</span>, <span class="stringliteral">&quot;v23&quot;</span>, <span class="stringliteral">&quot;v24&quot;</span>, <span class="stringliteral">&quot;v25&quot;</span>, <span class="stringliteral">&quot;v26&quot;</span>, <span class="stringliteral">&quot;v27&quot;</span>, <span class="stringliteral">&quot;v28&quot;</span>, <span class="stringliteral">&quot;v29&quot;</span>, <span class="stringliteral">&quot;v30&quot;</span>, <span class="stringliteral">&quot;x9&quot;</span>, <span class="stringliteral">&quot;x10&quot;</span>, <span class="stringliteral">&quot;x11&quot;</span>, <span class="stringliteral">&quot;x12&quot;</span>, <span class="stringliteral">&quot;x13&quot;</span>, <span class="stringliteral">&quot;x14&quot;</span>, <span class="stringliteral">&quot;x15&quot;</span>, <span class="stringliteral">&quot;x19&quot;</span>, <span class="stringliteral">&quot;x20&quot;</span>, <span class="stringliteral">&quot;x21&quot;</span>, <span class="stringliteral">&quot;x22&quot;</span>, <span class="stringliteral">&quot;x23&quot;</span>, <span class="stringliteral">&quot;x24&quot;</span>, <span class="stringliteral">&quot;x25&quot;</span>, <span class="stringliteral">&quot;x26&quot;</span>, <span class="stringliteral">&quot;x27&quot;</span>, <span class="stringliteral">&quot;x28&quot;</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;  );</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;}</div><div class="ttc" id="namespace_gemm_tuner_xhtml_a8187411843a6284ffb964ef3fb9fcab3"><div class="ttname"><a href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">GemmTuner.args</a></div><div class="ttdeci">args</div><div class="ttdef"><b>Definition:</b> <a href="_gemm_tuner_8py_source.xhtml#l00679">GemmTuner.py:679</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="aabc3b75050cf75332af4b31216401f69"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aabc3b75050cf75332af4b31216401f69">&#9670;&nbsp;</a></span>cpp_nhwc_1x1_stride_any_depthfirst_impl() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void cpp_nhwc_1x1_stride_any_depthfirst_impl </td>
          <td>(</td>
          <td class="paramtype">uint64_t&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint64_t&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint64_t&#160;</td>
          <td class="paramname"><em>n_channels</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const T *const *const&#160;</td>
          <td class="paramname"><em>inptrs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">T *&#160;</td>
          <td class="paramname"><em>outptr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="arm__conv_2pooling_2kernels_2cpp__nhwc__1x1__stride__any__depthfirst_2generic_8cpp_source.xhtml#l00032">32</a> of file <a class="el" href="arm__conv_2pooling_2kernels_2cpp__nhwc__1x1__stride__any__depthfirst_2generic_8cpp_source.xhtml">generic.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;{</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;  std::memcpy(outptr, inptrs[0], n_channels * <span class="keyword">sizeof</span>(T));</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ab34fd1116040e1c221224b283b749c23"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab34fd1116040e1c221224b283b749c23">&#9670;&nbsp;</a></span>cpp_nhwc_1x1_stride_any_depthfirst_impl() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">template void arm_conv::pooling::cpp_nhwc_1x1_stride_any_depthfirst_impl </td>
          <td>(</td>
          <td class="paramtype">uint64_t&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint64_t&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint64_t&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float *const *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a943a41657d5c7f9e3c03ae5e677c77d9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a943a41657d5c7f9e3c03ae5e677c77d9">&#9670;&nbsp;</a></span>cpp_nhwc_1x1_stride_any_depthfirst_impl() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">template void arm_conv::pooling::cpp_nhwc_1x1_stride_any_depthfirst_impl </td>
          <td>(</td>
          <td class="paramtype">uint64_t&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint64_t&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint64_t&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8_t *const *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int8_t *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a2852ee376fbccfca9126d4d0891c9def"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2852ee376fbccfca9126d4d0891c9def">&#9670;&nbsp;</a></span>cpp_nhwc_1x1_stride_any_depthfirst_impl() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">template void arm_conv::pooling::cpp_nhwc_1x1_stride_any_depthfirst_impl </td>
          <td>(</td>
          <td class="paramtype">uint64_t&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint64_t&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint64_t&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8_t *const *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aaf2b1fe16f2ef298d0a2129d2952d44c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaf2b1fe16f2ef298d0a2129d2952d44c">&#9670;&nbsp;</a></span>find_implementation()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool arm_conv::pooling::find_implementation </td>
          <td>(</td>
          <td class="paramtype">const PoolingArgs &amp;&#160;</td>
          <td class="paramname"><em>args</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const OutputStage &amp;&#160;</td>
          <td class="paramname"><em>os</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__conv_1_1pooling_1_1_pooling_implementation.xhtml">PoolingImplementation</a>&lt; TInput, TOutput, OutputStage &gt; *&amp;&#160;</td>
          <td class="paramname"><em>selected</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="pooling__implementation_8hpp_source.xhtml#l00064">64</a> of file <a class="el" href="pooling__implementation_8hpp_source.xhtml">pooling_implementation.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;{</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;  <span class="comment">// For now, return the first valid implementation</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;  <span class="keyword">const</span> <span class="keyword">auto</span> *impl = pooling_implementation_list&lt;TInput, TOutput, OutputStage&gt;();</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;  <span class="keywordflow">for</span> (; impl-&gt;method != PoolingMethod::DEFAULT; impl++)</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;  {</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>.config != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    {</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;      <span class="comment">// Apply filters provided by the configuration</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;      <span class="keyword">const</span> <span class="keyword">auto</span> cfg = <a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>.config;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;      <span class="keywordflow">if</span> (cfg-&gt;filter != <span class="stringliteral">&quot;&quot;</span> &amp;&amp; !std::strstr(impl-&gt;name, cfg-&gt;filter.c_str()))</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;      {</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        <span class="keywordflow">continue</span>;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;      }</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    }</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="keywordflow">if</span> (impl-&gt;get_is_supported(<a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>, os))</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    {</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;      selected = impl;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    }</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;  }</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;}</div><div class="ttc" id="namespace_gemm_tuner_xhtml_a8187411843a6284ffb964ef3fb9fcab3"><div class="ttname"><a href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">GemmTuner.args</a></div><div class="ttdeci">args</div><div class="ttdef"><b>Definition:</b> <a href="_gemm_tuner_8py_source.xhtml#l00679">GemmTuner.py:679</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a403efdec31ffae1d68e06c0a96650ab2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a403efdec31ffae1d68e06c0a96650ab2">&#9670;&nbsp;</a></span>pooling() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">UniquePoolingCommon&lt;TInput, TOutput, OutputStage&gt; arm_conv::pooling::pooling </td>
          <td>(</td>
          <td class="paramtype">const PoolingArgs &amp;&#160;</td>
          <td class="paramname"><em>args</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const OutputStage &amp;&#160;</td>
          <td class="paramname"><em>os</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="pooling__implementation_8hpp_source.xhtml#l00095">95</a> of file <a class="el" href="pooling__implementation_8hpp_source.xhtml">pooling_implementation.hpp</a>.</p>

<p class="reference">References <a class="el" href="_gemm_tuner_8py_source.xhtml#l00679">GemmTuner::args</a>, and <a class="el" href="pooling__implementation_8hpp_source.xhtml#l00054">PoolingImplementation&lt; TInput, TOutput, OutputStage &gt;::get_instance()</a>.</p>
<div class="fragment"><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;{</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;  <span class="keyword">const</span> PoolingImplementation&lt;TInput, TOutput, OutputStage&gt; *impl = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">bool</span> success = find_implementation&lt;TInput, TOutput, OutputStage&gt;(<a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>, os, impl);</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;  <span class="keywordflow">return</span> UniquePoolingCommon&lt;TInput, TOutput, OutputStage&gt;(success ? impl-&gt;get_instance(args, os) : <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;}</div><div class="ttc" id="namespace_gemm_tuner_xhtml_a8187411843a6284ffb964ef3fb9fcab3"><div class="ttname"><a href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">GemmTuner.args</a></div><div class="ttdeci">args</div><div class="ttdef"><b>Definition:</b> <a href="_gemm_tuner_8py_source.xhtml#l00679">GemmTuner.py:679</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a8ba0af13ee876fd852245fa2670ac854"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8ba0af13ee876fd852245fa2670ac854">&#9670;&nbsp;</a></span>pooling() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">template UniquePoolingCommon&lt; uint8_t, uint8_t, Requantize32 &gt; pooling </td>
          <td>(</td>
          <td class="paramtype">const PoolingArgs &amp;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const Requantize32 &amp;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a2dbb9d67088387c8cb61b8d7d063afd1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2dbb9d67088387c8cb61b8d7d063afd1">&#9670;&nbsp;</a></span>pooling() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">template UniquePoolingCommon&lt; uint8_t, uint8_t &gt; pooling </td>
          <td>(</td>
          <td class="paramtype">const PoolingArgs &amp;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const Nothing &amp;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="reference">Referenced by <a class="el" href="pooling__fp32_8cpp_source.xhtml#l00161">pooling_implementation_list()</a>.</p>

</div>
</div>
<a id="a8eab7e5b5329fa3cd319f7f1647d3bd1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8eab7e5b5329fa3cd319f7f1647d3bd1">&#9670;&nbsp;</a></span>pooling_implementation_list() <span class="overload">[1/6]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="structarm__conv_1_1pooling_1_1_pooling_implementation.xhtml">PoolingImplementation</a>&lt;TInput, TOutput, OutputStage&gt;* arm_conv::pooling::pooling_implementation_list </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="pooling__fp32_8cpp_source.xhtml#l00161">161</a> of file <a class="el" href="pooling__fp32_8cpp_source.xhtml">pooling_fp32.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearm__conv_1_1pooling.xhtml#a2dbb9d67088387c8cb61b8d7d063afd1">pooling()</a>.</p>

<p class="reference">Referenced by <a class="el" href="pooling__implementation_8hpp_source.xhtml#l00054">PoolingImplementation&lt; TInput, TOutput, OutputStage &gt;::get_instance()</a>.</p>
<div class="fragment"><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;{</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;  <span class="keywordflow">return</span> pooling_fp32_methods;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="aa188e0b5766fd9c2cd882866d4a493ad"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa188e0b5766fd9c2cd882866d4a493ad">&#9670;&nbsp;</a></span>pooling_implementation_list() <span class="overload">[2/6]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="structarm__conv_1_1pooling_1_1_pooling_implementation.xhtml">PoolingImplementation</a>&lt;int8_t, int8_t, Requantize32&gt;* arm_conv::pooling::pooling_implementation_list </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="pooling__s8q_8cpp_source.xhtml#l00093">93</a> of file <a class="el" href="pooling__s8q_8cpp_source.xhtml">pooling_s8q.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearm__conv_1_1pooling.xhtml#a2dbb9d67088387c8cb61b8d7d063afd1">pooling()</a>.</p>
<div class="fragment"><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;{</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;  <span class="keywordflow">return</span> pooling_u8_methods;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a9ba142211e436f397fe2f926ef188315"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9ba142211e436f397fe2f926ef188315">&#9670;&nbsp;</a></span>pooling_implementation_list() <span class="overload">[3/6]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="structarm__conv_1_1pooling_1_1_pooling_implementation.xhtml">PoolingImplementation</a>&lt;uint8_t, uint8_t, Requantize32&gt;* arm_conv::pooling::pooling_implementation_list </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="pooling__u8q_8cpp_source.xhtml#l00093">93</a> of file <a class="el" href="pooling__u8q_8cpp_source.xhtml">pooling_u8q.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearm__conv_1_1pooling.xhtml#a2dbb9d67088387c8cb61b8d7d063afd1">pooling()</a>.</p>
<div class="fragment"><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;{</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;  <span class="keywordflow">return</span> pooling_u8_methods;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a6d48fc2e894ccf10d2a3894f412f3ed0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6d48fc2e894ccf10d2a3894f412f3ed0">&#9670;&nbsp;</a></span>pooling_implementation_list() <span class="overload">[4/6]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="structarm__conv_1_1pooling_1_1_pooling_implementation.xhtml">PoolingImplementation</a>&lt;int8_t, int8_t&gt;* arm_conv::pooling::pooling_implementation_list </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="pooling__s8_8cpp_source.xhtml#l00141">141</a> of file <a class="el" href="pooling__s8_8cpp_source.xhtml">pooling_s8.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearm__conv_1_1pooling.xhtml#a2dbb9d67088387c8cb61b8d7d063afd1">pooling()</a>.</p>
<div class="fragment"><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;{</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;  <span class="keywordflow">return</span> pooling_s8_methods;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a2cacb9706db5850728e9c5134e237d96"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2cacb9706db5850728e9c5134e237d96">&#9670;&nbsp;</a></span>pooling_implementation_list() <span class="overload">[5/6]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="structarm__conv_1_1pooling_1_1_pooling_implementation.xhtml">PoolingImplementation</a>&lt;uint8_t, uint8_t&gt;* arm_conv::pooling::pooling_implementation_list </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="pooling__u8_8cpp_source.xhtml#l00157">157</a> of file <a class="el" href="pooling__u8_8cpp_source.xhtml">pooling_u8.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearm__conv_1_1pooling.xhtml#a2dbb9d67088387c8cb61b8d7d063afd1">pooling()</a>.</p>
<div class="fragment"><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;{</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;  <span class="keywordflow">return</span> pooling_u8_methods;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a4c9bf60a0c8879f8d417aa59041b398d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4c9bf60a0c8879f8d417aa59041b398d">&#9670;&nbsp;</a></span>pooling_implementation_list() <span class="overload">[6/6]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="structarm__conv_1_1pooling_1_1_pooling_implementation.xhtml">PoolingImplementation</a>&lt;float, float&gt;* arm_conv::pooling::pooling_implementation_list </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="pooling__fp32_8cpp_source.xhtml#l00161">161</a> of file <a class="el" href="pooling__fp32_8cpp_source.xhtml">pooling_fp32.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="pooling__implementation_8hpp_source.xhtml#l00054">PoolingImplementation&lt; TInput, TOutput, OutputStage &gt;::get_instance()</a>.</p>
<div class="fragment"><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;{</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;  <span class="keywordflow">return</span> pooling_fp32_methods;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__conv.xhtml">arm_conv</a></li><li class="navelem"><a class="el" href="namespacearm__conv_1_1pooling.xhtml">pooling</a></li>
    <li class="footer">Generated on Fri Aug 20 2021 08:56:27 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
