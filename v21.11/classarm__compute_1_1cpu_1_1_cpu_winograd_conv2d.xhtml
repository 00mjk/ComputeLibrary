<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: CpuWinogradConv2d Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">21.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">CpuWinogradConv2d Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_cpu_winograd_conv2d_8h_source.xhtml">CpuWinogradConv2d.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for CpuWinogradConv2d:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d__coll__graph.svg" width="170" height="187"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a93fe9a4d12bd95e7726266cc94113c24"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d.xhtml#a93fe9a4d12bd95e7726266cc94113c24">CpuWinogradConv2d</a> ()</td></tr>
<tr class="memdesc:a93fe9a4d12bd95e7726266cc94113c24"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="#a93fe9a4d12bd95e7726266cc94113c24">More...</a><br /></td></tr>
<tr class="separator:a93fe9a4d12bd95e7726266cc94113c24"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f744907d552b16b6ca5e5b33c571d6a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d.xhtml#a5f744907d552b16b6ca5e5b33c571d6a">ARM_COMPUTE_DISALLOW_COPY_ALLOW_MOVE</a> (<a class="el" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d.xhtml">CpuWinogradConv2d</a>)</td></tr>
<tr class="separator:a5f744907d552b16b6ca5e5b33c571d6a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a59dee59b4754d976f3f9bf66412b951d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d.xhtml#a59dee59b4754d976f3f9bf66412b951d">~CpuWinogradConv2d</a> ()</td></tr>
<tr class="memdesc:a59dee59b4754d976f3f9bf66412b951d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="#a59dee59b4754d976f3f9bf66412b951d">More...</a><br /></td></tr>
<tr class="separator:a59dee59b4754d976f3f9bf66412b951d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac8aac2100a877e4cef4bae4682507a9b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d.xhtml#ac8aac2100a877e4cef4bae4682507a9b">configure</a> (const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *src, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *weights, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *biases, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *dst, const <a class="el" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a> &amp;conv_info, const <a class="el" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> &amp;act_info=<a class="el" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>(), bool enable_fast_math=false)</td></tr>
<tr class="memdesc:ac8aac2100a877e4cef4bae4682507a9b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the input and output tensors.  <a href="#ac8aac2100a877e4cef4bae4682507a9b">More...</a><br /></td></tr>
<tr class="separator:ac8aac2100a877e4cef4bae4682507a9b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a684a54d1fb1634a348a585c6b5e76df0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d.xhtml#a684a54d1fb1634a348a585c6b5e76df0">run</a> (<a class="el" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> &amp;tensors) override</td></tr>
<tr class="memdesc:a684a54d1fb1634a348a585c6b5e76df0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Run the kernels contained in the function.  <a href="#a684a54d1fb1634a348a585c6b5e76df0">More...</a><br /></td></tr>
<tr class="separator:a684a54d1fb1634a348a585c6b5e76df0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff8f5e4223fd2a3020c8b252c8982d3a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d.xhtml#aff8f5e4223fd2a3020c8b252c8982d3a">prepare</a> (<a class="el" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> &amp;constants) override</td></tr>
<tr class="memdesc:aff8f5e4223fd2a3020c8b252c8982d3a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prepare the function for executing.  <a href="#aff8f5e4223fd2a3020c8b252c8982d3a">More...</a><br /></td></tr>
<tr class="separator:aff8f5e4223fd2a3020c8b252c8982d3a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a74ae0d6e96f38fecd38471431786b870"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute_1_1experimental.xhtml#aa93a4d93eb22ef5445cd567ef22ca67c">experimental::MemoryRequirements</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d.xhtml#a74ae0d6e96f38fecd38471431786b870">workspace</a> () const override</td></tr>
<tr class="memdesc:a74ae0d6e96f38fecd38471431786b870"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the memory requirements required by the workspace.  <a href="#a74ae0d6e96f38fecd38471431786b870">More...</a><br /></td></tr>
<tr class="separator:a74ae0d6e96f38fecd38471431786b870"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1experimental_1_1_i_n_e_operator"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1experimental_1_1_i_n_e_operator')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1experimental_1_1_i_n_e_operator.xhtml">INEOperator</a></td></tr>
<tr class="memitem:a5d9d1b2676ea513d58e85161ce554c49 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_n_e_operator"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1_i_n_e_operator.xhtml#a5d9d1b2676ea513d58e85161ce554c49">INEOperator</a> (<a class="el" href="classarm__compute_1_1_i_runtime_context.xhtml">IRuntimeContext</a> *ctx=nullptr)</td></tr>
<tr class="memdesc:a5d9d1b2676ea513d58e85161ce554c49 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_n_e_operator"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="classarm__compute_1_1experimental_1_1_i_n_e_operator.xhtml#a5d9d1b2676ea513d58e85161ce554c49">More...</a><br /></td></tr>
<tr class="separator:a5d9d1b2676ea513d58e85161ce554c49 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_n_e_operator"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0a612c94f92504d3d3573c9812a068cc inherit pub_methods_classarm__compute_1_1experimental_1_1_i_n_e_operator"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1_i_n_e_operator.xhtml#a0a612c94f92504d3d3573c9812a068cc">INEOperator</a> (const <a class="el" href="classarm__compute_1_1experimental_1_1_i_n_e_operator.xhtml">INEOperator</a> &amp;)=delete</td></tr>
<tr class="memdesc:a0a612c94f92504d3d3573c9812a068cc inherit pub_methods_classarm__compute_1_1experimental_1_1_i_n_e_operator"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="classarm__compute_1_1experimental_1_1_i_n_e_operator.xhtml#a0a612c94f92504d3d3573c9812a068cc">More...</a><br /></td></tr>
<tr class="separator:a0a612c94f92504d3d3573c9812a068cc inherit pub_methods_classarm__compute_1_1experimental_1_1_i_n_e_operator"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7194c5a29c17390d46dd35d13bf02655 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_n_e_operator"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1_i_n_e_operator.xhtml#a7194c5a29c17390d46dd35d13bf02655">INEOperator</a> (<a class="el" href="classarm__compute_1_1experimental_1_1_i_n_e_operator.xhtml">INEOperator</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:a7194c5a29c17390d46dd35d13bf02655 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_n_e_operator"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default move constructor.  <a href="classarm__compute_1_1experimental_1_1_i_n_e_operator.xhtml#a7194c5a29c17390d46dd35d13bf02655">More...</a><br /></td></tr>
<tr class="separator:a7194c5a29c17390d46dd35d13bf02655 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_n_e_operator"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af5860f3d24d5eee1c5103ec1054cedd3 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_n_e_operator"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1experimental_1_1_i_n_e_operator.xhtml">INEOperator</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1_i_n_e_operator.xhtml#af5860f3d24d5eee1c5103ec1054cedd3">operator=</a> (const <a class="el" href="classarm__compute_1_1experimental_1_1_i_n_e_operator.xhtml">INEOperator</a> &amp;)=delete</td></tr>
<tr class="memdesc:af5860f3d24d5eee1c5103ec1054cedd3 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_n_e_operator"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="classarm__compute_1_1experimental_1_1_i_n_e_operator.xhtml#af5860f3d24d5eee1c5103ec1054cedd3">More...</a><br /></td></tr>
<tr class="separator:af5860f3d24d5eee1c5103ec1054cedd3 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_n_e_operator"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a14d9fa00ede181e3d5fe209f3a29eb11 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_n_e_operator"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1experimental_1_1_i_n_e_operator.xhtml">INEOperator</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1_i_n_e_operator.xhtml#a14d9fa00ede181e3d5fe209f3a29eb11">operator=</a> (<a class="el" href="classarm__compute_1_1experimental_1_1_i_n_e_operator.xhtml">INEOperator</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:a14d9fa00ede181e3d5fe209f3a29eb11 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_n_e_operator"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default move assignment operator.  <a href="classarm__compute_1_1experimental_1_1_i_n_e_operator.xhtml#a14d9fa00ede181e3d5fe209f3a29eb11">More...</a><br /></td></tr>
<tr class="separator:a14d9fa00ede181e3d5fe209f3a29eb11 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_n_e_operator"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a656e5f62c7603eaaf2b00bdd05d56986 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_n_e_operator"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1_i_n_e_operator.xhtml#a656e5f62c7603eaaf2b00bdd05d56986">~INEOperator</a> ()</td></tr>
<tr class="memdesc:a656e5f62c7603eaaf2b00bdd05d56986 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_n_e_operator"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default destructor.  <a href="classarm__compute_1_1experimental_1_1_i_n_e_operator.xhtml#a656e5f62c7603eaaf2b00bdd05d56986">More...</a><br /></td></tr>
<tr class="separator:a656e5f62c7603eaaf2b00bdd05d56986 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_n_e_operator"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1experimental_1_1_i_operator"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1experimental_1_1_i_operator')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1experimental_1_1_i_operator.xhtml">IOperator</a></td></tr>
<tr class="memitem:a3da3a4cfa91daf144e828fa521760ed5 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_operator"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1_i_operator.xhtml#a3da3a4cfa91daf144e828fa521760ed5">~IOperator</a> ()=default</td></tr>
<tr class="memdesc:a3da3a4cfa91daf144e828fa521760ed5 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_operator"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="classarm__compute_1_1experimental_1_1_i_operator.xhtml#a3da3a4cfa91daf144e828fa521760ed5">More...</a><br /></td></tr>
<tr class="separator:a3da3a4cfa91daf144e828fa521760ed5 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_operator"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a3ee2324ec4d335b54cb7db85bb0505df"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classarm__compute_1_1_status.xhtml">Status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d.xhtml#a3ee2324ec4d335b54cb7db85bb0505df">validate</a> (const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *src, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *weights, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *biases, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *dst, const <a class="el" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a> &amp;conv_info, const <a class="el" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> &amp;act_info=<a class="el" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>(), bool enable_fast_math=false)</td></tr>
<tr class="memdesc:a3ee2324ec4d335b54cb7db85bb0505df"><td class="mdescLeft">&#160;</td><td class="mdescRight">Static function to check if given info will lead to a valid configuration of <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d.xhtml">CpuWinogradConv2d</a>.  <a href="#a3ee2324ec4d335b54cb7db85bb0505df">More...</a><br /></td></tr>
<tr class="separator:a3ee2324ec4d335b54cb7db85bb0505df"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p class="definition">Definition at line <a class="el" href="_cpu_winograd_conv2d_8h_source.xhtml#l00041">41</a> of file <a class="el" href="_cpu_winograd_conv2d_8h_source.xhtml">CpuWinogradConv2d.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a93fe9a4d12bd95e7726266cc94113c24"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a93fe9a4d12bd95e7726266cc94113c24">&#9670;&nbsp;</a></span>CpuWinogradConv2d()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d.xhtml">CpuWinogradConv2d</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>

<p class="definition">Definition at line <a class="el" href="_cpu_winograd_conv2d_8cpp_source.xhtml#l00313">313</a> of file <a class="el" href="_cpu_winograd_conv2d_8cpp_source.xhtml">CpuWinogradConv2d.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;    : _gemm_function(std::make_unique&lt;CpuGemm&gt;()),</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;      _activation_func(std::make_unique&lt;CpuActivation&gt;()),</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;      _permute_input(std::make_unique&lt;CpuPermute&gt;()),</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;      _permute_output(std::make_unique&lt;CpuPermute&gt;()),</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;      _permute_weights(std::make_unique&lt;CpuPermute&gt;()),</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;      _transform_input_kernel(<span class="keyword">nullptr</span>),</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;      _transform_weights_kernel(<span class="keyword">nullptr</span>),</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;      _transform_output_kernel(<span class="keyword">nullptr</span>),</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;      _data_layout(),</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;      _aux_mem(AuxTensorIdx::Count),</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;      _input_nhwc(),</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;      _output_nhwc(),</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;      _input_workspace(),</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;      _kernel_storage(),</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;      _output_workspace(),</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;      _input_transformed(),</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;      _output_transformed(),</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;      _weights_hwio(),</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;      _run_activation(<span class="keyword">false</span>),</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;      _is_prepared(<span class="keyword">false</span>)</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;{</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a59dee59b4754d976f3f9bf66412b951d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a59dee59b4754d976f3f9bf66412b951d">&#9670;&nbsp;</a></span>~CpuWinogradConv2d()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d.xhtml">CpuWinogradConv2d</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Destructor. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a5f744907d552b16b6ca5e5b33c571d6a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5f744907d552b16b6ca5e5b33c571d6a">&#9670;&nbsp;</a></span>ARM_COMPUTE_DISALLOW_COPY_ALLOW_MOVE()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ARM_COMPUTE_DISALLOW_COPY_ALLOW_MOVE </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d.xhtml">CpuWinogradConv2d</a>&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ac8aac2100a877e4cef4bae4682507a9b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac8aac2100a877e4cef4bae4682507a9b">&#9670;&nbsp;</a></span>configure()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void configure </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>src</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>weights</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>biases</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>dst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>conv_info</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>act_info</em> = <code><a class="el" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>()</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>enable_fast_math</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the input and output tensors. </p>
<p>Valid data layouts:</p><ul>
<li>NHWC</li>
<li>NCHW</li>
</ul>
<p>Valid data type configurations: </p><table class="doxtable">
<tr>
<th align="left">src0 </th><th align="left">src1 </th><th align="left">src2 </th><th align="left">dst  </th></tr>
<tr>
<td align="left">F16 </td><td align="left">F16 </td><td align="left">F16 </td><td align="left">F16 </td></tr>
<tr>
<td align="left">F32 </td><td align="left">F32 </td><td align="left">F32 </td><td align="left">F32 </td></tr>
</table>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">src</td><td>Source tensor info. 3 lower dimensions represent a single input [width, height, IFM], while every optional dimension from 4 and above represent a batch of inputs. Data types supported: F16/F32. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">weights</td><td>Weights tensor info. Weights are 4D tensor with dimensions [kernel_x, kernel_y, IFM, OFM]. Data type supported: Same as <code>input</code>. Currently only 3x3 and 5x5 kernels are supported. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">biases</td><td>Biases tensor info. Shared biases supported. Biases are 1D tensor with dimensions [OFM]. Data type supported: Same as <code>weights</code>. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">dst</td><td>Destination tensor info. 3 lower dimensions represent a single output [width, height, OFM], while the rest represent batch of outputs. Data types supported: Same as <code>input</code>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">conv_info</td><td>Contains padding and stride information described in <a class="el" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>. Currently only unit strides are supported. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">act_info</td><td>(Optional) Activation layer information in case of a fused activation. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">enable_fast_math</td><td>(Optional) Enable fast math computation. In case this flag were set, the function could dispatch the fastest implementation available which may introduce a drop of accuracy as well. Default is false </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_cpu_winograd_conv2d_8cpp_source.xhtml#l00339">339</a> of file <a class="el" href="_cpu_winograd_conv2d_8cpp_source.xhtml">CpuWinogradConv2d.cpp</a>.</p>

<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00352">ARM_COMPUTE_ERROR</a>, <a class="el" href="_error_8h_source.xhtml#l00456">ARM_COMPUTE_ERROR_ON_MSG</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00157">ARM_COMPUTE_ERROR_ON_NULLPTR</a>, <a class="el" href="_error_8h_source.xhtml#l00455">ARM_COMPUTE_ERROR_THROW_ON</a>, <a class="el" href="src_2common_2utils_2_log_8h.xhtml#a3ae35e22a098d589ff54ed85647ed87e">ARM_COMPUTE_LOG_PARAMS</a>, <a class="el" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02af52e9c50a060add65a035429b2a22229">arm_compute::CHANNEL</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a367b5090ab432bc7de2c32369e087ab1">ITensorInfo::data_layout()</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">ITensorInfo::data_type()</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">ITensorInfo::dimension()</a>, <a class="el" href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00170">arm_compute::test::validation::dst</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#aa459796b5489eca8a9160cb5dcf1a103">ITensorInfo::element_size()</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l01559">ActivationLayerInfo::enabled()</a>, <a class="el" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a56d8353718e6fdc78b8d69078a2cdb94">arm_compute::F16</a>, <a class="el" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">arm_compute::F32</a>, <a class="el" href="_scheduler_8cpp_source.xhtml#l00094">Scheduler::get()</a>, <a class="el" href="_helpers_8inl_source.xhtml#l00193">arm_compute::get_data_layout_dimension_index()</a>, <a class="el" href="_size2_d_8h_source.xhtml#l00091">Size2D::height</a>, <a class="el" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02ad770ba3ce18fa409965dfdf5e7c348e6">arm_compute::HEIGHT</a>, <a class="el" href="utils_8hpp_source.xhtml#l00065">arm_gemm::iceildiv()</a>, <a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">arm_compute::test::validation::info</a>, <a class="el" href="src_2core_2_tensor_info_8cpp_source.xhtml#l00103">TensorInfo::init()</a>, <a class="el" href="_g_e_m_m_matrix_multiply_native_8cpp_source.xhtml#l00361">arm_compute::test::validation::k</a>, <a class="el" href="_g_e_m_m_matrix_multiply_native_8cpp_source.xhtml#l00359">arm_compute::test::validation::m</a>, <a class="el" href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00113">MemoryInfo::merge()</a>, <a class="el" href="_g_e_m_m_matrix_multiply_native_8cpp_source.xhtml#l00360">arm_compute::test::validation::n</a>, <a class="el" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">arm_compute::NCHW</a>, <a class="el" href="classarm__compute_1_1_i_scheduler.xhtml#ac24584a63e484123e3756d1b2a1c9e2f">IScheduler::num_threads()</a>, <a class="el" href="_memory_helpers_8h_source.xhtml#l00038">arm_compute::offset_int_vec()</a>, <a class="el" href="_c_l_2_convolution_layer_8cpp_source.xhtml#l00408">arm_compute::test::validation::output_shape</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00730">PadStrideInfo::pad_left()</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00740">PadStrideInfo::pad_top()</a>, <a class="el" href="utils_8hpp_source.xhtml#l00070">arm_gemm::roundup()</a>, <a class="el" href="_dimensions_8h_source.xhtml#l00076">Dimensions&lt; T &gt;::set()</a>, <a class="el" href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00155">arm_compute::test::validation::src</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a18064e0011c3869d884653e9e7c47b66">ITensorInfo::total_size()</a>, <a class="el" href="_tensor_info_8h_source.xhtml#l00250">TensorInfo::total_size()</a>, <a class="el" href="_saturate_cast_8h_source.xhtml#l00057">arm_compute::utils::cast::U</a>, <a class="el" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a6669348b484e3008dca2bfa8e85e40b5">arm_compute::U8</a>, <a class="el" href="_size2_d_8h_source.xhtml#l00090">Size2D::width</a>, and <a class="el" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02a49da85b69bc6285eeee286ca49fa7195">arm_compute::WIDTH</a>.</p>
<div class="fragment"><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;{</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, weights, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;    <a class="code" href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a>(validate_arguments(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, weights, biases, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>));</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;    <a class="code" href="src_2common_2utils_2_log_8h.xhtml#a3ae35e22a098d589ff54ed85647ed87e">ARM_COMPUTE_LOG_PARAMS</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, weights, biases, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>, act_info, enable_fast_math);</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;    <span class="comment">// Get indices for the width and height</span></div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;    _data_layout                   = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;data_layout();</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> width_idx   = <a class="code" href="namespacearm__compute.xhtml#adfef6f05588c3d40195488620ab54b97">get_data_layout_dimension_index</a>(_data_layout, <a class="code" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02a49da85b69bc6285eeee286ca49fa7195">DataLayoutDimension::WIDTH</a>);</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> height_idx  = <a class="code" href="namespacearm__compute.xhtml#adfef6f05588c3d40195488620ab54b97">get_data_layout_dimension_index</a>(_data_layout, <a class="code" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02ad770ba3ce18fa409965dfdf5e7c348e6">DataLayoutDimension::HEIGHT</a>);</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> channel_idx = <a class="code" href="namespacearm__compute.xhtml#adfef6f05588c3d40195488620ab54b97">get_data_layout_dimension_index</a>(_data_layout, <a class="code" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02af52e9c50a060add65a035429b2a22229">DataLayoutDimension::CHANNEL</a>);</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;    <span class="keyword">const</span> Size2D   input_dims  = Size2D(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;dimension(width_idx), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;dimension(height_idx));</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;    <span class="keyword">const</span> Size2D   kernel_size = Size2D(weights-&gt;dimension(width_idx), weights-&gt;dimension(height_idx));</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac2ad7f431e3446fddcd9b6b9f93c4c14">data_type</a>   = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;data_type();</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;    <span class="keyword">const</span> Size2D   output_tile = winograd_output_tile(input_dims, kernel_size, data_type);</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;    <span class="comment">// Check if the Winograd configuration requires fast math</span></div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;    <span class="keywordflow">if</span>(!enable_fast_math)</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;    {</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;        <a class="code" href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a>(check_support_fast_math(output_tile, kernel_size, data_type),</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;                                 <span class="stringliteral">&quot;This Winograd configuration requires enable_fast_math=true&quot;</span>);</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;    }</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;    _is_prepared = <span class="keyword">false</span>;</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;    std::unique_ptr&lt;ICpuWinogradConv2dTransformInputKernel&gt;   transform_input_kernel;</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;    std::unique_ptr&lt;ICpuWinogradConv2dTransformWeightsKernel&gt; transform_weights_kernel;</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;    std::unique_ptr&lt;ICpuWinogradConv2dTransformOutputKernel&gt;  transform_output_kernel;</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;    <span class="keywordtype">int</span> n_gemms = 1;</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;    <span class="keywordtype">int</span> N_BLOCK = 1; <span class="comment">// Size of block used by GEMM.</span></div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;    <span class="keywordflow">if</span>(data_type == <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>)</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;    {</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;        <span class="keywordflow">if</span>(kernel_size == Size2D(3, 3))</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;        {</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;            <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;dimension(width_idx) &gt; 4 &amp;&amp; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;dimension(height_idx) &gt; 4)</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;            {</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;                <span class="keyword">using</span> config             = CpuWinogradConv2dConfiguration&lt;float, float, 4, 4, 3, 3&gt;;</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;                transform_input_kernel   = std::make_unique&lt;config::TransformInputKernel&gt;();</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;                transform_weights_kernel = std::make_unique&lt;config::TransformWeightsKernel&gt;();</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;                transform_output_kernel  = std::make_unique&lt;config::TransformOutputKernel&gt;();</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;                n_gemms                  = config::WinogradBase::N_GEMMS;</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;                N_BLOCK                  = config::WinogradConv::N_BLOCK;</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;            }</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;            <span class="keywordflow">else</span></div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;            {</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;                <span class="keyword">using</span> config             = CpuWinogradConv2dConfiguration&lt;float, float, 2, 2, 3, 3&gt;;</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;                transform_input_kernel   = std::make_unique&lt;config::TransformInputKernel&gt;();</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;                transform_weights_kernel = std::make_unique&lt;config::TransformWeightsKernel&gt;();</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;                transform_output_kernel  = std::make_unique&lt;config::TransformOutputKernel&gt;();</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;                n_gemms                  = config::WinogradBase::N_GEMMS;</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;                N_BLOCK                  = config::WinogradConv::N_BLOCK;</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;            }</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;        }</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span>(kernel_size == Size2D(5, 5))</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;        {</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;            <span class="keyword">using</span> config             = CpuWinogradConv2dConfiguration&lt;float, float, 2, 2, 5, 5&gt;;</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;            transform_input_kernel   = std::make_unique&lt;config::TransformInputKernel&gt;();</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;            transform_weights_kernel = std::make_unique&lt;config::TransformWeightsKernel&gt;();</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;            transform_output_kernel  = std::make_unique&lt;config::TransformOutputKernel&gt;();</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;            n_gemms                  = config::WinogradBase::N_GEMMS;</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;            N_BLOCK                  = config::WinogradConv::N_BLOCK;</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;        }</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span>(kernel_size == Size2D(1, 3))</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;        {</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;            <span class="keyword">using</span> config             = CpuWinogradConv2dConfiguration&lt;float, float, 6, 1, 3, 1&gt;;</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;            transform_input_kernel   = std::make_unique&lt;config::TransformInputKernel&gt;();</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;            transform_weights_kernel = std::make_unique&lt;config::TransformWeightsKernel&gt;();</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;            transform_output_kernel  = std::make_unique&lt;config::TransformOutputKernel&gt;();</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;            n_gemms                  = config::WinogradBase::N_GEMMS;</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;            N_BLOCK                  = config::WinogradConv::N_BLOCK;</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;        }</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span>(kernel_size == Size2D(3, 1))</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;        {</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;            <span class="keyword">using</span> config             = CpuWinogradConv2dConfiguration&lt;float, float, 1, 6, 1, 3&gt;;</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;            transform_input_kernel   = std::make_unique&lt;config::TransformInputKernel&gt;();</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;            transform_weights_kernel = std::make_unique&lt;config::TransformWeightsKernel&gt;();</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;            transform_output_kernel  = std::make_unique&lt;config::TransformOutputKernel&gt;();</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;            n_gemms                  = config::WinogradBase::N_GEMMS;</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;            N_BLOCK                  = config::WinogradConv::N_BLOCK;</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;        }</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span>(kernel_size == Size2D(1, 5))</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;        {</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;            <span class="keyword">using</span> config             = CpuWinogradConv2dConfiguration&lt;float, float, 4, 1, 5, 1&gt;;</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;            transform_input_kernel   = std::make_unique&lt;config::TransformInputKernel&gt;();</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;            transform_weights_kernel = std::make_unique&lt;config::TransformWeightsKernel&gt;();</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;            transform_output_kernel  = std::make_unique&lt;config::TransformOutputKernel&gt;();</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;            n_gemms                  = config::WinogradBase::N_GEMMS;</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;            N_BLOCK                  = config::WinogradConv::N_BLOCK;</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;        }</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span>(kernel_size == Size2D(5, 1))</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;        {</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;            <span class="keyword">using</span> config             = CpuWinogradConv2dConfiguration&lt;float, float, 1, 4, 1, 5&gt;;</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;            transform_input_kernel   = std::make_unique&lt;config::TransformInputKernel&gt;();</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;            transform_weights_kernel = std::make_unique&lt;config::TransformWeightsKernel&gt;();</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;            transform_output_kernel  = std::make_unique&lt;config::TransformOutputKernel&gt;();</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;            n_gemms                  = config::WinogradBase::N_GEMMS;</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;            N_BLOCK                  = config::WinogradConv::N_BLOCK;</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;        }</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span>(kernel_size == Size2D(1, 7))</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;        {</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;            <span class="keyword">using</span> config             = CpuWinogradConv2dConfiguration&lt;float, float, 2, 1, 7, 1&gt;;</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;            transform_input_kernel   = std::make_unique&lt;config::TransformInputKernel&gt;();</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;            transform_weights_kernel = std::make_unique&lt;config::TransformWeightsKernel&gt;();</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;            transform_output_kernel  = std::make_unique&lt;config::TransformOutputKernel&gt;();</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;            n_gemms                  = config::WinogradBase::N_GEMMS;</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;            N_BLOCK                  = config::WinogradConv::N_BLOCK;</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;        }</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span>(kernel_size == Size2D(7, 1))</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;        {</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;            <span class="keyword">using</span> config             = CpuWinogradConv2dConfiguration&lt;float, float, 1, 2, 1, 7&gt;;</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;            transform_input_kernel   = std::make_unique&lt;config::TransformInputKernel&gt;();</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;            transform_weights_kernel = std::make_unique&lt;config::TransformWeightsKernel&gt;();</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;            transform_output_kernel  = std::make_unique&lt;config::TransformOutputKernel&gt;();</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;            n_gemms                  = config::WinogradBase::N_GEMMS;</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;            N_BLOCK                  = config::WinogradConv::N_BLOCK;</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;        }</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;        <span class="keywordflow">else</span></div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;        {</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;            <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Not supported.&quot;</span>);</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;        }</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;    }</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;<span class="preprocessor">#ifdef __ARM_FEATURE_FP16_VECTOR_ARITHMETIC</span></div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span>(data_type == <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a56d8353718e6fdc78b8d69078a2cdb94">DataType::F16</a>)</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;    {</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;        <span class="keywordflow">if</span>(kernel_size == Size2D(3, 3))</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;        {</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;            <span class="keyword">using</span> config             = CpuWinogradConv2dConfiguration&lt;__fp16, __fp16, 4, 4, 3, 3&gt;;</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;            transform_input_kernel   = std::make_unique&lt;config::TransformInputKernel&gt;();</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;            transform_weights_kernel = std::make_unique&lt;config::TransformWeightsKernel&gt;();</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;            transform_output_kernel  = std::make_unique&lt;config::TransformOutputKernel&gt;();</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;            n_gemms                  = config::WinogradBase::N_GEMMS;</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;            N_BLOCK                  = config::WinogradConv::N_BLOCK;</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;        }</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;        <span class="keywordflow">else</span></div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;        {</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;            <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Not supported.&quot;</span>);</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;        }</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;    }</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;<span class="preprocessor">#endif // __ARM_FEATURE_FP16_VECTOR_ARITHMETIC</span></div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;    {</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;        <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Not supported.&quot;</span>);</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;    }</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;    <span class="keyword">const</span> PaddingType use_padding_type = (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_top() != 0u || <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_left() != 0) ? PADDING_SAME : PADDING_VALID;</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span>        use_same_padding = use_padding_type == PADDING_SAME;</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;    <span class="comment">// Get convolved dimensions</span></div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> in_channels  = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;dimension(channel_idx);</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> out_channels = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>-&gt;dimension(channel_idx);</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;    <span class="keyword">const</span> Tensor4DShape in_shape(internal_get_input_shape(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>));</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span>        data_type_size = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;element_size();</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;    <span class="comment">// Get the memory required to instantiate a new Winograd operator.</span></div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;    constexpr <span class="keywordtype">size_t</span> storage_alignment = 64;</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;    <span class="comment">// Kernel Storage</span></div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span> kernel_storage_size = transform_weights_kernel-&gt;get_weight_storage_size(out_channels, in_channels) * data_type_size;</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;    <span class="comment">// Input storage</span></div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span> input_storage_size = transform_input_kernel-&gt;get_input_storage_size(in_shape.n_batches, in_shape.n_channels, in_shape.n_rows, in_shape.n_cols, use_same_padding) * data_type_size;</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;    <span class="comment">// Output storage</span></div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span> output_storage_size  = transform_output_kernel-&gt;get_output_storage_size(in_shape.n_batches, in_shape.n_rows, in_shape.n_cols, out_channels) * data_type_size;</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span>    kernel_matrix_stride = transform_weights_kernel-&gt;get_matrix_stride(out_channels, in_channels);</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span>    output_matrix_stride = transform_output_kernel-&gt;get_matrix_stride(in_shape.n_batches, in_shape.n_rows, in_shape.n_cols, out_channels);</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span>   <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aaae4098f0f54b97f23d99be335c459ad">output_shape</a>         = transform_output_kernel-&gt;get_output_shape(in_shape.n_rows, in_shape.n_cols, use_padding_type == PADDING_SAME);</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span>    input_matrix_stride  = transform_input_kernel-&gt;get_matrix_stride(in_shape.n_batches, in_channels, in_shape.n_rows, in_shape.n_cols, use_padding_type == PADDING_SAME);</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;    <span class="comment">// Configure GEMM</span></div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> tile_rows                = <a class="code" href="namespacearm__gemm.xhtml#aed0e2852860309af99fad49a8c3ef315">iceildiv</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aaae4098f0f54b97f23d99be335c459ad">output_shape</a>.first, output_tile.height);</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> tile_cols                = <a class="code" href="namespacearm__gemm.xhtml#aed0e2852860309af99fad49a8c3ef315">iceildiv</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aaae4098f0f54b97f23d99be335c459ad">output_shape</a>.second, output_tile.width);</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a545be126d77ec11a9824249de111def9">m</a>                        = in_shape.n_batches * tile_rows * tile_cols;</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a73aa59d7b088082ec257a1c65edbf1d0">k</a>                        = in_shape.n_channels;</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a>                        = out_channels;</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> kernel_matrix_row_stride = <a class="code" href="namespacearm__gemm.xhtml#a2cfd518808ae94de30b3d1a3ba7c7890">roundup</a>(out_channels, N_BLOCK);</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> output_matrix_row_stride = kernel_matrix_row_stride;</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;    TensorShape a_shape(k, m, 1, n_gemms);</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;    Strides     a_strides(data_type_size);</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;    a_strides.set(1, a_strides[0] * k);</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;    <span class="comment">//a_strides.set(2, data_type_size * input_matrix_stride / n_gemms); FIXME: This is the real batch size, but RSH&#39;s code crashes if it&#39;s not 0.</span></div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;    a_strides.set(2, 0);</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;    a_strides.set(3, data_type_size * input_matrix_stride);</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;    TensorShape b_shape(n, k, n_gemms);</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;    Strides     b_strides(data_type_size);</div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;    b_strides.set(1, data_type_size * kernel_matrix_row_stride);</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;    b_strides.set(2, data_type_size * kernel_matrix_stride);</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;    TensorShape d_shape(n, m, 1, n_gemms);</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;    Strides     d_strides(data_type_size);</div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;    d_strides.set(1, data_type_size * output_matrix_row_stride);</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;    <span class="comment">//d_strides.set(2, data_type_size * output_matrix_stride / n_gemms); FIXME: This is the real batch size, but RSH&#39;s code crashes if it&#39;s not 0.</span></div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;    d_strides.set(2, 0);</div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;    d_strides.set(3, data_type_size * output_matrix_stride);</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;    TensorInfo a_info{};</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;    TensorInfo b_info{};</div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;    TensorInfo d_info{};</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;    a_info.init(a_shape, 1, data_type, a_strides, 0, input_storage_size);</div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;    b_info.init(b_shape, 1, data_type, b_strides, 0, kernel_storage_size);</div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;    d_info.init(d_shape, 1, data_type, d_strides, 0, output_storage_size);</div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;</div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;    _input_transformed  = a_info;</div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;    _kernel_storage     = b_info;</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;    _output_transformed = d_info;</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;</div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;    <span class="keyword">const</span> ITensorInfo *input_to_use  = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>;</div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;    ITensorInfo       *output_to_use = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>;</div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a33e65be485104e2e9e69fca551d6f492">PermutationVector</a>  weights_permutation_vector(3U, 0U, 1U, 2U);</div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> max_num_threads = <a class="code" href="classarm__compute_1_1_scheduler.xhtml#a0d63ca713bab377aabcfb63c192b8429">NEScheduler::get</a>().<a class="code" href="classarm__compute_1_1_i_scheduler.xhtml#ac24584a63e484123e3756d1b2a1c9e2f">num_threads</a>();</div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;</div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;    <span class="comment">// Configure the kernel to transform the input tensor from NCHW -&gt; NHWC</span></div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;    <span class="keywordflow">if</span>(_data_layout == <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">DataLayout::NCHW</a>)</div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;    {</div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;        _permute_input-&gt;configure(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, &amp;_input_nhwc, <a class="code" href="namespacearm__compute.xhtml#a33e65be485104e2e9e69fca551d6f492">PermutationVector</a>(2U, 0U, 1U));</div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;        input_to_use               = &amp;_input_nhwc;</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;        weights_permutation_vector = <a class="code" href="namespacearm__compute.xhtml#a33e65be485104e2e9e69fca551d6f492">PermutationVector</a>(3U, 2U, 0U, 1U);</div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;    }</div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;</div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;    <span class="comment">// Configure input transform kernel</span></div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;    transform_input_kernel-&gt;configure(input_to_use, in_shape.n_batches, in_shape.n_rows, in_shape.n_cols, in_shape.n_channels, use_padding_type,</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;                                      &amp;_input_transformed, input_matrix_stride, &amp;_input_workspace);</div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span> input_workspace_size = transform_input_kernel-&gt;get_working_space_size(max_num_threads);</div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;    TensorInfo   input_workspace_info(TensorShape(input_workspace_size), 1, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a6669348b484e3008dca2bfa8e85e40b5">DataType::U8</a>);</div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;    _input_workspace = input_workspace_info;</div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;</div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;    <span class="comment">// Re-order a weight tensor from [Output feature map x Input feature map x Height x Width] to [Height x Width x Input feature map x Output feature map]</span></div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;    _permute_weights-&gt;configure(weights, &amp;_weights_hwio, weights_permutation_vector);</div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;    transform_weights_kernel-&gt;configure(&amp;_weights_hwio, &amp;_kernel_storage, kernel_matrix_stride, out_channels, in_channels);</div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;</div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;    <span class="comment">// Configure GEMM function</span></div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;    _gemm_function-&gt;configure(&amp;_input_transformed, &amp;_kernel_storage, <span class="keyword">nullptr</span>, &amp;_output_transformed, 1.0f, 0.f);</div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;</div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;    <span class="comment">// Configure output transform function</span></div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;    <span class="comment">// The biases tensor has not been allocated at this point in time, the output transform will add the biases to the final result in the run() method</span></div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;    <span class="keywordflow">if</span>(_data_layout == <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">DataLayout::NCHW</a>)</div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;    {</div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;        <span class="comment">// configure and allocate dst tensor to be used to convert from winograd domain to spatial domain when calling to reshape_output()</span></div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;        TensorInfo <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>(TensorShape(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>-&gt;dimension(2), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>-&gt;dimension(0),</div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;                                    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>-&gt;dimension(1), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>-&gt;dimension(3)),</div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;                        1, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>-&gt;data_type());</div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;        _output_nhwc  = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>;</div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;        output_to_use = &amp;_output_nhwc;</div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;    }</div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;    <span class="keyword">const</span> <a class="code" href="structarm__gemm_1_1_activation.xhtml">arm_gemm::Activation</a> activation = arm_gemm_activation_from_acl_activation(act_info);</div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;</div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;    transform_output_kernel-&gt;configure(biases,</div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;                                       &amp;_output_transformed,</div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;                                       output_matrix_stride,</div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;                                       output_to_use,</div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;                                       in_shape.n_batches,</div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;                                       <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aaae4098f0f54b97f23d99be335c459ad">output_shape</a>.first,</div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;                                       <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aaae4098f0f54b97f23d99be335c459ad">output_shape</a>.second,</div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;                                       out_channels,</div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;                                       &amp;_output_workspace,</div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;                                       activation);</div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;</div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span> output_workspace_size = transform_output_kernel-&gt;get_working_space_size(max_num_threads);</div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;    TensorInfo   output_workspace_info(TensorShape(output_workspace_size), 1, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a6669348b484e3008dca2bfa8e85e40b5">DataType::U8</a>);</div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;    _output_workspace = output_workspace_info;</div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;</div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;    <span class="comment">// Reorder the convoluted output to ACL&#39;s ordering NCHW</span></div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;    <span class="keywordflow">if</span>(_data_layout == <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">DataLayout::NCHW</a>)</div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;    {</div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;        _permute_output-&gt;configure(&amp;_output_nhwc, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, <a class="code" href="namespacearm__compute.xhtml#a33e65be485104e2e9e69fca551d6f492">PermutationVector</a>(1U, 2U, 0U));</div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;    }</div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;</div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;    _transform_input_kernel   = std::move(transform_input_kernel);</div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;    _transform_weights_kernel = std::move(transform_weights_kernel);</div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;    _transform_output_kernel  = std::move(transform_output_kernel);</div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;</div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;    <span class="comment">//Configure Activation Layer</span></div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;    _run_activation = act_info.enabled() &amp;&amp; !fuse_function_supported(act_info);</div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;    <span class="keywordflow">if</span>(_run_activation)</div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;    {</div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;        _activation_func-&gt;configure(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, <span class="keyword">nullptr</span>, act_info);</div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;    }</div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;</div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;    <span class="keyword">auto</span> asm_mem_req         = _gemm_function-&gt;workspace();</div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;    _aux_mem[GemmWorkspace]  = asm_mem_req[GemmWorkspace];</div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;    _aux_mem[Pretranspose]   = asm_mem_req[Pretranspose];</div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;    _aux_mem[InterleavedLHS] = asm_mem_req[InterleavedLHS];</div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;    _aux_mem[TransposedRHS]  = asm_mem_req[TransposedRHS];</div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;    _aux_mem[TempResult]     = asm_mem_req[TempResult];</div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;</div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;    <span class="comment">// Request temporary memory. Overlap memory needed for Input/Output transformations as they run on different non-overlapping time-steps.</span></div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;    _aux_mem[TransformedInput]   = <a class="code" href="structarm__compute_1_1experimental_1_1_memory_info.xhtml">MemoryInfo</a>(<a class="code" href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">offset_int_vec</a>(TransformedInput), MemoryLifetime::Temporary, input_storage_size, storage_alignment);</div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;    _aux_mem[TransformedOutput]  = <a class="code" href="structarm__compute_1_1experimental_1_1_memory_info.xhtml">MemoryInfo</a>(<a class="code" href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">offset_int_vec</a>(TransformedOutput), MemoryLifetime::Temporary, output_storage_size, storage_alignment);</div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;    _aux_mem[WorkspaceIO]        = <a class="code" href="structarm__compute_1_1experimental_1_1_memory_info.xhtml">MemoryInfo</a>(<a class="code" href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">offset_int_vec</a>(WorkspaceIO), MemoryLifetime::Temporary, std::max(input_workspace_size, output_workspace_size));</div><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;    _aux_mem[PermutedWeights]    = <a class="code" href="structarm__compute_1_1experimental_1_1_memory_info.xhtml">MemoryInfo</a>(<a class="code" href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">offset_int_vec</a>(PermutedWeights), MemoryLifetime::Prepare, _weights_hwio.<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#af398466b602a02b42d8df19fb66a6c60">total_size</a>());</div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;    _aux_mem[TransformedWeights] = <a class="code" href="structarm__compute_1_1experimental_1_1_memory_info.xhtml">MemoryInfo</a>(<a class="code" href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">offset_int_vec</a>(TransformedWeights), MemoryLifetime::Persistent, kernel_storage_size, storage_alignment);</div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;    <span class="keywordflow">if</span>(_data_layout == <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">DataLayout::NCHW</a>)</div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;    {</div><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;        _aux_mem[PermutedInput].<a class="code" href="structarm__compute_1_1experimental_1_1_memory_info.xhtml#aeb84c062d563cac4ecb427e141b0d7d1">merge</a>(<a class="code" href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">offset_int_vec</a>(PermutedInput), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;total_size());</div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;        _aux_mem[PermutedOutput].<a class="code" href="structarm__compute_1_1experimental_1_1_memory_info.xhtml#aeb84c062d563cac4ecb427e141b0d7d1">merge</a>(<a class="code" href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">offset_int_vec</a>(PermutedOutput), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>-&gt;total_size());</div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;    }</div><div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;}</div><div class="ttc" id="namespacearm__gemm_xhtml_a2cfd518808ae94de30b3d1a3ba7c7890"><div class="ttname"><a href="namespacearm__gemm.xhtml#a2cfd518808ae94de30b3d1a3ba7c7890">arm_gemm::roundup</a></div><div class="ttdeci">T roundup(const T a, const T b)</div><div class="ttdef"><b>Definition:</b> <a href="utils_8hpp_source.xhtml#l00070">utils.hpp:70</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1_memory_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1_memory_info.xhtml">arm_compute::experimental::MemoryInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00094">Types.h:94</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1_memory_info_xhtml_aeb84c062d563cac4ecb427e141b0d7d1"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1_memory_info.xhtml#aeb84c062d563cac4ecb427e141b0d7d1">arm_compute::experimental::MemoryInfo::merge</a></div><div class="ttdeci">bool merge(int slot, size_t new_size, size_t new_alignment=0) noexcept</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00113">Types.h:113</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a7cf8d8b669b8f7b05680230be30d60f4"><div class="ttname"><a href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR(msg)</div><div class="ttdoc">Print the given message then throw an std::runtime_error. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00352">Error.h:352</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58a6669348b484e3008dca2bfa8e85e40b5"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a6669348b484e3008dca2bfa8e85e40b5">arm_compute::Format::U8</a></div><div class="ttdoc">1 channel, 1 U8 per channel </div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a00525ff582f16038a1d3819aa44a23a3"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">arm_compute::test::validation::conv_info</a></div><div class="ttdeci">const auto conv_info</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_convolution_layer_8cpp_source.xhtml#l00404">ConvolutionLayer.cpp:404</a></div></div>
<div class="ttc" id="namespacearm__gemm_xhtml_aed0e2852860309af99fad49a8c3ef315"><div class="ttname"><a href="namespacearm__gemm.xhtml#aed0e2852860309af99fad49a8c3ef315">arm_gemm::iceildiv</a></div><div class="ttdeci">T iceildiv(const T a, const T b)</div><div class="ttdef"><b>Definition:</b> <a href="utils_8hpp_source.xhtml#l00065">utils.hpp:65</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">arm_compute::Format::F32</a></div><div class="ttdoc">1 channel, 1 F32 per channel </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a74ce3f7420453d3446218ff3b7453e02ad770ba3ce18fa409965dfdf5e7c348e6"><div class="ttname"><a href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02ad770ba3ce18fa409965dfdf5e7c348e6">arm_compute::DataLayoutDimension::HEIGHT</a></div><div class="ttdoc">height </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a33e65be485104e2e9e69fca551d6f492"><div class="ttname"><a href="namespacearm__compute.xhtml#a33e65be485104e2e9e69fca551d6f492">arm_compute::PermutationVector</a></div><div class="ttdeci">Strides PermutationVector</div><div class="ttdoc">Permutation vector. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00051">Types.h:51</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a938dcd406ce611ef5345ad2531cdb948"><div class="ttname"><a href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_THROW_ON(status)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00455">Error.h:455</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a70879f7be69f6738d9f76339725c9532"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">arm_compute::test::validation::src</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; src</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00155">DFT.cpp:155</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58a56d8353718e6fdc78b8d69078a2cdb94"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a56d8353718e6fdc78b8d69078a2cdb94">arm_compute::Format::F16</a></div><div class="ttdoc">1 channel, 1 F16 per channel </div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_ac2ad7f431e3446fddcd9b6b9f93c4c14"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ac2ad7f431e3446fddcd9b6b9f93c4c14">arm_compute::test::validation::data_type</a></div><div class="ttdeci">const DataType data_type</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_o_n_2_im2_col_8cpp_source.xhtml#l00150">Im2Col.cpp:150</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_aaae4098f0f54b97f23d99be335c459ad"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aaae4098f0f54b97f23d99be335c459ad">arm_compute::test::validation::output_shape</a></div><div class="ttdeci">const auto output_shape</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_convolution_layer_8cpp_source.xhtml#l00408">ConvolutionLayer.cpp:408</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a0b0eb3235749a2909dc5a101afe59a1b"><div class="ttname"><a href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_MSG(cond, msg)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00456">Error.h:456</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_af398466b602a02b42d8df19fb66a6c60"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#af398466b602a02b42d8df19fb66a6c60">arm_compute::TensorInfo::total_size</a></div><div class="ttdeci">size_t total_size() const override</div><div class="ttdoc">Returns the total size of the tensor in bytes. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00250">TensorInfo.h:250</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_adbf67dcee294e673cf796f1ed8aeb6a4"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">arm_compute::test::validation::dst</a></div><div class="ttdeci">auto dst</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00170">DFT.cpp:170</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a74ce3f7420453d3446218ff3b7453e02af52e9c50a060add65a035429b2a22229"><div class="ttname"><a href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02af52e9c50a060add65a035429b2a22229">arm_compute::DataLayoutDimension::CHANNEL</a></div><div class="ttdoc">channel </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f"><div class="ttname"><a href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">arm_compute::DataLayout::NCHW</a></div><div class="ttdoc">Num samples, channels, height, width. </div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a73aa59d7b088082ec257a1c65edbf1d0"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a73aa59d7b088082ec257a1c65edbf1d0">arm_compute::test::validation::k</a></div><div class="ttdeci">const unsigned int k</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_matrix_multiply_native_8cpp_source.xhtml#l00361">GEMMMatrixMultiplyNative.cpp:361</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_ac57b92957968088a392021cac1d2076b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">arm_compute::test::validation::info</a></div><div class="ttdeci">ScaleKernelInfo info(interpolation_policy, default_border_mode, PixelValue(), sampling_policy, false)</div></div>
<div class="ttc" id="namespacearm__compute_xhtml_adfef6f05588c3d40195488620ab54b97"><div class="ttname"><a href="namespacearm__compute.xhtml#adfef6f05588c3d40195488620ab54b97">arm_compute::get_data_layout_dimension_index</a></div><div class="ttdeci">size_t get_data_layout_dimension_index(const DataLayout &amp;data_layout, const DataLayoutDimension &amp;data_layout_dimension)</div><div class="ttdoc">Get the index of the given dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_helpers_8inl_source.xhtml#l00193">Helpers.inl:193</a></div></div>
<div class="ttc" id="src_2common_2utils_2_log_8h_xhtml_a3ae35e22a098d589ff54ed85647ed87e"><div class="ttname"><a href="src_2common_2utils_2_log_8h.xhtml#a3ae35e22a098d589ff54ed85647ed87e">ARM_COMPUTE_LOG_PARAMS</a></div><div class="ttdeci">#define ARM_COMPUTE_LOG_PARAMS(...)</div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a74ce3f7420453d3446218ff3b7453e02a49da85b69bc6285eeee286ca49fa7195"><div class="ttname"><a href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02a49da85b69bc6285eeee286ca49fa7195">arm_compute::DataLayoutDimension::WIDTH</a></div><div class="ttdoc">width </div></div>
<div class="ttc" id="arm__compute_2core_2_validate_8h_xhtml_a921b705e9e3e0fe928928447869e62a5"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_NULLPTR(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00157">Validate.h:157</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a324d709e8fb5568ada56ba4999dfb2f1"><div class="ttname"><a href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">arm_compute::offset_int_vec</a></div><div class="ttdeci">int offset_int_vec(int offset)</div><div class="ttdef"><b>Definition:</b> <a href="_memory_helpers_8h_source.xhtml#l00038">MemoryHelpers.h:38</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_scheduler_xhtml_ac24584a63e484123e3756d1b2a1c9e2f"><div class="ttname"><a href="classarm__compute_1_1_i_scheduler.xhtml#ac24584a63e484123e3756d1b2a1c9e2f">arm_compute::IScheduler::num_threads</a></div><div class="ttdeci">virtual unsigned int num_threads() const =0</div><div class="ttdoc">Returns the number of threads that the SingleThreadScheduler has in his pool. </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">arm_compute::DataType</a></div><div class="ttdeci">DataType</div><div class="ttdoc">Available data types. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00079">Types.h:79</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a47196b5f5be413bedc213df1640c19cb"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">arm_compute::test::validation::n</a></div><div class="ttdeci">const unsigned int n</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_matrix_multiply_native_8cpp_source.xhtml#l00360">GEMMMatrixMultiplyNative.cpp:360</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a545be126d77ec11a9824249de111def9"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a545be126d77ec11a9824249de111def9">arm_compute::test::validation::m</a></div><div class="ttdeci">const unsigned int m</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_matrix_multiply_native_8cpp_source.xhtml#l00359">GEMMMatrixMultiplyNative.cpp:359</a></div></div>
<div class="ttc" id="structarm__gemm_1_1_activation_xhtml"><div class="ttname"><a href="structarm__gemm_1_1_activation.xhtml">arm_gemm::Activation</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__gemm_8hpp_source.xhtml#l00082">arm_gemm.hpp:82</a></div></div>
<div class="ttc" id="classarm__compute_1_1_scheduler_xhtml_a0d63ca713bab377aabcfb63c192b8429"><div class="ttname"><a href="classarm__compute_1_1_scheduler.xhtml#a0d63ca713bab377aabcfb63c192b8429">arm_compute::Scheduler::get</a></div><div class="ttdeci">static IScheduler &amp; get()</div><div class="ttdoc">Access the scheduler singleton. </div><div class="ttdef"><b>Definition:</b> <a href="_scheduler_8cpp_source.xhtml#l00094">Scheduler.cpp:94</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="aff8f5e4223fd2a3020c8b252c8982d3a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aff8f5e4223fd2a3020c8b252c8982d3a">&#9670;&nbsp;</a></span>prepare()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void prepare </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> &amp;&#160;</td>
          <td class="paramname"><em>constants</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prepare the function for executing. </p>
<p>Any one off pre-processing step required by the function is handled here</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">constants</td><td><a class="el" href="struct_vector.xhtml" title="Structure to hold Vector information. ">Vector</a> that contains the constants tensors.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd>Prepare stage might not need all the function's buffers' backing memory to be available in order to execute </dd></dl>

<p>Reimplemented from <a class="el" href="classarm__compute_1_1experimental_1_1_i_n_e_operator.xhtml#aff8f5e4223fd2a3020c8b252c8982d3a">INEOperator</a>.</p>

<p class="definition">Definition at line <a class="el" href="_cpu_winograd_conv2d_8cpp_source.xhtml#l00807">807</a> of file <a class="el" href="_cpu_winograd_conv2d_8cpp_source.xhtml">CpuWinogradConv2d.cpp</a>.</p>

<p class="reference">References <a class="el" href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00054">arm_compute::ACL_DST</a>, <a class="el" href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00044">arm_compute::ACL_SRC</a>, <a class="el" href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00046">arm_compute::ACL_SRC_1</a>, <a class="el" href="_i_tensor_pack_8cpp_source.xhtml#l00049">ITensorPack::add_const_tensor()</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00157">ARM_COMPUTE_ERROR_ON_NULLPTR</a>, <a class="el" href="_window_8h_source.xhtml#l00043">Window::DimX</a>, <a class="el" href="_scheduler_8cpp_source.xhtml#l00094">Scheduler::get()</a>, <a class="el" href="_cpu_aux_tensor_handler_8h_source.xhtml#l00094">CpuAuxTensorHandler::get()</a>, <a class="el" href="_i_tensor_pack_8cpp_source.xhtml#l00054">ITensorPack::get_const_tensor()</a>, <a class="el" href="_i_tensor_pack_8cpp_source.xhtml#l00064">ITensorPack::get_tensor()</a>, <a class="el" href="_memory_helpers_8h_source.xhtml#l00038">arm_compute::offset_int_vec()</a>, <a class="el" href="_cast_8h_source.xhtml#l00047">arm_compute::utils::cast::polymorphic_cast()</a>, and <a class="el" href="classarm__compute_1_1_i_scheduler.xhtml#a15103352886ec83d9c250a7f5d5c630f">IScheduler::schedule_op()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cpu_winograd_conv2d_8cpp_source.xhtml#l00752">CpuWinogradConv2d::run()</a>.</p>
<div class="fragment"><div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;{</div><div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;    <span class="keywordflow">if</span>(!_is_prepared)</div><div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;    {</div><div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;        <span class="comment">// Permute weights</span></div><div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;        <span class="keyword">const</span> ITensor *weights     = tensors.get_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">ACL_SRC_1</a>);</div><div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;        ITensor       *weights_aux = <a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a9eeb4390c7aab75d31ccc9ddc8d93975">utils::cast::polymorphic_cast</a>&lt;ITensor *&gt;(tensors.get_tensor(<a class="code" href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">offset_int_vec</a>(PermutedWeights)));</div><div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;        <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(weights, weights_aux);</div><div class="line"><a name="l00815"></a><span class="lineno">  815</span>&#160;</div><div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;        CpuAuxTensorHandler permuted_weights(_weights_hwio, *weights_aux);</div><div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;        ITensorPack         permute_tensors{ { <a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69">ACL_SRC</a>, weights }, { <a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">ACL_DST</a>, permuted_weights.get() } };</div><div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160;        _permute_weights-&gt;run(permute_tensors);</div><div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;</div><div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;        <span class="comment">// Transform weights</span></div><div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;        ITensor *weights_transf = <a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a9eeb4390c7aab75d31ccc9ddc8d93975">utils::cast::polymorphic_cast</a>&lt;ITensor *&gt;(tensors.get_tensor(<a class="code" href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">offset_int_vec</a>(TransformedWeights)));</div><div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160;        <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(weights_transf);</div><div class="line"><a name="l00823"></a><span class="lineno">  823</span>&#160;</div><div class="line"><a name="l00824"></a><span class="lineno">  824</span>&#160;        CpuAuxTensorHandler transformed_weights(_kernel_storage, *weights_transf);</div><div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;        ITensorPack         transform_tensors{ { <a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69">ACL_SRC</a>, permuted_weights.get() }, { <a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">ACL_DST</a>, transformed_weights.get() } };</div><div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;        <a class="code" href="classarm__compute_1_1_scheduler.xhtml#a0d63ca713bab377aabcfb63c192b8429">NEScheduler::get</a>().<a class="code" href="classarm__compute_1_1_i_scheduler.xhtml#a15103352886ec83d9c250a7f5d5c630f">schedule_op</a>(_transform_weights_kernel.get(), <a class="code" href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">Window::DimX</a>, _transform_weights_kernel-&gt;window(), transform_tensors);</div><div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160;</div><div class="line"><a name="l00828"></a><span class="lineno">  828</span>&#160;        ITensorPack gemm_pack = tensors;</div><div class="line"><a name="l00829"></a><span class="lineno">  829</span>&#160;        gemm_pack.add_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">ACL_SRC_1</a>, transformed_weights.get());</div><div class="line"><a name="l00830"></a><span class="lineno">  830</span>&#160;        _gemm_function-&gt;prepare(gemm_pack);</div><div class="line"><a name="l00831"></a><span class="lineno">  831</span>&#160;</div><div class="line"><a name="l00832"></a><span class="lineno">  832</span>&#160;        _is_prepared = <span class="keyword">true</span>;</div><div class="line"><a name="l00833"></a><span class="lineno">  833</span>&#160;    }</div><div class="line"><a name="l00834"></a><span class="lineno">  834</span>&#160;}</div><div class="ttc" id="namespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">arm_compute::ACL_DST</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00054">Types.h:54</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_scheduler_xhtml_a15103352886ec83d9c250a7f5d5c630f"><div class="ttname"><a href="classarm__compute_1_1_i_scheduler.xhtml#a15103352886ec83d9c250a7f5d5c630f">arm_compute::IScheduler::schedule_op</a></div><div class="ttdeci">virtual void schedule_op(ICPPKernel *kernel, const Hints &amp;hints, const Window &amp;window, ITensorPack &amp;tensors)=0</div><div class="ttdoc">Runs the kernel in the same thread as the caller synchronously. </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69">arm_compute::ACL_SRC</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00044">Types.h:44</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_aa96e81276ee4f87ab386cd05a5539a7d"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">arm_compute::Window::DimX</a></div><div class="ttdeci">static constexpr size_t DimX</div><div class="ttdoc">Alias for dimension 0 also known as X dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00043">Window.h:43</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">arm_compute::ACL_SRC_1</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00046">Types.h:46</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1utils_1_1cast_xhtml_a9eeb4390c7aab75d31ccc9ddc8d93975"><div class="ttname"><a href="namespacearm__compute_1_1utils_1_1cast.xhtml#a9eeb4390c7aab75d31ccc9ddc8d93975">arm_compute::utils::cast::polymorphic_cast</a></div><div class="ttdeci">Target polymorphic_cast(Source *v)</div><div class="ttdoc">Polymorphic cast between two types. </div><div class="ttdef"><b>Definition:</b> <a href="_cast_8h_source.xhtml#l00047">Cast.h:47</a></div></div>
<div class="ttc" id="arm__compute_2core_2_validate_8h_xhtml_a921b705e9e3e0fe928928447869e62a5"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_NULLPTR(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00157">Validate.h:157</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a324d709e8fb5568ada56ba4999dfb2f1"><div class="ttname"><a href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">arm_compute::offset_int_vec</a></div><div class="ttdeci">int offset_int_vec(int offset)</div><div class="ttdef"><b>Definition:</b> <a href="_memory_helpers_8h_source.xhtml#l00038">MemoryHelpers.h:38</a></div></div>
<div class="ttc" id="classarm__compute_1_1_scheduler_xhtml_a0d63ca713bab377aabcfb63c192b8429"><div class="ttname"><a href="classarm__compute_1_1_scheduler.xhtml#a0d63ca713bab377aabcfb63c192b8429">arm_compute::Scheduler::get</a></div><div class="ttdeci">static IScheduler &amp; get()</div><div class="ttdoc">Access the scheduler singleton. </div><div class="ttdef"><b>Definition:</b> <a href="_scheduler_8cpp_source.xhtml#l00094">Scheduler.cpp:94</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a684a54d1fb1634a348a585c6b5e76df0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a684a54d1fb1634a348a585c6b5e76df0">&#9670;&nbsp;</a></span>run()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void run </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> &amp;&#160;</td>
          <td class="paramname"><em>tensors</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Run the kernels contained in the function. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">tensors</td><td><a class="el" href="struct_vector.xhtml" title="Structure to hold Vector information. ">Vector</a> that contains the tensors to operate on. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="classarm__compute_1_1experimental_1_1_i_n_e_operator.xhtml#a684a54d1fb1634a348a585c6b5e76df0">INEOperator</a>.</p>

<p class="definition">Definition at line <a class="el" href="_cpu_winograd_conv2d_8cpp_source.xhtml#l00752">752</a> of file <a class="el" href="_cpu_winograd_conv2d_8cpp_source.xhtml">CpuWinogradConv2d.cpp</a>.</p>

<p class="reference">References <a class="el" href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00072">arm_compute::ACL_BIAS</a>, <a class="el" href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00054">arm_compute::ACL_DST</a>, <a class="el" href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00060">arm_compute::ACL_INT</a>, <a class="el" href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00044">arm_compute::ACL_SRC</a>, <a class="el" href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00045">arm_compute::ACL_SRC_0</a>, <a class="el" href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00046">arm_compute::ACL_SRC_1</a>, <a class="el" href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00047">arm_compute::ACL_SRC_2</a>, <a class="el" href="_i_tensor_pack_8cpp_source.xhtml#l00049">ITensorPack::add_const_tensor()</a>, <a class="el" href="_i_tensor_pack_8cpp_source.xhtml#l00039">ITensorPack::add_tensor()</a>, <a class="el" href="_window_8h_source.xhtml#l00043">Window::DimX</a>, <a class="el" href="_scheduler_8cpp_source.xhtml#l00094">Scheduler::get()</a>, <a class="el" href="_cpu_aux_tensor_handler_8h_source.xhtml#l00094">CpuAuxTensorHandler::get()</a>, <a class="el" href="_i_tensor_pack_8cpp_source.xhtml#l00054">ITensorPack::get_const_tensor()</a>, <a class="el" href="_i_tensor_pack_8cpp_source.xhtml#l00064">ITensorPack::get_tensor()</a>, <a class="el" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">arm_compute::NCHW</a>, <a class="el" href="_memory_helpers_8h_source.xhtml#l00038">arm_compute::offset_int_vec()</a>, <a class="el" href="_n_e_o_n_2_im2_col_8cpp_source.xhtml#l00188">arm_compute::test::validation::pack</a>, <a class="el" href="_cpu_winograd_conv2d_8cpp_source.xhtml#l00807">CpuWinogradConv2d::prepare()</a>, and <a class="el" href="classarm__compute_1_1_i_scheduler.xhtml#a15103352886ec83d9c250a7f5d5c630f">IScheduler::schedule_op()</a>.</p>
<div class="fragment"><div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;{</div><div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;    <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d.xhtml#aff8f5e4223fd2a3020c8b252c8982d3a">prepare</a>(tensors);</div><div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;</div><div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;    <span class="keyword">auto</span> a = tensors.get_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">ACL_SRC_0</a>);</div><div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;    <span class="keyword">auto</span> c = tensors.get_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a01cea947a24713975f86d0769bf8fad5">ACL_SRC_2</a>);</div><div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;    <span class="keyword">auto</span> d = tensors.get_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">ACL_DST</a>);</div><div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;</div><div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;    CpuAuxTensorHandler input_nhwc(<a class="code" href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">offset_int_vec</a>(PermutedInput), _input_nhwc, tensors, <span class="keyword">true</span>);</div><div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;    CpuAuxTensorHandler input_transformed(<a class="code" href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">offset_int_vec</a>(TransformedInput), _input_transformed, tensors, <span class="keyword">true</span>);</div><div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;    CpuAuxTensorHandler input_workspace(<a class="code" href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">offset_int_vec</a>(WorkspaceIO), _input_workspace, tensors, <span class="keyword">true</span>);</div><div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;</div><div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span> is_nchw = _data_layout == <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">DataLayout::NCHW</a>;</div><div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;    <span class="keywordflow">if</span>(is_nchw)</div><div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;    {</div><div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;        <span class="comment">//Bring channels to the front as Winograd code expects the tensor to be in the format NHWC</span></div><div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;        ITensorPack <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a>{ { <a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69">ACL_SRC</a>, a }, { <a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">ACL_DST</a>, input_nhwc.get() } };</div><div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;        _permute_input-&gt;run(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a>);</div><div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;    }</div><div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;</div><div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;    <span class="comment">// Transform input tensor to the winograd domain</span></div><div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;    ITensorPack transform_input_pack{ { <a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69">ACL_SRC</a>, is_nchw ? input_nhwc.get() : a }, { <a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">ACL_DST</a>, input_transformed.get() }, { <a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828ad7c283fecb76082a11732869a241d0fc">ACL_INT</a>, input_workspace.get() } };</div><div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;    <a class="code" href="classarm__compute_1_1_scheduler.xhtml#a0d63ca713bab377aabcfb63c192b8429">NEScheduler::get</a>().<a class="code" href="classarm__compute_1_1_i_scheduler.xhtml#a15103352886ec83d9c250a7f5d5c630f">schedule_op</a>(_transform_input_kernel.get(), <a class="code" href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">Window::DimX</a>, _transform_input_kernel-&gt;window(), transform_input_pack);</div><div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;</div><div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;    CpuAuxTensorHandler output_transformed(<a class="code" href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">offset_int_vec</a>(TransformedOutput), _output_transformed, tensors, <span class="keyword">true</span>);</div><div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;    CpuAuxTensorHandler weights_transformed(<a class="code" href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">offset_int_vec</a>(TransformedWeights), _kernel_storage, tensors, <span class="keyword">true</span>);</div><div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;</div><div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;    <span class="comment">// Run 16 GEMMs in multiple threads, each kernel runs one or more GEMMs</span></div><div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;    ITensorPack gemm_pack = tensors;</div><div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;    gemm_pack.add_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69">ACL_SRC</a>, input_transformed.get());</div><div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;    gemm_pack.add_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">ACL_SRC_1</a>, weights_transformed.get());</div><div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;    gemm_pack.add_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a059864283c54386b639427bc8a01e785">ACL_BIAS</a>, <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;    gemm_pack.add_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">ACL_DST</a>, output_transformed.get());</div><div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;    _gemm_function-&gt;run(gemm_pack);</div><div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;</div><div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;    <span class="comment">// Transform output tensor to the spatial domain</span></div><div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;    CpuAuxTensorHandler output_workspace(<a class="code" href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">offset_int_vec</a>(WorkspaceIO), _output_workspace, tensors, <span class="keyword">true</span>);</div><div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;    CpuAuxTensorHandler output_nhwc(<a class="code" href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">offset_int_vec</a>(PermutedOutput), _output_nhwc, tensors, <span class="keyword">true</span>);</div><div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;    ITensorPack         transform_output_pack{ { <a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">ACL_SRC_0</a>, c }, { <a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">ACL_SRC_1</a>, output_transformed.get() }, { <a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">ACL_DST</a>, is_nchw ? output_nhwc.get() : d }, { <a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828ad7c283fecb76082a11732869a241d0fc">ACL_INT</a>, output_workspace.get() } };</div><div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;    <a class="code" href="classarm__compute_1_1_scheduler.xhtml#a0d63ca713bab377aabcfb63c192b8429">NEScheduler::get</a>().<a class="code" href="classarm__compute_1_1_i_scheduler.xhtml#a15103352886ec83d9c250a7f5d5c630f">schedule_op</a>(_transform_output_kernel.get(), <a class="code" href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">Window::DimX</a>, _transform_output_kernel-&gt;window(), transform_output_pack);</div><div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;</div><div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;    <span class="keywordflow">if</span>(is_nchw)</div><div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;    {</div><div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;        <span class="comment">// Reorder the convoluted output to ACL&#39;s ordering NCHW</span></div><div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;        ITensorPack <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a>{ { <a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69">ACL_SRC</a>, output_nhwc.get() }, { <a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">ACL_DST</a>, d } };</div><div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;        _permute_output-&gt;run(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a>);</div><div class="line"><a name="l00798"></a><span class="lineno">  798</span>&#160;    }</div><div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;</div><div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;    <span class="keywordflow">if</span>(_run_activation)</div><div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160;    {</div><div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160;        ITensorPack <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a>{ { <a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69">ACL_SRC</a>, d }, { <a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">ACL_DST</a>, d } };</div><div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;        _activation_func-&gt;run(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a>);</div><div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;    }</div><div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;}</div><div class="ttc" id="namespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a01cea947a24713975f86d0769bf8fad5"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a01cea947a24713975f86d0769bf8fad5">arm_compute::ACL_SRC_2</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00047">Types.h:47</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">arm_compute::ACL_DST</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00054">Types.h:54</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a059864283c54386b639427bc8a01e785"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a059864283c54386b639427bc8a01e785">arm_compute::ACL_BIAS</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00072">Types.h:72</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_scheduler_xhtml_a15103352886ec83d9c250a7f5d5c630f"><div class="ttname"><a href="classarm__compute_1_1_i_scheduler.xhtml#a15103352886ec83d9c250a7f5d5c630f">arm_compute::IScheduler::schedule_op</a></div><div class="ttdeci">virtual void schedule_op(ICPPKernel *kernel, const Hints &amp;hints, const Window &amp;window, ITensorPack &amp;tensors)=0</div><div class="ttdoc">Runs the kernel in the same thread as the caller synchronously. </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69">arm_compute::ACL_SRC</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00044">Types.h:44</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_aa96e81276ee4f87ab386cd05a5539a7d"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">arm_compute::Window::DimX</a></div><div class="ttdeci">static constexpr size_t DimX</div><div class="ttdoc">Alias for dimension 0 also known as X dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00043">Window.h:43</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828ad7c283fecb76082a11732869a241d0fc"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828ad7c283fecb76082a11732869a241d0fc">arm_compute::ACL_INT</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00060">Types.h:60</a></div></div>
<div class="ttc" id="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_xhtml_aff8f5e4223fd2a3020c8b252c8982d3a"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d.xhtml#aff8f5e4223fd2a3020c8b252c8982d3a">arm_compute::cpu::CpuWinogradConv2d::prepare</a></div><div class="ttdeci">void prepare(ITensorPack &amp;constants) override</div><div class="ttdoc">Prepare the function for executing. </div><div class="ttdef"><b>Definition:</b> <a href="_cpu_winograd_conv2d_8cpp_source.xhtml#l00807">CpuWinogradConv2d.cpp:807</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">arm_compute::ACL_SRC_0</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00045">Types.h:45</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a1e041dc03ff256dfc8b0bf5c5fe099e0"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">arm_compute::test::validation::pack</a></div><div class="ttdeci">ITensorPack pack</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_o_n_2_im2_col_8cpp_source.xhtml#l00188">Im2Col.cpp:188</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f"><div class="ttname"><a href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">arm_compute::DataLayout::NCHW</a></div><div class="ttdoc">Num samples, channels, height, width. </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">arm_compute::ACL_SRC_1</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00046">Types.h:46</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a324d709e8fb5568ada56ba4999dfb2f1"><div class="ttname"><a href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">arm_compute::offset_int_vec</a></div><div class="ttdeci">int offset_int_vec(int offset)</div><div class="ttdef"><b>Definition:</b> <a href="_memory_helpers_8h_source.xhtml#l00038">MemoryHelpers.h:38</a></div></div>
<div class="ttc" id="classarm__compute_1_1_scheduler_xhtml_a0d63ca713bab377aabcfb63c192b8429"><div class="ttname"><a href="classarm__compute_1_1_scheduler.xhtml#a0d63ca713bab377aabcfb63c192b8429">arm_compute::Scheduler::get</a></div><div class="ttdeci">static IScheduler &amp; get()</div><div class="ttdoc">Access the scheduler singleton. </div><div class="ttdef"><b>Definition:</b> <a href="_scheduler_8cpp_source.xhtml#l00094">Scheduler.cpp:94</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a3ee2324ec4d335b54cb7db85bb0505df"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3ee2324ec4d335b54cb7db85bb0505df">&#9670;&nbsp;</a></span>validate()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_status.xhtml">Status</a> validate </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>src</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>weights</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>biases</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>dst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>conv_info</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>act_info</em> = <code><a class="el" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>()</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>enable_fast_math</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Static function to check if given info will lead to a valid configuration of <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d.xhtml">CpuWinogradConv2d</a>. </p>
<p>Similar to <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d.xhtml#ac8aac2100a877e4cef4bae4682507a9b" title="Set the input and output tensors. ">CpuWinogradConv2d::configure()</a></p>
<dl class="section return"><dt>Returns</dt><dd>a status </dd></dl>

<p class="definition">Definition at line <a class="el" href="_cpu_winograd_conv2d_8cpp_source.xhtml#l00642">642</a> of file <a class="el" href="_cpu_winograd_conv2d_8cpp_source.xhtml">CpuWinogradConv2d.cpp</a>.</p>

<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00194">ARM_COMPUTE_RETURN_ERROR_MSG</a>, <a class="el" href="_error_8h_source.xhtml#l00244">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00159">ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR</a>, <a class="el" href="_error_8h_source.xhtml#l00204">ARM_COMPUTE_RETURN_ON_ERROR</a>, <a class="el" href="classarm__compute_1_1misc_1_1_i_cloneable.xhtml#a4d10e5012a872e7f78f2b539b673049d">ICloneable&lt; T &gt;::clone()</a>, <a class="el" href="src_2core_2_tensor_info_8cpp_source.xhtml#l00282">TensorInfo::clone()</a>, <a class="el" href="_shape_calculator_8h_source.xhtml#l00618">arm_compute::misc::shape_calculator::compute_winograd_filter_transform_shape()</a>, <a class="el" href="_shape_calculator_8h_source.xhtml#l00641">arm_compute::misc::shape_calculator::compute_winograd_input_transform_shape()</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a367b5090ab432bc7de2c32369e087ab1">ITensorInfo::data_layout()</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">ITensorInfo::data_type()</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">ITensorInfo::dimension()</a>, <a class="el" href="_helpers_8inl_source.xhtml#l00193">arm_compute::get_data_layout_dimension_index()</a>, <a class="el" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02ad770ba3ce18fa409965dfdf5e7c348e6">arm_compute::HEIGHT</a>, <a class="el" href="validation_2_n_e_o_n_2_scale_8cpp_source.xhtml#l00266">arm_compute::test::validation::idx_height</a>, <a class="el" href="validation_2_n_e_o_n_2_scale_8cpp_source.xhtml#l00265">arm_compute::test::validation::idx_width</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00745">PadStrideInfo::pad_bottom()</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00730">PadStrideInfo::pad_left()</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00735">PadStrideInfo::pad_right()</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00740">PadStrideInfo::pad_top()</a>, <a class="el" href="_tensor_info_8h_source.xhtml#l00234">TensorInfo::tensor_shape()</a>, and <a class="el" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02a49da85b69bc6285eeee286ca49fa7195">arm_compute::WIDTH</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cpu_conv2d_8cpp_source.xhtml#l00123">CpuConv2d::get_convolution_method()</a>, <a class="el" href="_n_e_winograd_convolution_layer_8cpp_source.xhtml#l00086">NEWinogradConvolutionLayer::validate()</a>, and <a class="el" href="_cpu_conv2d_8cpp_source.xhtml#l00095">CpuConv2d::validate()</a>.</p>
<div class="fragment"><div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;{</div><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#aff911654521523937ff24372a870b89f">ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, weights, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div><div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(validate_arguments(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, weights, biases, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>));</div><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;</div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;    <span class="comment">// Get indices for the width and height</span></div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac354c23c8e4921ea8a8ad07e1a1d3fe5">idx_width</a>  = <a class="code" href="namespacearm__compute.xhtml#adfef6f05588c3d40195488620ab54b97">get_data_layout_dimension_index</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;data_layout(), <a class="code" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02a49da85b69bc6285eeee286ca49fa7195">DataLayoutDimension::WIDTH</a>);</div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#abb9f749a8ea92dda58cc0881b1450158">idx_height</a> = <a class="code" href="namespacearm__compute.xhtml#adfef6f05588c3d40195488620ab54b97">get_data_layout_dimension_index</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;data_layout(), <a class="code" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02ad770ba3ce18fa409965dfdf5e7c348e6">DataLayoutDimension::HEIGHT</a>);</div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;</div><div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;    <span class="comment">// Input shape, kernel size and output tile</span></div><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;    <span class="keyword">const</span> Size2D   input_dims  = Size2D(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;dimension(idx_width), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;dimension(idx_height));</div><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;    <span class="keyword">const</span> Size2D   kernel_size = Size2D(weights-&gt;dimension(idx_width), weights-&gt;dimension(idx_height));</div><div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac2ad7f431e3446fddcd9b6b9f93c4c14">data_type</a>   = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;data_type();</div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;    <span class="keyword">const</span> Size2D   output_tile = winograd_output_tile(input_dims, kernel_size, data_type);</div><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;</div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;    <span class="comment">// Check if the Winograd configuration requires fast math</span></div><div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;    <span class="keywordflow">if</span>(!enable_fast_math)</div><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;    {</div><div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;        <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(check_support_fast_math(output_tile, kernel_size, data_type),</div><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;                                        <span class="stringliteral">&quot;This Winograd configuration requires enable_fast_math=true&quot;</span>);</div><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;    }</div><div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;</div><div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;    <span class="keyword">const</span> WinogradInfo winograd_info = WinogradInfo(output_tile,</div><div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;                                                    kernel_size,</div><div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;                                                    input_dims,</div><div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;                                                    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>,</div><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;                                                    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;data_layout());</div><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;</div><div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;    <span class="comment">// Validate input transform</span></div><div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;    <span class="keyword">const</span> TensorShape input0_shape = <a class="code" href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#a04249f91ec2964d21a91bb7038821000">misc::shape_calculator::compute_winograd_input_transform_shape</a>(*<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, winograd_info);</div><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;    <span class="keyword">const</span> TensorInfo  input0       = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;clone()-&gt;set_tensor_shape(input0_shape);</div><div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;    <span class="comment">// Validate filter transform</span></div><div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;    <span class="keyword">const</span> TensorShape input1_shape = <a class="code" href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#a25e3751f07d4b2771a05d8d01a7f7620">misc::shape_calculator::compute_winograd_filter_transform_shape</a>(*weights, winograd_info);</div><div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;    <span class="keyword">const</span> TensorInfo  input1       = weights-&gt;clone()-&gt;set_tensor_shape(input1_shape);</div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;    <span class="comment">// Validate batched matrix multiply</span></div><div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;    TensorShape batched_mm_output_shape = input0.tensor_shape();</div><div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;    batched_mm_output_shape[0]          = input1.tensor_shape()[0];</div><div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;    <span class="keyword">const</span> TensorInfo batched_mm_output  = input0.clone()-&gt;set_tensor_shape(batched_mm_output_shape);</div><div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;</div><div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;    <span class="keywordflow">if</span>(kernel_size == Size2D(3, 3))</div><div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;    {</div><div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;        <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_top() != 0u &amp;&amp; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_top() != 1, <span class="stringliteral">&quot;Only SAME or VALID padding supported&quot;</span>);</div><div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;        <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_bottom() != 0u &amp;&amp; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_bottom() != 1, <span class="stringliteral">&quot;Only SAME or VALID padding supported&quot;</span>);</div><div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;        <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_left() != 0u &amp;&amp; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_left() != 1, <span class="stringliteral">&quot;Only SAME or VALID padding supported&quot;</span>);</div><div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;        <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_right() != 0u &amp;&amp; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_right() != 1, <span class="stringliteral">&quot;Only SAME or VALID padding supported&quot;</span>);</div><div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;        <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_right() != <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_left(), <span class="stringliteral">&quot;Only SAME or VALID padding supported&quot;</span>);</div><div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;        <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_top() != <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_bottom(), <span class="stringliteral">&quot;Only SAME or VALID padding supported&quot;</span>);</div><div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;        <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_top() != <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_left(), <span class="stringliteral">&quot;Only SAME or VALID padding supported&quot;</span>);</div><div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;        <span class="keywordflow">return</span> validate_kernel_3x3(input_dims, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, &amp;input0, &amp;input1, &amp;batched_mm_output, weights, biases, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, winograd_info, act_info);</div><div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;    }</div><div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span>(kernel_size == Size2D(5, 5))</div><div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;    {</div><div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;        <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_top() != 0u &amp;&amp; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_top() != 2, <span class="stringliteral">&quot;Only SAME or VALID padding supported&quot;</span>);</div><div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;        <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_left() != 0u &amp;&amp; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_left() != 2, <span class="stringliteral">&quot;Only SAME or VALID padding supported&quot;</span>);</div><div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;        <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_bottom() != 0u &amp;&amp; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_bottom() != 2, <span class="stringliteral">&quot;Only SAME or VALID padding supported&quot;</span>);</div><div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;        <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_right() != 0u &amp;&amp; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_right() != 2, <span class="stringliteral">&quot;Only SAME or VALID padding supported&quot;</span>);</div><div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;        <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_right() != <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_left(), <span class="stringliteral">&quot;Only SAME or VALID padding supported&quot;</span>);</div><div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;        <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_top() != <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_bottom(), <span class="stringliteral">&quot;Only SAME or VALID padding supported&quot;</span>);</div><div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;        <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_top() != <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_left(), <span class="stringliteral">&quot;Only SAME or VALID padding supported&quot;</span>);</div><div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;        <span class="keywordflow">return</span> validate_kernel_5x5(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, &amp;input0, &amp;input1, &amp;batched_mm_output, weights, biases, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, winograd_info, act_info);</div><div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;    }</div><div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;    <span class="keywordflow">if</span>(kernel_size == Size2D(3, 1))</div><div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;    {</div><div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;        <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_left() != 0u &amp;&amp; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_left() != 1, <span class="stringliteral">&quot;Only SAME or VALID padding supported&quot;</span>);</div><div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;        <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_right() != 0u &amp;&amp; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_right() != 1, <span class="stringliteral">&quot;Only SAME or VALID padding supported&quot;</span>);</div><div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;        <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_top() != 0u &amp;&amp; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_bottom() != 0, <span class="stringliteral">&quot;Only SAME or VALID padding supported&quot;</span>);</div><div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;        <span class="keywordflow">return</span> validate_kernel_3x1(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, &amp;input0, &amp;input1, &amp;batched_mm_output, weights, biases, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, winograd_info, act_info);</div><div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;    }</div><div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span>(kernel_size == Size2D(1, 3))</div><div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;    {</div><div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;        <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_top() != 0u &amp;&amp; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_top() != 1, <span class="stringliteral">&quot;Only SAME or VALID padding supported&quot;</span>);</div><div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;        <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_bottom() != 0u &amp;&amp; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_bottom() != 1, <span class="stringliteral">&quot;Only SAME or VALID padding supported&quot;</span>);</div><div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;        <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_left() != 0u &amp;&amp; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_right() != 0, <span class="stringliteral">&quot;Only SAME or VALID padding supported&quot;</span>);</div><div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;        <span class="keywordflow">return</span> validate_kernel_1x3(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, &amp;input0, &amp;input1, &amp;batched_mm_output, weights, biases, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, winograd_info, act_info);</div><div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;    }</div><div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span>(kernel_size == Size2D(5, 1))</div><div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;    {</div><div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;        <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_left() != 0u &amp;&amp; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_left() != 2, <span class="stringliteral">&quot;Only SAME or VALID padding supported&quot;</span>);</div><div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;        <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_right() != 0u &amp;&amp; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_right() != 2, <span class="stringliteral">&quot;Only SAME or VALID padding supported&quot;</span>);</div><div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;        <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_top() != 0u &amp;&amp; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_bottom() != 0, <span class="stringliteral">&quot;Only SAME or VALID padding supported&quot;</span>);</div><div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;        <span class="keywordflow">return</span> validate_kernel_5x1(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, &amp;input0, &amp;input1, &amp;batched_mm_output, weights, biases, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, winograd_info, act_info);</div><div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;    }</div><div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span>(kernel_size == Size2D(1, 5))</div><div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;    {</div><div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;        <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_top() != 0u &amp;&amp; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_top() != 2, <span class="stringliteral">&quot;Only SAME or VALID padding supported&quot;</span>);</div><div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;        <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_bottom() != 0u &amp;&amp; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_bottom() != 2, <span class="stringliteral">&quot;Only SAME or VALID padding supported&quot;</span>);</div><div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;        <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_left() != 0u &amp;&amp; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_right() != 0, <span class="stringliteral">&quot;Only SAME or VALID padding supported&quot;</span>);</div><div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;        <span class="keywordflow">return</span> validate_kernel_1x5(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, &amp;input0, &amp;input1, &amp;batched_mm_output, weights, biases, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, winograd_info, act_info);</div><div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;    }</div><div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span>(kernel_size == Size2D(7, 1))</div><div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;    {</div><div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;        <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_left() != 0u &amp;&amp; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_left() != 3, <span class="stringliteral">&quot;Only SAME or VALID padding supported&quot;</span>);</div><div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;        <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_right() != 0u &amp;&amp; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_right() != 3, <span class="stringliteral">&quot;Only SAME or VALID padding supported&quot;</span>);</div><div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;        <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_top() != 0u &amp;&amp; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_bottom() != 0, <span class="stringliteral">&quot;Only SAME or VALID padding supported&quot;</span>);</div><div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;        <span class="keywordflow">return</span> validate_kernel_7x1(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, &amp;input0, &amp;input1, &amp;batched_mm_output, weights, biases, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, winograd_info, act_info);</div><div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;    }</div><div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span>(kernel_size == Size2D(1, 7))</div><div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;    {</div><div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;        <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_top() != 0u &amp;&amp; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_top() != 3, <span class="stringliteral">&quot;Only SAME or VALID padding supported&quot;</span>);</div><div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;        <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_bottom() != 0u &amp;&amp; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_bottom() != 3, <span class="stringliteral">&quot;Only SAME or VALID padding supported&quot;</span>);</div><div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;        <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_left() != 0u &amp;&amp; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_right() != 0, <span class="stringliteral">&quot;Only SAME or VALID padding supported&quot;</span>);</div><div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;        <span class="keywordflow">return</span> validate_kernel_1x7(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, &amp;input0, &amp;input1, &amp;batched_mm_output, weights, biases, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, winograd_info, act_info);</div><div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;    }</div><div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;    {</div><div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;        <a class="code" href="_error_8h.xhtml#a9561091f3566e78ad3aa39259bc4126a">ARM_COMPUTE_RETURN_ERROR_MSG</a>(<span class="stringliteral">&quot;Kernel shape not supported&quot;</span>);</div><div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;    }</div><div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;}</div><div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_ac354c23c8e4921ea8a8ad07e1a1d3fe5"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ac354c23c8e4921ea8a8ad07e1a1d3fe5">arm_compute::test::validation::idx_width</a></div><div class="ttdeci">const int idx_width</div><div class="ttdef"><b>Definition:</b> <a href="validation_2_n_e_o_n_2_scale_8cpp_source.xhtml#l00265">Scale.cpp:265</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1misc_1_1shape__calculator_xhtml_a04249f91ec2964d21a91bb7038821000"><div class="ttname"><a href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#a04249f91ec2964d21a91bb7038821000">arm_compute::misc::shape_calculator::compute_winograd_input_transform_shape</a></div><div class="ttdeci">TensorShape compute_winograd_input_transform_shape(const ITensorInfo &amp;input, const WinogradInfo &amp;winograd_info)</div><div class="ttdoc">Calculate the winograd input transform shape. </div><div class="ttdef"><b>Definition:</b> <a href="_shape_calculator_8h_source.xhtml#l00641">ShapeCalculator.h:641</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a00525ff582f16038a1d3819aa44a23a3"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">arm_compute::test::validation::conv_info</a></div><div class="ttdeci">const auto conv_info</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_convolution_layer_8cpp_source.xhtml#l00404">ConvolutionLayer.cpp:404</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a8a1e1c105f0bdaf37db408c7cfcb77a4"><div class="ttname"><a href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ON_ERROR(status)</div><div class="ttdoc">Checks if a status contains an error and returns it. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00204">Error.h:204</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a74ce3f7420453d3446218ff3b7453e02ad770ba3ce18fa409965dfdf5e7c348e6"><div class="ttname"><a href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02ad770ba3ce18fa409965dfdf5e7c348e6">arm_compute::DataLayoutDimension::HEIGHT</a></div><div class="ttdoc">height </div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a70879f7be69f6738d9f76339725c9532"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">arm_compute::test::validation::src</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; src</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00155">DFT.cpp:155</a></div></div>
<div class="ttc" id="arm__compute_2core_2_validate_8h_xhtml_aff911654521523937ff24372a870b89f"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#aff911654521523937ff24372a870b89f">ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00159">Validate.h:159</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_ac2ad7f431e3446fddcd9b6b9f93c4c14"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ac2ad7f431e3446fddcd9b6b9f93c4c14">arm_compute::test::validation::data_type</a></div><div class="ttdeci">const DataType data_type</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_o_n_2_im2_col_8cpp_source.xhtml#l00150">Im2Col.cpp:150</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_abb9f749a8ea92dda58cc0881b1450158"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#abb9f749a8ea92dda58cc0881b1450158">arm_compute::test::validation::idx_height</a></div><div class="ttdeci">const int idx_height</div><div class="ttdef"><b>Definition:</b> <a href="validation_2_n_e_o_n_2_scale_8cpp_source.xhtml#l00266">Scale.cpp:266</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_adbf67dcee294e673cf796f1ed8aeb6a4"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">arm_compute::test::validation::dst</a></div><div class="ttdeci">auto dst</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00170">DFT.cpp:170</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1misc_1_1shape__calculator_xhtml_a25e3751f07d4b2771a05d8d01a7f7620"><div class="ttname"><a href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#a25e3751f07d4b2771a05d8d01a7f7620">arm_compute::misc::shape_calculator::compute_winograd_filter_transform_shape</a></div><div class="ttdeci">TensorShape compute_winograd_filter_transform_shape(const ITensorInfo &amp;input, const WinogradInfo &amp;winograd_info)</div><div class="ttdoc">Calculate the winograd filter transform shape. </div><div class="ttdef"><b>Definition:</b> <a href="_shape_calculator_8h_source.xhtml#l00618">ShapeCalculator.h:618</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a9561091f3566e78ad3aa39259bc4126a"><div class="ttname"><a href="_error_8h.xhtml#a9561091f3566e78ad3aa39259bc4126a">ARM_COMPUTE_RETURN_ERROR_MSG</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_MSG(...)</div><div class="ttdoc">An error is returned with the given description. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00194">Error.h:194</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_adfef6f05588c3d40195488620ab54b97"><div class="ttname"><a href="namespacearm__compute.xhtml#adfef6f05588c3d40195488620ab54b97">arm_compute::get_data_layout_dimension_index</a></div><div class="ttdeci">size_t get_data_layout_dimension_index(const DataLayout &amp;data_layout, const DataLayoutDimension &amp;data_layout_dimension)</div><div class="ttdoc">Get the index of the given dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_helpers_8inl_source.xhtml#l00193">Helpers.inl:193</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a1c69762a42ab8add645d0a949b6f4b1f"><div class="ttname"><a href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_MSG(cond, msg)</div><div class="ttdoc">If the condition is true, an error is returned. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00244">Error.h:244</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a74ce3f7420453d3446218ff3b7453e02a49da85b69bc6285eeee286ca49fa7195"><div class="ttname"><a href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02a49da85b69bc6285eeee286ca49fa7195">arm_compute::DataLayoutDimension::WIDTH</a></div><div class="ttdoc">width </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">arm_compute::DataType</a></div><div class="ttdeci">DataType</div><div class="ttdoc">Available data types. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00079">Types.h:79</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a74ae0d6e96f38fecd38471431786b870"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a74ae0d6e96f38fecd38471431786b870">&#9670;&nbsp;</a></span>workspace()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute_1_1experimental.xhtml#aa93a4d93eb22ef5445cd567ef22ca67c">experimental::MemoryRequirements</a> workspace </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Return the memory requirements required by the workspace. </p>

<p>Reimplemented from <a class="el" href="classarm__compute_1_1experimental_1_1_i_n_e_operator.xhtml#aea714e0b46ed9e9d14440dbc0ece4013">INEOperator</a>.</p>

<p class="definition">Definition at line <a class="el" href="_cpu_winograd_conv2d_8cpp_source.xhtml#l00836">836</a> of file <a class="el" href="_cpu_winograd_conv2d_8cpp_source.xhtml">CpuWinogradConv2d.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00837"></a><span class="lineno">  837</span>&#160;{</div><div class="line"><a name="l00838"></a><span class="lineno">  838</span>&#160;    <span class="keywordflow">return</span> _aux_mem;</div><div class="line"><a name="l00839"></a><span class="lineno">  839</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/cpu/operators/<a class="el" href="_cpu_winograd_conv2d_8h_source.xhtml">CpuWinogradConv2d.h</a></li>
<li>src/cpu/operators/<a class="el" href="_cpu_winograd_conv2d_8cpp_source.xhtml">CpuWinogradConv2d.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1cpu.xhtml">cpu</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d.xhtml">CpuWinogradConv2d</a></li>
    <li class="footer">Generated on Mon Nov 15 2021 14:44:36 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
