<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: CpuWinogradConv2dTransformWeightsKernel&lt; T, OutputTileRows, OutputTileCols, KernelRows, KernelCols &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">21.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_weights_kernel.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">CpuWinogradConv2dTransformWeightsKernel&lt; T, OutputTileRows, OutputTileCols, KernelRows, KernelCols &gt; Class Template Reference<span class="mlabels"><span class="mlabel">final</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class. ">Kernel</a> to perform Winograd weights transform.  
 <a href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_weights_kernel.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_cpu_winograd_conv2d_kernel_8h_source.xhtml">CpuWinogradConv2dKernel.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for CpuWinogradConv2dTransformWeightsKernel&lt; T, OutputTileRows, OutputTileCols, KernelRows, KernelCols &gt;:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_weights_kernel__coll__graph.svg" width="263" height="320"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:aae5e07bf25aff5675f11ae8ec15172cf"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_weights_kernel.xhtml#aae5e07bf25aff5675f11ae8ec15172cf">CpuWinogradConv2dTransformWeightsKernel</a> (const <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_weights_kernel.xhtml">CpuWinogradConv2dTransformWeightsKernel</a> &amp;)=delete</td></tr>
<tr class="memdesc:aae5e07bf25aff5675f11ae8ec15172cf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="#aae5e07bf25aff5675f11ae8ec15172cf">More...</a><br /></td></tr>
<tr class="separator:aae5e07bf25aff5675f11ae8ec15172cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a944da4bbfd27f2722e695e473f22f96f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_weights_kernel.xhtml">CpuWinogradConv2dTransformWeightsKernel</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_weights_kernel.xhtml#a944da4bbfd27f2722e695e473f22f96f">operator=</a> (const <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_weights_kernel.xhtml">CpuWinogradConv2dTransformWeightsKernel</a> &amp;)=delete</td></tr>
<tr class="memdesc:a944da4bbfd27f2722e695e473f22f96f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="#a944da4bbfd27f2722e695e473f22f96f">More...</a><br /></td></tr>
<tr class="separator:a944da4bbfd27f2722e695e473f22f96f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f99e8ff7cb4805d2c72ac74447cb56d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_weights_kernel.xhtml#a3f99e8ff7cb4805d2c72ac74447cb56d">CpuWinogradConv2dTransformWeightsKernel</a> (<a class="el" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_weights_kernel.xhtml">CpuWinogradConv2dTransformWeightsKernel</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:a3f99e8ff7cb4805d2c72ac74447cb56d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be moved.  <a href="#a3f99e8ff7cb4805d2c72ac74447cb56d">More...</a><br /></td></tr>
<tr class="separator:a3f99e8ff7cb4805d2c72ac74447cb56d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f73598685761449300d2cf2361f3511"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_weights_kernel.xhtml">CpuWinogradConv2dTransformWeightsKernel</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_weights_kernel.xhtml#a5f73598685761449300d2cf2361f3511">operator=</a> (<a class="el" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_weights_kernel.xhtml">CpuWinogradConv2dTransformWeightsKernel</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:a5f73598685761449300d2cf2361f3511"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be moved.  <a href="#a5f73598685761449300d2cf2361f3511">More...</a><br /></td></tr>
<tr class="separator:a5f73598685761449300d2cf2361f3511"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a48988b53e9e397fad3bdb7885a6e84c2"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_weights_kernel.xhtml#a48988b53e9e397fad3bdb7885a6e84c2">~CpuWinogradConv2dTransformWeightsKernel</a> ()=default</td></tr>
<tr class="memdesc:a48988b53e9e397fad3bdb7885a6e84c2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default destructor.  <a href="#a48988b53e9e397fad3bdb7885a6e84c2">More...</a><br /></td></tr>
<tr class="separator:a48988b53e9e397fad3bdb7885a6e84c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a699a4ea06e377a831ebdb588c35ec1e0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_weights_kernel.xhtml#a699a4ea06e377a831ebdb588c35ec1e0">CpuWinogradConv2dTransformWeightsKernel</a> ()</td></tr>
<tr class="memdesc:a699a4ea06e377a831ebdb588c35ec1e0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor.  <a href="#a699a4ea06e377a831ebdb588c35ec1e0">More...</a><br /></td></tr>
<tr class="separator:a699a4ea06e377a831ebdb588c35ec1e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab5656bb5b6334bdbe6e606c715872828"><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_weights_kernel.xhtml#ab5656bb5b6334bdbe6e606c715872828">name</a> () const override</td></tr>
<tr class="memdesc:ab5656bb5b6334bdbe6e606c715872828"><td class="mdescLeft">&#160;</td><td class="mdescRight">Name of the kernel.  <a href="#ab5656bb5b6334bdbe6e606c715872828">More...</a><br /></td></tr>
<tr class="separator:ab5656bb5b6334bdbe6e606c715872828"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a87a7d4fe23da86c3682b79300d23f248"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_weights_kernel.xhtml#a87a7d4fe23da86c3682b79300d23f248">get_weight_storage_size</a> (int num_output_channels, int num_input_channels) const override</td></tr>
<tr class="memdesc:a87a7d4fe23da86c3682b79300d23f248"><td class="mdescLeft">&#160;</td><td class="mdescRight">Determine how much memory (in units of T) to allocate for the transformed weights.  <a href="#a87a7d4fe23da86c3682b79300d23f248">More...</a><br /></td></tr>
<tr class="separator:a87a7d4fe23da86c3682b79300d23f248"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a23e55164ea7e9df47f6eeb0feaaf876f"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_weights_kernel.xhtml#a23e55164ea7e9df47f6eeb0feaaf876f">get_matrix_stride</a> (int num_output_channels, int num_input_channels) const override</td></tr>
<tr class="memdesc:a23e55164ea7e9df47f6eeb0feaaf876f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the stride between matrices in the input worspace.  <a href="#a23e55164ea7e9df47f6eeb0feaaf876f">More...</a><br /></td></tr>
<tr class="separator:a23e55164ea7e9df47f6eeb0feaaf876f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a883429dd6cf828bfdd64b255afc458da"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_weights_kernel.xhtml#a883429dd6cf828bfdd64b255afc458da">run_op</a> (<a class="el" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> &amp;tensors, const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;<a class="el" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>, const <a class="el" href="structarm__compute_1_1_thread_info.xhtml">ThreadInfo</a> &amp;info) override</td></tr>
<tr class="memdesc:a883429dd6cf828bfdd64b255afc458da"><td class="mdescLeft">&#160;</td><td class="mdescRight">Execute the kernel on the passed window.  <a href="#a883429dd6cf828bfdd64b255afc458da">More...</a><br /></td></tr>
<tr class="separator:a883429dd6cf828bfdd64b255afc458da"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4370ae5fda7bd455a171fc8ed4d3f283"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_weights_kernel.xhtml#a4370ae5fda7bd455a171fc8ed4d3f283">is_parallelisable</a> () const override</td></tr>
<tr class="memdesc:a4370ae5fda7bd455a171fc8ed4d3f283"><td class="mdescLeft">&#160;</td><td class="mdescRight">Indicates whether or not the kernel is parallelisable.  <a href="#a4370ae5fda7bd455a171fc8ed4d3f283">More...</a><br /></td></tr>
<tr class="separator:a4370ae5fda7bd455a171fc8ed4d3f283"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel.xhtml">ICpuWinogradConv2dTransformWeightsKernel</a></td></tr>
<tr class="memitem:aa47d90864ae78b19c35620e7708b567a inherit pub_methods_classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel.xhtml#aa47d90864ae78b19c35620e7708b567a">ICpuWinogradConv2dTransformWeightsKernel</a> (const <a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel.xhtml">ICpuWinogradConv2dTransformWeightsKernel</a> &amp;)=default</td></tr>
<tr class="memdesc:aa47d90864ae78b19c35620e7708b567a inherit pub_methods_classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel.xhtml#aa47d90864ae78b19c35620e7708b567a">More...</a><br /></td></tr>
<tr class="separator:aa47d90864ae78b19c35620e7708b567a inherit pub_methods_classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa0e3205640bdd88dd7ac00be6edcb06e inherit pub_methods_classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel.xhtml">ICpuWinogradConv2dTransformWeightsKernel</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel.xhtml#aa0e3205640bdd88dd7ac00be6edcb06e">operator=</a> (const <a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel.xhtml">ICpuWinogradConv2dTransformWeightsKernel</a> &amp;)=default</td></tr>
<tr class="memdesc:aa0e3205640bdd88dd7ac00be6edcb06e inherit pub_methods_classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel.xhtml#aa0e3205640bdd88dd7ac00be6edcb06e">More...</a><br /></td></tr>
<tr class="separator:aa0e3205640bdd88dd7ac00be6edcb06e inherit pub_methods_classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a841e453a771b02fb9577837f7f7ab84a inherit pub_methods_classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel.xhtml#a841e453a771b02fb9577837f7f7ab84a">ICpuWinogradConv2dTransformWeightsKernel</a> (<a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel.xhtml">ICpuWinogradConv2dTransformWeightsKernel</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:a841e453a771b02fb9577837f7f7ab84a inherit pub_methods_classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be moved.  <a href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel.xhtml#a841e453a771b02fb9577837f7f7ab84a">More...</a><br /></td></tr>
<tr class="separator:a841e453a771b02fb9577837f7f7ab84a inherit pub_methods_classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6dee7f69e68f6bfbb4c4281234319281 inherit pub_methods_classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel.xhtml">ICpuWinogradConv2dTransformWeightsKernel</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel.xhtml#a6dee7f69e68f6bfbb4c4281234319281">operator=</a> (<a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel.xhtml">ICpuWinogradConv2dTransformWeightsKernel</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:a6dee7f69e68f6bfbb4c4281234319281 inherit pub_methods_classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be moved.  <a href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel.xhtml#a6dee7f69e68f6bfbb4c4281234319281">More...</a><br /></td></tr>
<tr class="separator:a6dee7f69e68f6bfbb4c4281234319281 inherit pub_methods_classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6cf5d37e43adc9c391b50e52c3b4a8d4 inherit pub_methods_classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel.xhtml#a6cf5d37e43adc9c391b50e52c3b4a8d4">ICpuWinogradConv2dTransformWeightsKernel</a> ()</td></tr>
<tr class="separator:a6cf5d37e43adc9c391b50e52c3b4a8d4 inherit pub_methods_classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae4a40fc825c6741cd99c171544a6eda3 inherit pub_methods_classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel.xhtml#ae4a40fc825c6741cd99c171544a6eda3">~ICpuWinogradConv2dTransformWeightsKernel</a> ()</td></tr>
<tr class="separator:ae4a40fc825c6741cd99c171544a6eda3 inherit pub_methods_classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa000b21e788ad3023bcaf4fa08e68d1e inherit pub_methods_classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel.xhtml#aa000b21e788ad3023bcaf4fa08e68d1e">configure</a> (const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *weights_hwio, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output, const int matrix_stride, const int num_output_channels, const int num_input_channels)=0</td></tr>
<tr class="memdesc:aa000b21e788ad3023bcaf4fa08e68d1e inherit pub_methods_classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Configure the weights transform kernel.  <a href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel.xhtml#aa000b21e788ad3023bcaf4fa08e68d1e">More...</a><br /></td></tr>
<tr class="separator:aa000b21e788ad3023bcaf4fa08e68d1e inherit pub_methods_classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1_i_c_p_p_kernel"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1_i_c_p_p_kernel')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1_i_c_p_p_kernel.xhtml">ICPPKernel</a></td></tr>
<tr class="memitem:a033d17a97e07cea7fe83eefcf23540f6 inherit pub_methods_classarm__compute_1_1_i_c_p_p_kernel"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_p_p_kernel.xhtml#a033d17a97e07cea7fe83eefcf23540f6">~ICPPKernel</a> ()=default</td></tr>
<tr class="memdesc:a033d17a97e07cea7fe83eefcf23540f6 inherit pub_methods_classarm__compute_1_1_i_c_p_p_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default destructor.  <a href="classarm__compute_1_1_i_c_p_p_kernel.xhtml#a033d17a97e07cea7fe83eefcf23540f6">More...</a><br /></td></tr>
<tr class="separator:a033d17a97e07cea7fe83eefcf23540f6 inherit pub_methods_classarm__compute_1_1_i_c_p_p_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad6586f7a2dd64942f59b8c408643a0ea inherit pub_methods_classarm__compute_1_1_i_c_p_p_kernel"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_p_p_kernel.xhtml#ad6586f7a2dd64942f59b8c408643a0ea">run</a> (const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;<a class="el" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>, const <a class="el" href="structarm__compute_1_1_thread_info.xhtml">ThreadInfo</a> &amp;info)</td></tr>
<tr class="memdesc:ad6586f7a2dd64942f59b8c408643a0ea inherit pub_methods_classarm__compute_1_1_i_c_p_p_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Execute the kernel on the passed window.  <a href="classarm__compute_1_1_i_c_p_p_kernel.xhtml#ad6586f7a2dd64942f59b8c408643a0ea">More...</a><br /></td></tr>
<tr class="separator:ad6586f7a2dd64942f59b8c408643a0ea inherit pub_methods_classarm__compute_1_1_i_c_p_p_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a92fc66203d7affe26cbe70194a154895 inherit pub_methods_classarm__compute_1_1_i_c_p_p_kernel"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_p_p_kernel.xhtml#a92fc66203d7affe26cbe70194a154895">run_nd</a> (const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;<a class="el" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>, const <a class="el" href="structarm__compute_1_1_thread_info.xhtml">ThreadInfo</a> &amp;info, const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;thread_locator)</td></tr>
<tr class="memdesc:a92fc66203d7affe26cbe70194a154895 inherit pub_methods_classarm__compute_1_1_i_c_p_p_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">legacy compatibility layer for implemantions which do not support thread_locator In these cases we simply narrow the interface down the legacy version  <a href="classarm__compute_1_1_i_c_p_p_kernel.xhtml#a92fc66203d7affe26cbe70194a154895">More...</a><br /></td></tr>
<tr class="separator:a92fc66203d7affe26cbe70194a154895 inherit pub_methods_classarm__compute_1_1_i_c_p_p_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3aa853ba2ae719bcb7ed1ccbe3c33286 inherit pub_methods_classarm__compute_1_1_i_c_p_p_kernel"><td class="memItemLeft" align="right" valign="top">virtual size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_p_p_kernel.xhtml#a3aa853ba2ae719bcb7ed1ccbe3c33286">get_mws</a> (const <a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a> &amp;platform, size_t thread_count) const</td></tr>
<tr class="memdesc:a3aa853ba2ae719bcb7ed1ccbe3c33286 inherit pub_methods_classarm__compute_1_1_i_c_p_p_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return minimum workload size of the relevant kernel.  <a href="classarm__compute_1_1_i_c_p_p_kernel.xhtml#a3aa853ba2ae719bcb7ed1ccbe3c33286">More...</a><br /></td></tr>
<tr class="separator:a3aa853ba2ae719bcb7ed1ccbe3c33286 inherit pub_methods_classarm__compute_1_1_i_c_p_p_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1_i_kernel"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1_i_kernel')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1_i_kernel.xhtml">IKernel</a></td></tr>
<tr class="memitem:a7250cb8cbaa4104a93a2d77155085507 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_kernel.xhtml#a7250cb8cbaa4104a93a2d77155085507">IKernel</a> ()</td></tr>
<tr class="memdesc:a7250cb8cbaa4104a93a2d77155085507 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="classarm__compute_1_1_i_kernel.xhtml#a7250cb8cbaa4104a93a2d77155085507">More...</a><br /></td></tr>
<tr class="separator:a7250cb8cbaa4104a93a2d77155085507 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a341b60d15a5e12a5b8f3825194dd3b12 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_kernel.xhtml#a341b60d15a5e12a5b8f3825194dd3b12">~IKernel</a> ()=default</td></tr>
<tr class="memdesc:a341b60d15a5e12a5b8f3825194dd3b12 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="classarm__compute_1_1_i_kernel.xhtml#a341b60d15a5e12a5b8f3825194dd3b12">More...</a><br /></td></tr>
<tr class="separator:a341b60d15a5e12a5b8f3825194dd3b12 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b3a97ba5dded504a2f2261c078493dd inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="structarm__compute_1_1_border_size.xhtml">BorderSize</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_kernel.xhtml#a4b3a97ba5dded504a2f2261c078493dd">border_size</a> () const</td></tr>
<tr class="memdesc:a4b3a97ba5dded504a2f2261c078493dd inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">The size of the border for that kernel.  <a href="classarm__compute_1_1_i_kernel.xhtml#a4b3a97ba5dded504a2f2261c078493dd">More...</a><br /></td></tr>
<tr class="separator:a4b3a97ba5dded504a2f2261c078493dd inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad34a46f53686c12a5c5e717cc9617fb6 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a> () const</td></tr>
<tr class="memdesc:ad34a46f53686c12a5c5e717cc9617fb6 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">The maximum window the kernel can be executed on.  <a href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">More...</a><br /></td></tr>
<tr class="separator:ad34a46f53686c12a5c5e717cc9617fb6 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a32ab3ad0302912c7da52204042727a44 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_kernel.xhtml#a32ab3ad0302912c7da52204042727a44">is_window_configured</a> () const</td></tr>
<tr class="memdesc:a32ab3ad0302912c7da52204042727a44 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Function to check if the embedded window of this kernel has been configured.  <a href="classarm__compute_1_1_i_kernel.xhtml#a32ab3ad0302912c7da52204042727a44">More...</a><br /></td></tr>
<tr class="separator:a32ab3ad0302912c7da52204042727a44 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a6d3d1d4d66f89908455bc5f05e259ce9"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classarm__compute_1_1_status.xhtml">Status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_weights_kernel.xhtml#a6d3d1d4d66f89908455bc5f05e259ce9">validate</a> (const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *input, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output, const <a class="el" href="structarm__compute_1_1_winograd_info.xhtml">WinogradInfo</a> &amp;winograd_info)</td></tr>
<tr class="memdesc:a6d3d1d4d66f89908455bc5f05e259ce9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Static function to check if given info will lead to a valid configuration of <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_weights_kernel.xhtml">CpuWinogradConv2dTransformWeightsKernel</a>.  <a href="#a6d3d1d4d66f89908455bc5f05e259ce9">More...</a><br /></td></tr>
<tr class="separator:a6d3d1d4d66f89908455bc5f05e259ce9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_static_methods_classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel"><td colspan="2" onclick="javascript:toggleInherit('pub_static_methods_classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel')"><img src="closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel.xhtml">ICpuWinogradConv2dTransformWeightsKernel</a></td></tr>
<tr class="memitem:a8b4165c2e7c5c983b930a0f5f4df6acf inherit pub_static_methods_classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classarm__compute_1_1_status.xhtml">Status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel.xhtml#a8b4165c2e7c5c983b930a0f5f4df6acf">validate</a> (const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *input, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *weights)</td></tr>
<tr class="memdesc:a8b4165c2e7c5c983b930a0f5f4df6acf inherit pub_static_methods_classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Static function to check if given info will lead to a valid configuration of <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_weights_kernel.xhtml">CpuWinogradConv2dTransformWeightsKernel</a>.  <a href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel.xhtml#a8b4165c2e7c5c983b930a0f5f4df6acf">More...</a><br /></td></tr>
<tr class="separator:a8b4165c2e7c5c983b930a0f5f4df6acf inherit pub_static_methods_classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_static_attribs_classarm__compute_1_1_i_c_p_p_kernel"><td colspan="2" onclick="javascript:toggleInherit('pub_static_attribs_classarm__compute_1_1_i_c_p_p_kernel')"><img src="closed.png" alt="-"/>&#160;Static Public Attributes inherited from <a class="el" href="classarm__compute_1_1_i_c_p_p_kernel.xhtml">ICPPKernel</a></td></tr>
<tr class="memitem:ad6dda2ca87714e265e1521607c2fa7d0 inherit pub_static_attribs_classarm__compute_1_1_i_c_p_p_kernel"><td class="memItemLeft" align="right" valign="top">static constexpr size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_p_p_kernel.xhtml#ad6dda2ca87714e265e1521607c2fa7d0">default_mws</a> = 128</td></tr>
<tr class="separator:ad6dda2ca87714e265e1521607c2fa7d0 inherit pub_static_attribs_classarm__compute_1_1_i_c_p_p_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8fa716a21a95b74db3014c8139c645f1 inherit pub_static_attribs_classarm__compute_1_1_i_c_p_p_kernel"><td class="memItemLeft" align="right" valign="top">static constexpr size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_p_p_kernel.xhtml#a8fa716a21a95b74db3014c8139c645f1">small_network_mws</a> = 256</td></tr>
<tr class="separator:a8fa716a21a95b74db3014c8139c645f1 inherit pub_static_attribs_classarm__compute_1_1_i_c_p_p_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;typename T, int OutputTileRows, int OutputTileCols, int KernelRows, int KernelCols&gt;<br />
class arm_compute::cpu::CpuWinogradConv2dTransformWeightsKernel&lt; T, OutputTileRows, OutputTileCols, KernelRows, KernelCols &gt;</h3>

<p><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class. ">Kernel</a> to perform Winograd weights transform. </p>

<p class="definition">Definition at line <a class="el" href="_cpu_winograd_conv2d_kernel_8h_source.xhtml#l00480">480</a> of file <a class="el" href="_cpu_winograd_conv2d_kernel_8h_source.xhtml">CpuWinogradConv2dKernel.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="aae5e07bf25aff5675f11ae8ec15172cf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aae5e07bf25aff5675f11ae8ec15172cf">&#9670;&nbsp;</a></span>CpuWinogradConv2dTransformWeightsKernel() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_weights_kernel.xhtml">CpuWinogradConv2dTransformWeightsKernel</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_weights_kernel.xhtml">CpuWinogradConv2dTransformWeightsKernel</a>&lt; T, OutputTileRows, OutputTileCols, KernelRows, KernelCols &gt; &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copied (As this class contains pointers) </p>

</div>
</div>
<a id="a3f99e8ff7cb4805d2c72ac74447cb56d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3f99e8ff7cb4805d2c72ac74447cb56d">&#9670;&nbsp;</a></span>CpuWinogradConv2dTransformWeightsKernel() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_weights_kernel.xhtml">CpuWinogradConv2dTransformWeightsKernel</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_weights_kernel.xhtml">CpuWinogradConv2dTransformWeightsKernel</a>&lt; T, OutputTileRows, OutputTileCols, KernelRows, KernelCols &gt; &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be moved. </p>

</div>
</div>
<a id="a48988b53e9e397fad3bdb7885a6e84c2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a48988b53e9e397fad3bdb7885a6e84c2">&#9670;&nbsp;</a></span>~CpuWinogradConv2dTransformWeightsKernel()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_weights_kernel.xhtml">CpuWinogradConv2dTransformWeightsKernel</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default destructor. </p>

</div>
</div>
<a id="a699a4ea06e377a831ebdb588c35ec1e0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a699a4ea06e377a831ebdb588c35ec1e0">&#9670;&nbsp;</a></span>CpuWinogradConv2dTransformWeightsKernel() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_weights_kernel.xhtml">CpuWinogradConv2dTransformWeightsKernel</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Default constructor. </p>

<p class="definition">Definition at line <a class="el" href="_cpu_winograd_conv2d_kernel_8cpp_source.xhtml#l00202">202</a> of file <a class="el" href="_cpu_winograd_conv2d_kernel_8cpp_source.xhtml">CpuWinogradConv2dKernel.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    : _transform(<span class="keyword">nullptr</span>), _num_output_channels(0), _matrix_stride(0)</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;{</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a23e55164ea7e9df47f6eeb0feaaf876f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a23e55164ea7e9df47f6eeb0feaaf876f">&#9670;&nbsp;</a></span>get_matrix_stride()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int get_matrix_stride </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>num_output_channels</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>num_input_channels</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the stride between matrices in the input worspace. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">num_output_channels</td><td>Number of output feature maps. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">num_input_channels</td><td>Number of input feature maps.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Stride expressed in bytes. </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel.xhtml#a39b9c8f1cc005dd0acf05f59f656f56b">ICpuWinogradConv2dTransformWeightsKernel</a>.</p>

<p class="definition">Definition at line <a class="el" href="_cpu_winograd_conv2d_kernel_8cpp_source.xhtml#l00208">208</a> of file <a class="el" href="_cpu_winograd_conv2d_kernel_8cpp_source.xhtml">CpuWinogradConv2dKernel.cpp</a>.</p>

<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00152">ARM_COMPUTE_UNUSED</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel.xhtml#aa000b21e788ad3023bcaf4fa08e68d1e">ICpuWinogradConv2dTransformWeightsKernel::configure()</a>, <a class="el" href="_window_8h_source.xhtml#l00043">Window::DimX</a>, and <a class="el" href="_window_8inl_source.xhtml#l00049">Window::set()</a>.</p>
<div class="fragment"><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;{</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    <span class="keywordflow">return</span> WinogradConv::get_kernel_matrix_stride(num_input_channels, num_output_channels);</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a87a7d4fe23da86c3682b79300d23f248"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a87a7d4fe23da86c3682b79300d23f248">&#9670;&nbsp;</a></span>get_weight_storage_size()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int get_weight_storage_size </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>num_output_channels</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>num_input_channels</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Determine how much memory (in units of T) to allocate for the transformed weights. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">num_output_channels</td><td>Number of output feature maps. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">num_input_channels</td><td>Number of input feature maps.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Storage size (in units of T) required. </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel.xhtml#ac87d8039da10e7380bcaf59169eb4558">ICpuWinogradConv2dTransformWeightsKernel</a>.</p>

<p class="definition">Definition at line <a class="el" href="_cpu_winograd_conv2d_kernel_8cpp_source.xhtml#l00194">194</a> of file <a class="el" href="_cpu_winograd_conv2d_kernel_8cpp_source.xhtml">CpuWinogradConv2dKernel.cpp</a>.</p>

<p class="reference">References <a class="el" href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00115">arm_compute::test::validation::shape</a>.</p>
<div class="fragment"><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;{</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    <span class="keyword">const</span> KernelShape <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>(num_output_channels, KernelRows, KernelCols, num_input_channels);</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    <span class="comment">// WinogradConv returns the size in bytes, we divide by `sizeof(T)` to express that in units of T</span></div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span><span class="keywordtype">unsigned</span> <span class="keywordtype">int</span><span class="keyword">&gt;</span>(WinogradConv::get_kernel_storage_size(num_input_channels, num_output_channels) / <span class="keyword">sizeof</span>(T));</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;}</div><div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a45cde9abb508c62d67c3bb2b9bf566a5"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">arm_compute::test::validation::shape</a></div><div class="ttdeci">shape</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00115">DFT.cpp:115</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a4370ae5fda7bd455a171fc8ed4d3f283"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4370ae5fda7bd455a171fc8ed4d3f283">&#9670;&nbsp;</a></span>is_parallelisable()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool is_parallelisable </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Indicates whether or not the kernel is parallelisable. </p>
<p>If the kernel is parallelisable then the window returned by <a class="el" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6" title="The maximum window the kernel can be executed on. ">window()</a> can be split into sub-windows which can then be run in parallel.</p>
<p>If the kernel is not parallelisable then only the window returned by <a class="el" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6" title="The maximum window the kernel can be executed on. ">window()</a> can be passed to <a class="el" href="classarm__compute_1_1_i_c_p_p_kernel.xhtml#ad6586f7a2dd64942f59b8c408643a0ea" title="Execute the kernel on the passed window. ">run()</a></p>
<dl class="section return"><dt>Returns</dt><dd>True if the kernel is parallelisable </dd></dl>

<p>Reimplemented from <a class="el" href="classarm__compute_1_1_i_kernel.xhtml#a0466ee6ce6552c87595f0e88e73eeb1b">IKernel</a>.</p>

<p class="definition">Definition at line <a class="el" href="_cpu_winograd_conv2d_kernel_8cpp_source.xhtml#l00257">257</a> of file <a class="el" href="_cpu_winograd_conv2d_kernel_8cpp_source.xhtml">CpuWinogradConv2dKernel.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;{</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ab5656bb5b6334bdbe6e606c715872828"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab5656bb5b6334bdbe6e606c715872828">&#9670;&nbsp;</a></span>name()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const char* name </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Name of the kernel. </p>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class. ">Kernel</a> name </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_c_p_p_kernel.xhtml#a1a30ad8f276a2310571c36239554831a">ICPPKernel</a>.</p>

<p class="definition">Definition at line <a class="el" href="_cpu_winograd_conv2d_kernel_8h_source.xhtml#l00496">496</a> of file <a class="el" href="_cpu_winograd_conv2d_kernel_8h_source.xhtml">CpuWinogradConv2dKernel.h</a>.</p>

<p class="reference">References <a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_input_kernel.xhtml#a3a2096918e6e3789f8f5883efd4c9563">ICpuWinogradConv2dTransformInputKernel::configure()</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_input_kernel.xhtml#aab3f5d8ea8dc80c21438141511b8a92d">ICpuWinogradConv2dTransformInputKernel::get_matrix_stride()</a>, <a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">arm_compute::test::validation::info</a>, <a class="el" href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00486">arm_compute::test::validation::input</a>, <a class="el" href="_i_kernel_8cpp_source.xhtml#l00041">IKernel::is_parallelisable()</a>, <a class="el" href="_i_c_p_p_kernel_8h_source.xhtml#l00089">ICPPKernel::run_op()</a>, <a class="el" href="_c_p_p_box_with_non_maxima_suppression_limit_8cpp_source.xhtml#l00214">arm_compute::validate()</a>, and <a class="el" href="_i_kernel_8cpp_source.xhtml#l00028">IKernel::window()</a>.</p>
<div class="fragment"><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;    {</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;CpuWinogradConv2dTransformWeightsKernel&quot;</span>;</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="a944da4bbfd27f2722e695e473f22f96f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a944da4bbfd27f2722e695e473f22f96f">&#9670;&nbsp;</a></span>operator=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_weights_kernel.xhtml">CpuWinogradConv2dTransformWeightsKernel</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_weights_kernel.xhtml">CpuWinogradConv2dTransformWeightsKernel</a>&lt; T, OutputTileRows, OutputTileCols, KernelRows, KernelCols &gt; &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copied (As this class contains pointers) </p>

</div>
</div>
<a id="a5f73598685761449300d2cf2361f3511"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5f73598685761449300d2cf2361f3511">&#9670;&nbsp;</a></span>operator=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_weights_kernel.xhtml">CpuWinogradConv2dTransformWeightsKernel</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_weights_kernel.xhtml">CpuWinogradConv2dTransformWeightsKernel</a>&lt; T, OutputTileRows, OutputTileCols, KernelRows, KernelCols &gt; &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be moved. </p>

</div>
</div>
<a id="a883429dd6cf828bfdd64b255afc458da"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a883429dd6cf828bfdd64b255afc458da">&#9670;&nbsp;</a></span>run_op()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void run_op </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> &amp;&#160;</td>
          <td class="paramname"><em>tensors</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;&#160;</td>
          <td class="paramname"><em>window</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__compute_1_1_thread_info.xhtml">ThreadInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>info</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Execute the kernel on the passed window. </p>
<dl class="section warning"><dt>Warning</dt><dd>If <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_weights_kernel.xhtml#a4370ae5fda7bd455a171fc8ed4d3f283" title="Indicates whether or not the kernel is parallelisable. ">is_parallelisable()</a> returns false then the passed window must be equal to <a class="el" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6" title="The maximum window the kernel can be executed on. ">window()</a></dd></dl>
<dl class="section note"><dt>Note</dt><dd>The window has to be a region within the window returned by the <a class="el" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6" title="The maximum window the kernel can be executed on. ">window()</a> method</dd>
<dd>
The width of the window has to be a multiple of <a class="el" href="_cl_im2_col_kernel_8cpp.xhtml#a4e45c1f5e4280813a78a77dda71d8799">num_elems_processed_per_iteration()</a>.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">tensors</td><td>A vector containing the tensors to operate on. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">window</td><td>Region on which to execute the kernel. (Must be a region of the window returned by <a class="el" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6" title="The maximum window the kernel can be executed on. ">window()</a>) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">info</td><td>Info about executing thread and CPU. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="classarm__compute_1_1_i_c_p_p_kernel.xhtml#a6b8ef149ef3b6ca5e548473916f95cd6">ICPPKernel</a>.</p>

<p class="definition">Definition at line <a class="el" href="_cpu_winograd_conv2d_kernel_8cpp_source.xhtml#l00236">236</a> of file <a class="el" href="_cpu_winograd_conv2d_kernel_8cpp_source.xhtml">CpuWinogradConv2dKernel.cpp</a>.</p>

<p class="reference">References <a class="el" href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00054">arm_compute::ACL_DST</a>, <a class="el" href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00044">arm_compute::ACL_SRC</a>, <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00915">ARM_COMPUTE_ERROR_ON_UNCONFIGURED_KERNEL</a>, <a class="el" href="_error_8h_source.xhtml#l00152">ARM_COMPUTE_UNUSED</a>, <a class="el" href="classarm__compute_1_1_i_tensor.xhtml#ab988210662dbd3bf32fd563c7dd1bdbf">ITensor::buffer()</a>, <a class="el" href="_i_tensor_pack_8cpp_source.xhtml#l00080">ITensorPack::empty()</a>, <a class="el" href="_window_8h_source.xhtml#l00099">Window::Dimension::end()</a>, <a class="el" href="_i_tensor_pack_8cpp_source.xhtml#l00054">ITensorPack::get_const_tensor()</a>, <a class="el" href="_i_tensor_pack_8cpp_source.xhtml#l00064">ITensorPack::get_tensor()</a>, <a class="el" href="utils_8hpp_source.xhtml#l00070">arm_gemm::roundup()</a>, <a class="el" href="_window_8h_source.xhtml#l00094">Window::Dimension::start()</a>, and <a class="el" href="_window_8h_source.xhtml#l00145">Window::x()</a>.</p>
<div class="fragment"><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;{</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>);</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a1b35b0d258183cf9ef36adf684d0b88c">ARM_COMPUTE_ERROR_ON_UNCONFIGURED_KERNEL</a>(<span class="keyword">this</span>);</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(tensors.empty());</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span> fst = <a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>.<a class="code" href="classarm__compute_1_1_window.xhtml#a273fd2ecdd45169b2f702f01a7e5e382">x</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#ab24e31d1a4830bf79564ee902ec6c060">start</a>();</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span> lst = <a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>.<a class="code" href="classarm__compute_1_1_window.xhtml#a273fd2ecdd45169b2f702f01a7e5e382">x</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a0f590bfcf19110f44efc502e7b5c1d9e">end</a>();</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    <span class="keyword">const</span> ITensor *weights_hwio = tensors.get_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69">TensorType::ACL_SRC</a>);</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    ITensor       *output       = tensors.get_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">TensorType::ACL_DST</a>);</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;    _transform-&gt;set_weight_tensor(weights_hwio-&gt;buffer());</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> matrix_row_stride = <a class="code" href="namespacearm__gemm.xhtml#a2cfd518808ae94de30b3d1a3ba7c7890">roundup</a>(_num_output_channels, WinogradConv::N_BLOCK);</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    _transform-&gt;set_output_matrices(output-&gt;buffer(), _matrix_stride, matrix_row_stride);</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    _transform-&gt;set_working_space(output-&gt;buffer());</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    _transform-&gt;run(fst, lst);</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;}</div><div class="ttc" id="namespacearm__gemm_xhtml_a2cfd518808ae94de30b3d1a3ba7c7890"><div class="ttname"><a href="namespacearm__gemm.xhtml#a2cfd518808ae94de30b3d1a3ba7c7890">arm_gemm::roundup</a></div><div class="ttdeci">T roundup(const T a, const T b)</div><div class="ttdef"><b>Definition:</b> <a href="utils_8hpp_source.xhtml#l00070">utils.hpp:70</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_kernel_xhtml_ad34a46f53686c12a5c5e717cc9617fb6"><div class="ttname"><a href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">arm_compute::IKernel::window</a></div><div class="ttdeci">const Window &amp; window() const</div><div class="ttdoc">The maximum window the kernel can be executed on. </div><div class="ttdef"><b>Definition:</b> <a href="_i_kernel_8cpp_source.xhtml#l00028">IKernel.cpp:28</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">arm_compute::ACL_DST</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00054">Types.h:54</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69">arm_compute::ACL_SRC</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00044">Types.h:44</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a6dc630a6ae9cc063b3924bcea8dee9d6"><div class="ttname"><a href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a></div><div class="ttdeci">#define ARM_COMPUTE_UNUSED(...)</div><div class="ttdoc">To avoid unused variables warnings. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00152">Error.h:152</a></div></div>
<div class="ttc" id="arm__compute_2core_2_validate_8h_xhtml_a1b35b0d258183cf9ef36adf684d0b88c"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a1b35b0d258183cf9ef36adf684d0b88c">ARM_COMPUTE_ERROR_ON_UNCONFIGURED_KERNEL</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_UNCONFIGURED_KERNEL(k)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00915">Validate.h:915</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_ac57b92957968088a392021cac1d2076b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">arm_compute::test::validation::info</a></div><div class="ttdeci">ScaleKernelInfo info(interpolation_policy, default_border_mode, PixelValue(), sampling_policy, false)</div></div>
<div class="ttc" id="classarm__compute_1_1_window_1_1_dimension_xhtml_a0f590bfcf19110f44efc502e7b5c1d9e"><div class="ttname"><a href="classarm__compute_1_1_window_1_1_dimension.xhtml#a0f590bfcf19110f44efc502e7b5c1d9e">arm_compute::Window::Dimension::end</a></div><div class="ttdeci">constexpr int end() const</div><div class="ttdoc">Return the end of the dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00099">Window.h:99</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_1_1_dimension_xhtml_ab24e31d1a4830bf79564ee902ec6c060"><div class="ttname"><a href="classarm__compute_1_1_window_1_1_dimension.xhtml#ab24e31d1a4830bf79564ee902ec6c060">arm_compute::Window::Dimension::start</a></div><div class="ttdeci">constexpr int start() const</div><div class="ttdoc">Return the start of the dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00094">Window.h:94</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_a273fd2ecdd45169b2f702f01a7e5e382"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#a273fd2ecdd45169b2f702f01a7e5e382">arm_compute::Window::x</a></div><div class="ttdeci">constexpr const Dimension &amp; x() const</div><div class="ttdoc">Alias to access the first dimension of the window. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00145">Window.h:145</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a6d3d1d4d66f89908455bc5f05e259ce9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6d3d1d4d66f89908455bc5f05e259ce9">&#9670;&nbsp;</a></span>validate()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_status.xhtml">Status</a> validate </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__compute_1_1_winograd_info.xhtml">WinogradInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>winograd_info</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Static function to check if given info will lead to a valid configuration of <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_weights_kernel.xhtml">CpuWinogradConv2dTransformWeightsKernel</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">input</td><td>Source tensor info. The input is a 4D tensor with dimensions [kernel_x, kernel_y, IFM, OFM] (NCHW data layout). kernel_x must be 3 and equal to kernel_y. Data types supported: F16/F32. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">output</td><td>Destination tensor info. The output is a 3D tensor with dimensions [OFM, IFM, 16] or [OFM, IFM, 36]. Data type supported: same as <code>input</code> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">winograd_info</td><td>Contains Winograd's information described in <a class="el" href="structarm__compute_1_1_winograd_info.xhtml">WinogradInfo</a></td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>a status </dd></dl>

<p class="definition">Definition at line <a class="el" href="_cpu_winograd_conv2d_kernel_8cpp_source.xhtml#l00263">263</a> of file <a class="el" href="_cpu_winograd_conv2d_kernel_8cpp_source.xhtml">CpuWinogradConv2dKernel.cpp</a>.</p>

<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00204">ARM_COMPUTE_RETURN_ON_ERROR</a>, and <a class="el" href="classarm__compute_1_1misc_1_1_i_cloneable.xhtml#a4d10e5012a872e7f78f2b539b673049d">ICloneable&lt; T &gt;::clone()</a>.</p>
<div class="fragment"><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;{</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(validate_arguments_winograd_weight_trans(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, output, winograd_info));</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(validate_and_configure_window_winograd_weight_trans(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;clone().get(), output-&gt;clone().get(), winograd_info).first);</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    <span class="keywordflow">return</span> Status{};</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;}</div><div class="ttc" id="_error_8h_xhtml_a8a1e1c105f0bdaf37db408c7cfcb77a4"><div class="ttname"><a href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ON_ERROR(status)</div><div class="ttdoc">Checks if a status contains an error and returns it. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00204">Error.h:204</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a8fcf2ddd9a1d58b1b280f5c0aed71845"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">arm_compute::test::validation::input</a></div><div class="ttdeci">auto input</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00486">LSTMLayerQuantized.cpp:486</a></div></div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/cpu/kernels/<a class="el" href="_cpu_winograd_conv2d_kernel_8h_source.xhtml">CpuWinogradConv2dKernel.h</a></li>
<li>src/cpu/kernels/<a class="el" href="_cpu_winograd_conv2d_kernel_8cpp_source.xhtml">CpuWinogradConv2dKernel.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1cpu.xhtml">cpu</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_weights_kernel.xhtml">CpuWinogradConv2dTransformWeightsKernel</a></li>
    <li class="footer">Generated on Mon Nov 15 2021 14:44:36 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
