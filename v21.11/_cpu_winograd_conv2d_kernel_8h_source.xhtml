<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/cpu/kernels/CpuWinogradConv2dKernel.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">21.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_cpu_winograd_conv2d_kernel_8h_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">CpuWinogradConv2dKernel.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_cpu_winograd_conv2d_kernel_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2017-2021 Arm Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef ARM_COMPUTE_CPUWINOGRADCONV2DKERNEL_H</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define ARM_COMPUTE_CPUWINOGRADCONV2DKERNEL_H</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;src/core/NEON/kernels/convolution/common/convolution.hpp&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;src/core/NEON/kernels/convolution/common/tensor.hpp&quot;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_cpu_kernel_8h.xhtml">src/cpu/ICpuKernel.h</a>&quot;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;src/core/NEON/kernels/convolution/winograd/winograd_layer.hpp&quot;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;{</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keyword">namespace </span>cpu</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;{<span class="comment"></span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="comment">/** Interface for the kernel to perform Winograd input transform. */</span></div><div class="line"><a name="l00038"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_input_kernel.xhtml">   38</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_input_kernel.xhtml">ICpuWinogradConv2dTransformInputKernel</a> : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1_i_c_p_p_kernel.xhtml">ICpuKernel</a></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;{</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">public</span>:<span class="comment"></span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="comment">    /** Get the working space required to perform the transformation.</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="comment">     * Note, the working space is only required when performing the</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment">     * transformation - hence it can be reused whenever the transformation is</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="comment">     * not running.</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="comment">     * @param num_threads The greatest number of threads that will be used to execute the transform.</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="comment">     * @return Size of working space required in bytes.</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_input_kernel.xhtml#adf88b409a140a439b6e5479da2f4cb1f">get_working_space_size</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> num_threads) <span class="keyword">const</span> = 0;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="comment">    /** Determine how much memory (in units of TIn) to allocate for the</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="comment">     * transformed input.</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment">     * @param[in] num_batches  Number of batches in the input tensor.</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment">     * @param[in] num_channels Number of feature maps in the input tensor.</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="comment">     * @param[in] num_rows     Number of rows in each feature map.</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="comment">     * @param[in] num_cols     Number of columns in each feature map.</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="comment">     * @param[in] same_padding Use &quot;SAME&quot; padding, otherwise use &quot;VALID&quot;.</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="comment">     * @return Storage size (in units of TIn) required.</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_input_kernel.xhtml#a1187b798595c88feeb65d15441a4f72f">get_input_storage_size</a>(<span class="keywordtype">int</span> num_batches, <span class="keywordtype">int</span> num_channels, <span class="keywordtype">int</span> num_rows, <span class="keywordtype">int</span> num_cols, <span class="keywordtype">bool</span> same_padding) <span class="keyword">const</span> = 0;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="comment">    /** Gets the stride between matrices in the input worspace</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment">     * @param[in] num_batches  Number of batches in the input tensor.</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="comment">     * @param[in] num_channels Number of feature maps in the input tensor.</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="comment">     * @param[in] num_rows     Number of rows in each feature map.</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="comment">     * @param[in] num_cols     Number of columns in each feature map.</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="comment">     * @param[in] same_padding Use &quot;SAME&quot; padding, otherwise use &quot;VALID&quot;.</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment">     * @return Stride expressed in bytes.</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_input_kernel.xhtml#aab3f5d8ea8dc80c21438141511b8a92d">get_matrix_stride</a>(<span class="keywordtype">int</span> num_batches, <span class="keywordtype">int</span> num_channels, <span class="keywordtype">int</span> num_rows, <span class="keywordtype">int</span> num_cols, <span class="keywordtype">bool</span> same_padding) <span class="keyword">const</span> = 0;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="comment">    /** Configure the output transform kernel.</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="comment">     * @param[in]  input_nhwc    Input tensor in NHWC data layout format.</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="comment">     * @param[in]  num_batches   Number of batches in input tensor.</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="comment">     * @param[in]  num_rows      Number of rows in input tensor.</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="comment">     * @param[in]  num_cols      Number of columns in input tensor.</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="comment">     * @param[in]  num_channels  Number of channels in input tensor.</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="comment">     * @param[in]  padding       Padding type.</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="comment">     * @param[out] output        Base of output matrices.</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment">     * @param[in]  matrix_stride Stride between output matrices.</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment">     * @param[in]  workspace     Tensor to be used as the working space during the computation.</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_input_kernel.xhtml#a3a2096918e6e3789f8f5883efd4c9563">configure</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *input_nhwc, <span class="keyword">const</span> <span class="keywordtype">int</span> num_batches, <span class="keyword">const</span> <span class="keywordtype">int</span> num_rows, <span class="keyword">const</span> <span class="keywordtype">int</span> num_cols, <span class="keyword">const</span> <span class="keywordtype">int</span> num_channels,</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                           <span class="keyword">const</span> PaddingType padding, <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output, <span class="keyword">const</span> <span class="keywordtype">int</span> matrix_stride, <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *workspace) = 0;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="comment">    /** Destructor */</span></div><div class="line"><a name="l00093"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_input_kernel.xhtml#a2266ed380c381e1eb0abeb61a0c3a82a">   93</a></span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_input_kernel.xhtml#a2266ed380c381e1eb0abeb61a0c3a82a">~ICpuWinogradConv2dTransformInputKernel</a>()</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    {</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    }</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;};</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="comment">/** Kernel to perform Winograd input transform. */</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keywordtype">int</span> OutputTileRows, <span class="keywordtype">int</span> OutputTileCols, <span class="keywordtype">int</span> KernelRows, <span class="keywordtype">int</span> KernelCols&gt;</div><div class="line"><a name="l00100"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_input_kernel.xhtml">  100</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_input_kernel.xhtml">CpuWinogradConv2dTransformInputKernel</a> : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_input_kernel.xhtml">ICpuWinogradConv2dTransformInputKernel</a></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;{</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="keyword">public</span>:<span class="comment"></span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="comment">    /** Prevent instances of this class from being copied (As this class contains pointers) */</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_input_kernel.xhtml">CpuWinogradConv2dTransformInputKernel</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_input_kernel.xhtml">CpuWinogradConv2dTransformInputKernel</a> &amp;) = <span class="keyword">delete</span>;<span class="comment"></span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment">    /** Prevent instances of this class from being copied (As this class contains pointers) */</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_input_kernel.xhtml">CpuWinogradConv2dTransformInputKernel</a> &amp;operator=(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_input_kernel.xhtml">CpuWinogradConv2dTransformInputKernel</a> &amp;) = <span class="keyword">delete</span>;<span class="comment"></span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="comment">    /** Allow instances of this class to be moved */</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_input_kernel.xhtml">CpuWinogradConv2dTransformInputKernel</a>(<a class="code" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_input_kernel.xhtml">CpuWinogradConv2dTransformInputKernel</a> &amp;&amp;) = <span class="keywordflow">default</span>;<span class="comment"></span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="comment">    /** Allow instances of this class to be moved */</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_input_kernel.xhtml">CpuWinogradConv2dTransformInputKernel</a> &amp;operator=(<a class="code" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_input_kernel.xhtml">CpuWinogradConv2dTransformInputKernel</a> &amp;&amp;) = <span class="keywordflow">default</span>;<span class="comment"></span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="comment">    /** Default destructor */</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    ~<a class="code" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_input_kernel.xhtml">CpuWinogradConv2dTransformInputKernel</a>() = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment">    /** Determine how much memory (in units of TIn) to allocate for the</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="comment">     * transformed input.</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="comment">     * @param[in] num_batches  Number of batches in the input tensor.</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="comment">     * @param[in] num_channels Number of feature maps in the input tensor.</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="comment">     * @param[in] num_rows     Number of rows in each feature map.</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="comment">     * @param[in] num_cols     Number of columns in each feature map.</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment">     * @param[in] same_padding Use &quot;SAME&quot; padding, otherwise use &quot;VALID&quot;.</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="comment">     * @return Storage size (in units of TIn) required.</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_input_kernel.xhtml#a1187b798595c88feeb65d15441a4f72f">get_input_storage_size</a>(</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        <span class="keywordtype">int</span>  num_batches,</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        <span class="keywordtype">int</span>  num_channels,</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        <span class="keywordtype">int</span>  num_rows,</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        <span class="keywordtype">int</span>  num_cols,</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        <span class="keywordtype">bool</span> same_padding) <span class="keyword">const override</span>;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="comment">    /** Get the working space required to perform the transformation.</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="comment">     * Note, the working space is only required when performing the</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="comment">     * transformation - hence it can be reused whenever the transformation is</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="comment">     * not running.</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="comment">     * @param[in] num_threads The greatest number of threads that will be used to execute the transform.</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="comment">     * @return Size of working space required in bytes.</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_input_kernel.xhtml#adf88b409a140a439b6e5479da2f4cb1f">get_working_space_size</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> num_threads) <span class="keyword">const override</span>;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="comment">    /** Gets the stride between matrices in the input worspace</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="comment">     * @param[in] num_batches  Number of batches in the input tensor.</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="comment">     * @param[in] num_channels Number of feature maps in the input tensor.</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="comment">     * @param[in] num_rows     Number of rows in each feature map.</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="comment">     * @param[in] num_cols     Number of columns in each feature map.</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="comment">     * @param[in] same_padding Use &quot;SAME&quot; padding, otherwise use &quot;VALID&quot;.</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="comment">     * @return Stride expressed in bytes.</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_input_kernel.xhtml#aab3f5d8ea8dc80c21438141511b8a92d">get_matrix_stride</a>(</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        <span class="keywordtype">int</span>  num_batches,</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        <span class="keywordtype">int</span>  num_channels,</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        <span class="keywordtype">int</span>  num_rows,</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        <span class="keywordtype">int</span>  num_cols,</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        <span class="keywordtype">bool</span> same_padding) <span class="keyword">const override</span>;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="comment">    /** Default constructor */</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_input_kernel.xhtml">CpuWinogradConv2dTransformInputKernel</a>();</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;</div><div class="line"><a name="l00164"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_input_kernel.xhtml#ab5656bb5b6334bdbe6e606c715872828">  164</a></span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_input_kernel.xhtml#ab5656bb5b6334bdbe6e606c715872828">name</a>()<span class="keyword"> const override</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;CpuWinogradConv2dTransformInputKernel&quot;</span>;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    }</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="comment">    /** Configure the output transform kernel.</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="comment">     * @param[in]  input_nhwc    Input tensor.  Data types supported: F16/F32. Layout supported NHWC.</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="comment">     * @param[in]  num_batches   Number of batches in input tensor.</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="comment">     * @param[in]  num_rows      Number of rows in input tensor.</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="comment">     * @param[in]  num_cols      Number of columns in input tensor.</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="comment">     * @param[in]  num_channels  Number of channels in input tensor.</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="comment">     * @param[in]  padding       Padding type.</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="comment">     * @param[out] output        Base of output matrices.</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="comment">     * @param[in]  matrix_stride Stride between output matrices.</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="comment">     * @param[in]  workspace     Tensor to be used as the working space during the computation.</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_input_kernel.xhtml#a3a2096918e6e3789f8f5883efd4c9563">configure</a>(</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *input_nhwc,</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span>          num_batches,</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span>          num_rows,</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span>          num_cols,</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span>          num_channels,</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        <span class="keyword">const</span> PaddingType  padding,</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;        <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>       *output,</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span>          matrix_stride,</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;        <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>       *workspace) <span class="keyword">override</span>;</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    <span class="comment">// Inherited methods overridden:</span></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_i_c_p_p_kernel.xhtml#a6b8ef149ef3b6ca5e548473916f95cd6">run_op</a>(<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> &amp;tensors, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;<a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_thread_info.xhtml">ThreadInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>) <span class="keyword">override</span>;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="comment">    /** Winograd base kernel */</span></div><div class="line"><a name="l00196"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_input_kernel.xhtml#a1bc75fe67cfd09e90f240a935da92f54">  196</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_input_kernel.xhtml#a1bc75fe67cfd09e90f240a935da92f54">WinogradBase</a> = winograd::WinogradGEMM&lt;OutputTileRows, OutputTileCols, KernelRows, KernelCols, winograd::WinogradRoots::Integers&gt;;<span class="comment"></span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="comment">    /** Winograd convolution kernel */</span></div><div class="line"><a name="l00198"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_input_kernel.xhtml#af17b2792d63e38a0eea385635191e836">  198</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_input_kernel.xhtml#af17b2792d63e38a0eea385635191e836">WinogradConv</a> = <span class="keyword">typename</span> WinogradBase::template Convolution&lt;T, T&gt;;</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="comment">    /** Static function to check if given info will lead to a valid configuration of @ref CpuWinogradConv2dTransformInputKernel</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="comment">     * @param[in] input         First tensor input info. Data types supported: F16/F32.</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="comment">     * @param[in] output        Output tensor info. Data types supported: same as @p input.</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="comment">     * @param[in] winograd_info Contains Winograd&#39;s information described in @ref WinogradInfo</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="comment">     * @return a status</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    <span class="keyword">static</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="namespacearm__compute.xhtml#a4feaaa70771629f4b5dcf3b219c8b647">validate</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_winograd_info.xhtml">WinogradInfo</a> &amp;winograd_info);</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    <span class="keyword">using</span> InputTransform = <span class="keyword">typename</span> WinogradBase::template InputTransform&lt;T, T&gt;;</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    std::unique_ptr&lt;InputTransform&gt; _transform{ <span class="keyword">nullptr</span> };</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    <span class="keywordtype">int</span>                             _num_channels;  <span class="comment">/**&lt; Number of channels in input tensor. */</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    <span class="keywordtype">int</span>                             _matrix_stride; <span class="comment">/**&lt; Stride between output matrices. */</span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;};</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;<span class="comment">/** Interface for the kernel to perform Winograd output transform. */</span></div><div class="line"><a name="l00219"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_output_kernel.xhtml">  219</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_output_kernel.xhtml">ICpuWinogradConv2dTransformOutputKernel</a> : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1_i_c_p_p_kernel.xhtml">ICpuKernel</a></div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;{</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="keyword">public</span>:<span class="comment"></span></div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;<span class="comment">    /** Get the working space required to perform the transformation.</span></div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;<span class="comment">     * Note, the working space is only required when performing the</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="comment">     * transformation - hence it can be reused whenever the transformation is</span></div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;<span class="comment">     * not running.</span></div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;<span class="comment">     * @param[in] num_threads The greatest number of threads that will be used to execute the transform.</span></div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<span class="comment">     * @return Size of working space required in bytes.</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_input_kernel.xhtml#adf88b409a140a439b6e5479da2f4cb1f">get_working_space_size</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> num_threads) <span class="keyword">const</span> = 0;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;<span class="comment">    /** Determine how much memory (in units of TOut) to allocate for the</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;<span class="comment">     * (Winograd domain) output.</span></div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="comment">     * @param[in] num_batches         Number of batches in the output tensor.</span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;<span class="comment">     * @param[in] num_rows            Number of rows in each feature map of the input tensor.</span></div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;<span class="comment">     * @param[in] num_cols            Number of columns in each feature map of the input tensor.</span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<span class="comment">     * @param[in] num_output_channels Number of feature maps in the output tensor.</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;<span class="comment">     * @return Storage size (in units of TOut) required.</span></div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> get_output_storage_size(<span class="keywordtype">int</span> num_batches, <span class="keywordtype">int</span> num_rows, <span class="keywordtype">int</span> num_cols, <span class="keywordtype">int</span> num_output_channels) <span class="keyword">const</span> = 0;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;<span class="comment">    /** Gets the stride between matrices in the output worspace</span></div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;<span class="comment">     * @param[in] num_batches         Number of batches in the output tensor.</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="comment">     * @param[in] num_rows            Number of rows in each feature map of the input tensor.</span></div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<span class="comment">     * @param[in] num_cols            Number of columns in each feature map of the input tensor.</span></div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;<span class="comment">     * @param[in] num_output_channels Number of feature maps in the output tensor.</span></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;<span class="comment">     * @return Stride expressed in bytes.</span></div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_input_kernel.xhtml#aab3f5d8ea8dc80c21438141511b8a92d">get_matrix_stride</a>(<span class="keywordtype">int</span> num_batches, <span class="keywordtype">int</span> num_rows, <span class="keywordtype">int</span> num_cols, <span class="keywordtype">int</span> num_output_channels) <span class="keyword">const</span> = 0;</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="comment">    /** Get the output shape of a convolution.</span></div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;<span class="comment">     * @param[in] num_rows     Number of rows in each feature map of the input tensor.</span></div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;<span class="comment">     * @param[in] num_cols     Number of columns in each feature map of the input tensor.</span></div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;<span class="comment">     * @param[in] padding_same True if padding is SAME, false otherwise</span></div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;<span class="comment">     * @return Shape of the output tensor</span></div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    <span class="keyword">virtual</span> std::pair&lt;unsigned int, unsigned int&gt; get_output_shape(</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;        <span class="keywordtype">int</span>  num_rows,    <span class="comment">/* Number of rows in each feature map of the input tensor. */</span></div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;        <span class="keywordtype">int</span>  num_cols,    <span class="comment">/* Number of columns in each feature map of the input tensor. */</span></div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;        <span class="keywordtype">bool</span> padding_same <span class="comment">/* True if padding is SAME, false otherwise */</span></div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    ) <span class="keyword">const</span> = 0;</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;<span class="comment">    /** Configure the output transform kernel.</span></div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;<span class="comment">     * @param[in]  biases             Pointer to the biases tensor.</span></div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;<span class="comment">     * @param[in]  transformed_output Pointer to working space for the output tensor in the Winograd domain.</span></div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;<span class="comment">     * @param[in]  matrix_stride      Output matrix stride, can be computed with winograd::WinogradGEMM&lt;2, 2, 3, 3&gt;::Convolution&lt;float, float&gt;::get_output_matrix_stride()</span></div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;<span class="comment">     * @param[out] output_nhwc        Pointer to a tensor in NHWC data layout ordered output tensor, in the spatial domain.</span></div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;<span class="comment">     * @param[in]  num_batches        Number of batches in the input tensor.</span></div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;<span class="comment">     * @param[in]  num_rows           Number of rows in output tensor.</span></div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;<span class="comment">     * @param[in]  num_cols           Number of columns in output tensor.</span></div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;<span class="comment">     * @param[in]  num_channels       Number of feature maps in the output tensor.</span></div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;<span class="comment">     * @param[in]  workspace          Tensor to be used as the working space during the computation.</span></div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;<span class="comment">     * @param[in]  activation         Activation to be used</span></div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_input_kernel.xhtml#a3a2096918e6e3789f8f5883efd4c9563">configure</a>(</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>          *biases,</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>          *transformed_output,</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span>                   matrix_stride,</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;        <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>                *output_nhwc,</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span>                   num_batches,</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span>                   num_rows,</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span>                   num_cols,</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span>                   num_channels,</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;        <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>                *workspace,</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;        <span class="keyword">const</span> <a class="code" href="structarm__gemm_1_1_activation.xhtml">arm_gemm::Activation</a> &amp;activation) = 0;</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;</div><div class="line"><a name="l00296"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_output_kernel.xhtml#a907943778d3a48c934c98d03c0293523">  296</a></span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_output_kernel.xhtml#a907943778d3a48c934c98d03c0293523">~ICpuWinogradConv2dTransformOutputKernel</a>()</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;    {</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    }</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;};</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;<span class="comment">/** Kernel to perform Winograd output transform. */</span></div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keywordtype">int</span> OutputTileRows, <span class="keywordtype">int</span> OutputTileCols, <span class="keywordtype">int</span> KernelRows, <span class="keywordtype">int</span> KernelCols&gt;</div><div class="line"><a name="l00303"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_output_kernel.xhtml">  303</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_output_kernel.xhtml">CpuWinogradConv2dTransformOutputKernel</a> : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_output_kernel.xhtml">ICpuWinogradConv2dTransformOutputKernel</a></div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;{</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00306"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_output_kernel.xhtml#ab5656bb5b6334bdbe6e606c715872828">  306</a></span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_output_kernel.xhtml#ab5656bb5b6334bdbe6e606c715872828">name</a>()<span class="keyword"> const override</span></div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;CpuWinogradConv2dTransformOutputKernel&quot;</span>;</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;    }<span class="comment"></span></div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;<span class="comment">    /** Constructor */</span></div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;    <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_output_kernel.xhtml">CpuWinogradConv2dTransformOutputKernel</a>();</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;<span class="comment">    /** Prevent instances of this class from being copied (As this class contains pointers) */</span></div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;    <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_output_kernel.xhtml">CpuWinogradConv2dTransformOutputKernel</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_output_kernel.xhtml">CpuWinogradConv2dTransformOutputKernel</a> &amp;) = <span class="keyword">delete</span>;<span class="comment"></span></div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;<span class="comment">    /** Prevent instances of this class from being copied (As this class contains pointers) */</span></div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;    <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_output_kernel.xhtml">CpuWinogradConv2dTransformOutputKernel</a> &amp;operator=(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_output_kernel.xhtml">CpuWinogradConv2dTransformOutputKernel</a> &amp;) = <span class="keyword">delete</span>;<span class="comment"></span></div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;<span class="comment">    /** Allow instances of this class to be moved */</span></div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;    <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_output_kernel.xhtml">CpuWinogradConv2dTransformOutputKernel</a>(<a class="code" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_output_kernel.xhtml">CpuWinogradConv2dTransformOutputKernel</a> &amp;&amp;) = <span class="keywordflow">default</span>;<span class="comment"></span></div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;<span class="comment">    /** Allow instances of this class to be moved */</span></div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;    <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_output_kernel.xhtml">CpuWinogradConv2dTransformOutputKernel</a> &amp;operator=(<a class="code" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_output_kernel.xhtml">CpuWinogradConv2dTransformOutputKernel</a> &amp;&amp;) = <span class="keywordflow">default</span>;<span class="comment"></span></div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;<span class="comment">    /** Default destructor */</span></div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;    ~<a class="code" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_output_kernel.xhtml">CpuWinogradConv2dTransformOutputKernel</a>() = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;    <span class="comment">// Inherited methods overridden:</span><span class="comment"></span></div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;<span class="comment">    /** Determine how much memory (in units of TOut) to allocate for the</span></div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;<span class="comment">     * (Winograd domain) output.</span></div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;<span class="comment">     * @param[in] num_batches         Number of batches in the output tensor.</span></div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;<span class="comment">     * @param[in] num_rows            Number of rows in each feature map of the input tensor.</span></div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;<span class="comment">     * @param[in] num_cols            Number of columns in each feature map of the input tensor.</span></div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;<span class="comment">     * @param[in] num_output_channels Number of feature maps in the output tensor.</span></div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;<span class="comment">     * @return Storage size (in units of TOut) required.</span></div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> get_output_storage_size(<span class="keywordtype">int</span> num_batches, <span class="keywordtype">int</span> num_rows, <span class="keywordtype">int</span> num_cols, <span class="keywordtype">int</span> num_output_channels) <span class="keyword">const override</span>;</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;<span class="comment">    /** Gets the stride between matrices in the output worspace</span></div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;<span class="comment">     * @param[in] num_batches         Number of batches in the output tensor.</span></div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;<span class="comment">     * @param[in] num_rows            Number of rows in each feature map of the input tensor.</span></div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;<span class="comment">     * @param[in] num_cols            Number of columns in each feature map of the input tensor.</span></div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;<span class="comment">     * @param[in] num_output_channels Number of feature maps in the output tensor.</span></div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;<span class="comment">     * @return Stride expressed in bytes.</span></div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_input_kernel.xhtml#aab3f5d8ea8dc80c21438141511b8a92d">get_matrix_stride</a>(<span class="keywordtype">int</span> num_batches, <span class="keywordtype">int</span> num_rows, <span class="keywordtype">int</span> num_cols, <span class="keywordtype">int</span> num_output_channels) <span class="keyword">const override</span>;<span class="comment"></span></div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;<span class="comment">    /** Get the output shape of a convolution.</span></div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;<span class="comment">     * @param[in] num_rows     Number of rows in each feature map of the input tensor.</span></div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;<span class="comment">     * @param[in] num_cols     Number of columns in each feature map of the input tensor.</span></div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;<span class="comment">     * @param[in] padding_same True if padding is SAME, false otherwise</span></div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;<span class="comment">     * @return Shape of the output tensor</span></div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;    std::pair&lt;unsigned int, unsigned int&gt; get_output_shape(</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;        <span class="keywordtype">int</span>  num_rows, <span class="comment">/* Number of rows in each feature map of the input tensor. */</span></div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;        <span class="keywordtype">int</span>  num_cols, <span class="comment">/* Number of columns in each feature map of the input tensor. */</span></div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;        <span class="keywordtype">bool</span> padding_same) <span class="keyword">const override</span>;</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;<span class="comment">    /** Get the working space required to perform the transformation.</span></div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;<span class="comment">     * Note, the working space is only required when performing the</span></div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;<span class="comment">     * transformation - hence it can be reused whenever the transformation is</span></div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;<span class="comment">     * not running.</span></div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;<span class="comment">     * @param[in] num_threads The greatest number of threads that will be used to execute the transform.</span></div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;<span class="comment">     * @return Size of working space required in bytes.</span></div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_input_kernel.xhtml#adf88b409a140a439b6e5479da2f4cb1f">get_working_space_size</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> num_threads) <span class="keyword">const override</span>;</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;<span class="comment">    /** Configure the output transform kernel.</span></div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;<span class="comment">     * @param[in]  biases             Pointer to the biases tensor.</span></div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;<span class="comment">     * @param[in]  transformed_output Pointer to working space for the output tensor in the Winograd domain.</span></div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;<span class="comment">     * @param[in]  matrix_stride      Output matrix stride, can be computed with winograd::WinogradGEMM&lt;2, 2, 3, 3&gt;::Convolution&lt;float, float&gt;::get_output_matrix_stride()</span></div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;<span class="comment">     * @param[out] output_nhwc        Pointer to a tensor with NHWC data layout, in the spatial domain.</span></div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;<span class="comment">     * @param[in]  num_batches        Number of batches in the input tensor.</span></div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;<span class="comment">     * @param[in]  num_rows           Number of rows in output tensor.</span></div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;<span class="comment">     * @param[in]  num_cols           Number of columns in output tensor.</span></div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;<span class="comment">     * @param[in]  num_channels       Number of feature maps in the output tensor.</span></div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;<span class="comment">     * @param[in]  workspace          Tensor to be used as the working space during the computation.</span></div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;<span class="comment">     * @param[in]  activation         Activation to be used</span></div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_input_kernel.xhtml#a3a2096918e6e3789f8f5883efd4c9563">configure</a>(</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>          *biases,</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>          *transformed_output,</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span>                   matrix_stride,</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;        <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>                *output_nhwc,</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span>                   num_batches,</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span>                   num_rows,</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span>                   num_cols,</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span>                   num_channels,</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;        <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>                *workspace,</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;        <span class="keyword">const</span> <a class="code" href="structarm__gemm_1_1_activation.xhtml">arm_gemm::Activation</a> &amp;activation) <span class="keyword">override</span>;</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_i_c_p_p_kernel.xhtml#a6b8ef149ef3b6ca5e548473916f95cd6">run_op</a>(<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> &amp;tensors, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;<a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_thread_info.xhtml">ThreadInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>) <span class="keyword">override</span>;</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;<span class="comment">    /** Static function to check if given info will lead to a valid configuration of @ref CpuWinogradConv2dTransformOutputKernel</span></div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;<span class="comment">     * @param[in] input         Source tensor info with shape [C, N, 16, batches] or [C, N, 36, batches]. Data types supported: F16/F32.</span></div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;<span class="comment">     * @param[in] bias          Biases tensor info. Shared biases supported. Biases are 1D tensor with dimensions [OFM]. It can be a nullptr. Data type supported: as @p input</span></div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;<span class="comment">     * @param[in] output        Destination tensor info with shape [output_convolved_dims.width, output_convolved_dims.height, C, batches]. Data type supported: same as @p input</span></div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;<span class="comment">     * @param[in] winograd_info Contains Winograd&#39;s information described in @ref WinogradInfo</span></div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;<span class="comment">     * @return a status</span></div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;    <span class="keyword">static</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="namespacearm__compute.xhtml#a4feaaa70771629f4b5dcf3b219c8b647">validate</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *bias, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_winograd_info.xhtml">WinogradInfo</a> &amp;winograd_info);</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;    <span class="keyword">using</span> WinogradBase    = winograd::WinogradGEMM&lt;OutputTileRows, OutputTileCols, KernelRows, KernelCols, winograd::WinogradRoots::Integers&gt;;</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;    <span class="keyword">using</span> WinogradConv    = <span class="keyword">typename</span> WinogradBase::template Convolution&lt;T, T&gt;;</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;    <span class="keyword">using</span> OutputTransform = <span class="keyword">typename</span> WinogradBase::template OutputTransform&lt;T, T&gt;;</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;    std::unique_ptr&lt;OutputTransform&gt; _transform{ <span class="keyword">nullptr</span> };</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;    <span class="keywordtype">int</span>                              _matrix_stride;</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;    <span class="keywordtype">int</span>                              _matrix_row_stride;</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;};</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;<span class="comment">/** Interface for the kernel to perform Winograd weights transform. */</span></div><div class="line"><a name="l00421"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel.xhtml">  421</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel.xhtml">ICpuWinogradConv2dTransformWeightsKernel</a> : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1_i_c_p_p_kernel.xhtml">ICpuKernel</a></div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;{</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;<span class="keyword">public</span>:<span class="comment"></span></div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;<span class="comment">    /** Prevent instances of this class from being copied (As this class contains pointers) */</span></div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;    <a class="code" href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel.xhtml">ICpuWinogradConv2dTransformWeightsKernel</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel.xhtml">ICpuWinogradConv2dTransformWeightsKernel</a> &amp;) = <span class="keywordflow">default</span>;<span class="comment"></span></div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;<span class="comment">    /** Prevent instances of this class from being copied (As this class contains pointers) */</span></div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;    <a class="code" href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel.xhtml">ICpuWinogradConv2dTransformWeightsKernel</a> &amp;operator=(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel.xhtml">ICpuWinogradConv2dTransformWeightsKernel</a> &amp;) = <span class="keywordflow">default</span>;<span class="comment"></span></div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;<span class="comment">    /** Allow instances of this class to be moved */</span></div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;    <a class="code" href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel.xhtml">ICpuWinogradConv2dTransformWeightsKernel</a>(<a class="code" href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel.xhtml">ICpuWinogradConv2dTransformWeightsKernel</a> &amp;&amp;) = <span class="keywordflow">default</span>;<span class="comment"></span></div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;<span class="comment">    /** Allow instances of this class to be moved */</span></div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;    <a class="code" href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel.xhtml">ICpuWinogradConv2dTransformWeightsKernel</a> &amp;operator=(<a class="code" href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel.xhtml">ICpuWinogradConv2dTransformWeightsKernel</a> &amp;&amp;) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;</div><div class="line"><a name="l00433"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel.xhtml#a6cf5d37e43adc9c391b50e52c3b4a8d4">  433</a></span>&#160;    <a class="code" href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel.xhtml#a6cf5d37e43adc9c391b50e52c3b4a8d4">ICpuWinogradConv2dTransformWeightsKernel</a>()</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;    {</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;    }</div><div class="line"><a name="l00436"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel.xhtml#ae4a40fc825c6741cd99c171544a6eda3">  436</a></span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel.xhtml#ae4a40fc825c6741cd99c171544a6eda3">~ICpuWinogradConv2dTransformWeightsKernel</a>()</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;    {</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;    }<span class="comment"></span></div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;<span class="comment">    /** Determine how much memory (in units of T) to allocate for the</span></div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;<span class="comment">     * transformed weights.</span></div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;<span class="comment">     * @param[in] num_output_channels Number of output feature maps.</span></div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;<span class="comment">     * @param[in] num_input_channels  Number of input feature maps.</span></div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;<span class="comment">     * @return Storage size (in units of T) required.</span></div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> get_weight_storage_size(<span class="keywordtype">int</span> num_output_channels, <span class="keywordtype">int</span> num_input_channels) <span class="keyword">const</span> = 0;<span class="comment"></span></div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;<span class="comment">    /** Gets the stride between matrices in the kernel worspace</span></div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;<span class="comment">     * @param[in] num_output_channels Number of output feature maps.</span></div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;<span class="comment">     * @param[in] num_input_channels  Number of input feature maps.</span></div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;<span class="comment">     * @return Stride expressed in bytes.</span></div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_input_kernel.xhtml#aab3f5d8ea8dc80c21438141511b8a92d">get_matrix_stride</a>(<span class="keywordtype">int</span> num_output_channels, <span class="keywordtype">int</span> num_input_channels) <span class="keyword">const</span> = 0;</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;<span class="comment">    /** Configure the weights transform kernel.</span></div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;<span class="comment">     * @param[in]  weights_hwio        Pointer to the weights tensor info</span></div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;<span class="comment">     * @param[out] output              Pointer to working space for the output tensor in the Winograd domain.</span></div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;<span class="comment">     * @param[in]  matrix_stride       Stride across matrices in the output workspace.</span></div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;<span class="comment">     * @param[in]  num_output_channels Number of filters.</span></div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;<span class="comment">     * @param[in]  num_input_channels  Number of channels in each filter.</span></div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_input_kernel.xhtml#a3a2096918e6e3789f8f5883efd4c9563">configure</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *weights_hwio, <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output, <span class="keyword">const</span> <span class="keywordtype">int</span> matrix_stride, <span class="keyword">const</span> <span class="keywordtype">int</span> num_output_channels, <span class="keyword">const</span> <span class="keywordtype">int</span> num_input_channels) = 0;</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;<span class="comment">    /** Static function to check if given info will lead to a valid configuration of @ref CpuWinogradConv2dTransformWeightsKernel</span></div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;<span class="comment">     * @param[in] input   First tensor input info. Data types supported: F16/F32.</span></div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;<span class="comment">     * @param[in] weights Weights tensor info. Data types supported: same as @p input.</span></div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;<span class="comment">     * @return a status</span></div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;    <span class="keyword">static</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="namespacearm__compute.xhtml#a4feaaa70771629f4b5dcf3b219c8b647">validate</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *weights);</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;};</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;<span class="comment">/** Kernel to perform Winograd weights transform. */</span></div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keywordtype">int</span> OutputTileRows, <span class="keywordtype">int</span> OutputTileCols, <span class="keywordtype">int</span> KernelRows, <span class="keywordtype">int</span> KernelCols&gt;</div><div class="line"><a name="l00480"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_weights_kernel.xhtml">  480</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_weights_kernel.xhtml">CpuWinogradConv2dTransformWeightsKernel</a> final : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel.xhtml">ICpuWinogradConv2dTransformWeightsKernel</a></div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;{</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;<span class="keyword">public</span>:<span class="comment"></span></div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;<span class="comment">    /** Prevent instances of this class from being copied (As this class contains pointers) */</span></div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;    <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_weights_kernel.xhtml">CpuWinogradConv2dTransformWeightsKernel</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_weights_kernel.xhtml">CpuWinogradConv2dTransformWeightsKernel</a> &amp;) = <span class="keyword">delete</span>;<span class="comment"></span></div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;<span class="comment">    /** Prevent instances of this class from being copied (As this class contains pointers) */</span></div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;    <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_weights_kernel.xhtml">CpuWinogradConv2dTransformWeightsKernel</a> &amp;operator=(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_weights_kernel.xhtml">CpuWinogradConv2dTransformWeightsKernel</a> &amp;) = <span class="keyword">delete</span>;<span class="comment"></span></div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;<span class="comment">    /** Allow instances of this class to be moved */</span></div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;    <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_weights_kernel.xhtml">CpuWinogradConv2dTransformWeightsKernel</a>(<a class="code" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_weights_kernel.xhtml">CpuWinogradConv2dTransformWeightsKernel</a> &amp;&amp;) = <span class="keywordflow">default</span>;<span class="comment"></span></div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;<span class="comment">    /** Allow instances of this class to be moved */</span></div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;    <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_weights_kernel.xhtml">CpuWinogradConv2dTransformWeightsKernel</a> &amp;operator=(<a class="code" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_weights_kernel.xhtml">CpuWinogradConv2dTransformWeightsKernel</a> &amp;&amp;) = <span class="keywordflow">default</span>;<span class="comment"></span></div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;<span class="comment">    /** Default destructor */</span></div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;    ~<a class="code" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_weights_kernel.xhtml">CpuWinogradConv2dTransformWeightsKernel</a>() = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;<span class="comment">    /** Default constructor. */</span></div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;    <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_weights_kernel.xhtml">CpuWinogradConv2dTransformWeightsKernel</a>();</div><div class="line"><a name="l00496"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_weights_kernel.xhtml#ab5656bb5b6334bdbe6e606c715872828">  496</a></span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_weights_kernel.xhtml#ab5656bb5b6334bdbe6e606c715872828">name</a>()<span class="keyword"> const override</span></div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;CpuWinogradConv2dTransformWeightsKernel&quot;</span>;</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;    }</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;<span class="comment">    /** Static function to check if given info will lead to a valid configuration of @ref CpuWinogradConv2dTransformWeightsKernel</span></div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;<span class="comment">     * @param[in] input         Source tensor info. The input is a 4D tensor with dimensions [kernel_x, kernel_y, IFM, OFM] (NCHW data layout).</span></div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;<span class="comment">     *                          kernel_x must be 3 and equal to kernel_y. Data types supported: F16/F32.</span></div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;<span class="comment">     * @param[in] output        Destination tensor info. The output is a 3D tensor with dimensions [OFM, IFM, 16] or [OFM, IFM, 36]. Data type supported: same as @p input</span></div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;<span class="comment">     * @param[in] winograd_info Contains Winograd&#39;s information described in @ref WinogradInfo</span></div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;<span class="comment">     * @return a status</span></div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;    <span class="keyword">static</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="namespacearm__compute.xhtml#a4feaaa70771629f4b5dcf3b219c8b647">validate</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_winograd_info.xhtml">WinogradInfo</a> &amp;winograd_info);</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;    <span class="comment">// Inherited methods overridden:</span></div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;<span class="preprocessor">#ifndef DOXYGEN_SKIP_THIS</span></div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;<span class="comment">    /** Configure the weights transform kernel.</span></div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;<span class="comment">     * @param[in]  weights_hwio        Pointer to the weights tensor info</span></div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;<span class="comment">     * @param[out] output              Pointer to working space for the output tensor in the Winograd domain.</span></div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;<span class="comment">     * @param[in]  matrix_stride       Stride across matrices in the output workspace.</span></div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;<span class="comment">     * @param[in]  num_output_channels Number of filters.</span></div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;<span class="comment">     * @param[in]  num_input_channels  Number of channels in each filter.</span></div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_input_kernel.xhtml#a3a2096918e6e3789f8f5883efd4c9563">configure</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *weights_hwio, <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output, <span class="keyword">const</span> <span class="keywordtype">int</span> matrix_stride, <span class="keyword">const</span> <span class="keywordtype">int</span> num_output_channels, <span class="keyword">const</span> <span class="keywordtype">int</span> num_input_channels) <span class="keyword">override</span>;</div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* DOXYGEN_SKIP_THIS */</span><span class="preprocessor"></span></div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;<span class="comment">    /** Determine how much memory (in units of T) to allocate for the</span></div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;<span class="comment">     * transformed weights.</span></div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;<span class="comment">     * @param[in] num_output_channels Number of output feature maps.</span></div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;<span class="comment">     * @param[in] num_input_channels  Number of input feature maps.</span></div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;<span class="comment">     * @return Storage size (in units of T) required.</span></div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> get_weight_storage_size(<span class="keywordtype">int</span> num_output_channels, <span class="keywordtype">int</span> num_input_channels) <span class="keyword">const override</span>;</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;<span class="comment">    /** Gets the stride between matrices in the input worspace</span></div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;<span class="comment">     * @param[in] num_output_channels Number of output feature maps.</span></div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;<span class="comment">     * @param[in] num_input_channels  Number of input feature maps.</span></div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;<span class="comment">     * @return Stride expressed in bytes.</span></div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_input_kernel.xhtml#aab3f5d8ea8dc80c21438141511b8a92d">get_matrix_stride</a>(<span class="keywordtype">int</span> num_output_channels, <span class="keywordtype">int</span> num_input_channels) <span class="keyword">const override</span>;</div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_i_c_p_p_kernel.xhtml#a6b8ef149ef3b6ca5e548473916f95cd6">run_op</a>(<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> &amp;tensors, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;<a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_thread_info.xhtml">ThreadInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>) <span class="keyword">override</span>;</div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1_i_kernel.xhtml#a0466ee6ce6552c87595f0e88e73eeb1b">is_parallelisable</a>() <span class="keyword">const override</span>;</div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;</div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;    <span class="keyword">using</span> WinogradBase     = winograd::WinogradGEMM&lt;OutputTileRows, OutputTileCols, KernelRows, KernelCols, winograd::WinogradRoots::Integers&gt;;</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;    <span class="keyword">using</span> WinogradConv     = <span class="keyword">typename</span> WinogradBase::template Convolution&lt;T, T&gt;;</div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;    <span class="keyword">using</span> WeightsTransform = <span class="keyword">typename</span> WinogradBase::template WeightsTransform&lt;T, T&gt;;</div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;</div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;    std::unique_ptr&lt;WeightsTransform&gt; _transform{ <span class="keyword">nullptr</span> };</div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;    <span class="keywordtype">int</span>                               _num_output_channels;</div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;    <span class="keywordtype">int</span>                               _matrix_stride;</div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;};</div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;<span class="comment">/** Kernel to perform Winograd. */</span></div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> TIn, <span class="keyword">typename</span> TOut, <span class="keywordtype">int</span> OutputTileRows, <span class="keywordtype">int</span> OutputTileCols, <span class="keywordtype">int</span> KernelRows, <span class="keywordtype">int</span> KernelCols&gt;</div><div class="line"><a name="l00559"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_configuration.xhtml">  559</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_configuration.xhtml">CpuWinogradConv2dConfiguration</a></div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;{</div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;<span class="keyword">public</span>:<span class="comment"></span></div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;<span class="comment">    /** Winograd base kernel */</span></div><div class="line"><a name="l00563"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_configuration.xhtml#a1bc75fe67cfd09e90f240a935da92f54">  563</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_configuration.xhtml#a1bc75fe67cfd09e90f240a935da92f54">WinogradBase</a> = winograd::WinogradGEMM&lt;OutputTileRows, OutputTileCols, KernelRows, KernelCols, winograd::WinogradRoots::Integers&gt;;<span class="comment"></span></div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;<span class="comment">    /** Winograd convolution kernel */</span></div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;</div><div class="line"><a name="l00566"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_configuration.xhtml#acd8461f7d784d4c09b73447f357e6b1a">  566</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_configuration.xhtml#acd8461f7d784d4c09b73447f357e6b1a">WinogradConv</a> = <span class="keyword">typename</span> WinogradBase::template Convolution&lt;TIn, TOut&gt;;</div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;</div><div class="line"><a name="l00568"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_configuration.xhtml#a2a513107eef74f507601b9a74d2e40e3">  568</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_input_kernel.xhtml">TransformInputKernel</a>   = <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_input_kernel.xhtml">CpuWinogradConv2dTransformInputKernel&lt;TIn, OutputTileRows, OutputTileCols, KernelRows, KernelCols&gt;</a>;</div><div class="line"><a name="l00569"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_configuration.xhtml#ae527cb09411135bf2f0ac4b1ff732d97">  569</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_weights_kernel.xhtml">TransformWeightsKernel</a> = <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_weights_kernel.xhtml">CpuWinogradConv2dTransformWeightsKernel&lt;TIn, OutputTileRows, OutputTileCols, KernelRows, KernelCols&gt;</a>;</div><div class="line"><a name="l00570"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_configuration.xhtml#aac7c47b2572844ab2e4152eab4997624">  570</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_output_kernel.xhtml">TransformOutputKernel</a>  = <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_output_kernel.xhtml">CpuWinogradConv2dTransformOutputKernel&lt;TOut, OutputTileRows, OutputTileCols, KernelRows, KernelCols&gt;</a>;</div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;};</div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;</div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;} <span class="comment">// namespace cpu</span></div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;} <span class="comment">// namespace arm_compute</span></div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/*ARM_COMPUTE_CPUWINOGRADCONV2DKERNEL_H*/</span><span class="preprocessor"></span></div><div class="ttc" id="classarm__compute_1_1_i_kernel_xhtml_ad34a46f53686c12a5c5e717cc9617fb6"><div class="ttname"><a href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">arm_compute::IKernel::window</a></div><div class="ttdeci">const Window &amp; window() const</div><div class="ttdoc">The maximum window the kernel can be executed on. </div><div class="ttdef"><b>Definition:</b> <a href="_i_kernel_8cpp_source.xhtml#l00028">IKernel.cpp:28</a></div></div>
<div class="ttc" id="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_configuration_xhtml_a1bc75fe67cfd09e90f240a935da92f54"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_configuration.xhtml#a1bc75fe67cfd09e90f240a935da92f54">arm_compute::cpu::CpuWinogradConv2dConfiguration::WinogradBase</a></div><div class="ttdeci">winograd::WinogradGEMM&lt; OutputTileRows, OutputTileCols, KernelRows, KernelCols, winograd::WinogradRoots::Integers &gt; WinogradBase</div><div class="ttdoc">Winograd base kernel. </div><div class="ttdef"><b>Definition:</b> <a href="_cpu_winograd_conv2d_kernel_8h_source.xhtml#l00563">CpuWinogradConv2dKernel.h:563</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_c_p_p_kernel_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_c_p_p_kernel.xhtml">arm_compute::ICPPKernel</a></div><div class="ttdoc">Common interface for all kernels implemented in C++. </div><div class="ttdef"><b>Definition:</b> <a href="_i_c_p_p_kernel_8h_source.xhtml#l00038">ICPPKernel.h:38</a></div></div>
<div class="ttc" id="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_input_kernel_xhtml_a1187b798595c88feeb65d15441a4f72f"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_input_kernel.xhtml#a1187b798595c88feeb65d15441a4f72f">arm_compute::cpu::ICpuWinogradConv2dTransformInputKernel::get_input_storage_size</a></div><div class="ttdeci">virtual unsigned int get_input_storage_size(int num_batches, int num_channels, int num_rows, int num_cols, bool same_padding) const =0</div><div class="ttdoc">Determine how much memory (in units of TIn) to allocate for the transformed input. </div></div>
<div class="ttc" id="structarm__compute_1_1_winograd_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1_winograd_info.xhtml">arm_compute::WinogradInfo</a></div><div class="ttdoc">Winograd information. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l02193">Types.h:2193</a></div></div>
<div class="ttc" id="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_output_kernel_xhtml_a907943778d3a48c934c98d03c0293523"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_output_kernel.xhtml#a907943778d3a48c934c98d03c0293523">arm_compute::cpu::ICpuWinogradConv2dTransformOutputKernel::~ICpuWinogradConv2dTransformOutputKernel</a></div><div class="ttdeci">virtual ~ICpuWinogradConv2dTransformOutputKernel()</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_winograd_conv2d_kernel_8h_source.xhtml#l00296">CpuWinogradConv2dKernel.h:296</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml">arm_compute::ITensorInfo</a></div><div class="ttdoc">Store the tensor&amp;#39;s metadata. </div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_info_8h_source.xhtml#l00040">ITensorInfo.h:40</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_c_p_p_kernel_xhtml_a6b8ef149ef3b6ca5e548473916f95cd6"><div class="ttname"><a href="classarm__compute_1_1_i_c_p_p_kernel.xhtml#a6b8ef149ef3b6ca5e548473916f95cd6">arm_compute::ICPPKernel::run_op</a></div><div class="ttdeci">virtual void run_op(ITensorPack &amp;tensors, const Window &amp;window, const ThreadInfo &amp;info)</div><div class="ttdoc">Execute the kernel on the passed window. </div><div class="ttdef"><b>Definition:</b> <a href="_i_c_p_p_kernel_8h_source.xhtml#l00089">ICPPKernel.h:89</a></div></div>
<div class="ttc" id="classarm__compute_1_1_status_xhtml"><div class="ttname"><a href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a></div><div class="ttdoc">Status class. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00052">Error.h:52</a></div></div>
<div class="ttc" id="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_output_kernel_xhtml_ab5656bb5b6334bdbe6e606c715872828"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_output_kernel.xhtml#ab5656bb5b6334bdbe6e606c715872828">arm_compute::cpu::CpuWinogradConv2dTransformOutputKernel::name</a></div><div class="ttdeci">const char * name() const override</div><div class="ttdoc">Name of the kernel. </div><div class="ttdef"><b>Definition:</b> <a href="_cpu_winograd_conv2d_kernel_8h_source.xhtml#l00306">CpuWinogradConv2dKernel.h:306</a></div></div>
<div class="ttc" id="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_input_kernel_xhtml_ab5656bb5b6334bdbe6e606c715872828"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_input_kernel.xhtml#ab5656bb5b6334bdbe6e606c715872828">arm_compute::cpu::CpuWinogradConv2dTransformInputKernel::name</a></div><div class="ttdeci">const char * name() const override</div><div class="ttdoc">Name of the kernel. </div><div class="ttdef"><b>Definition:</b> <a href="_cpu_winograd_conv2d_kernel_8h_source.xhtml#l00164">CpuWinogradConv2dKernel.h:164</a></div></div>
<div class="ttc" id="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_input_kernel_xhtml_a3a2096918e6e3789f8f5883efd4c9563"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_input_kernel.xhtml#a3a2096918e6e3789f8f5883efd4c9563">arm_compute::cpu::ICpuWinogradConv2dTransformInputKernel::configure</a></div><div class="ttdeci">virtual void configure(const ITensorInfo *input_nhwc, const int num_batches, const int num_rows, const int num_cols, const int num_channels, const PaddingType padding, ITensorInfo *output, const int matrix_stride, ITensorInfo *workspace)=0</div><div class="ttdoc">Configure the output transform kernel. </div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2021 Arm Limited. </div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a8fcf2ddd9a1d58b1b280f5c0aed71845"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">arm_compute::test::validation::input</a></div><div class="ttdeci">auto input</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00486">LSTMLayerQuantized.cpp:486</a></div></div>
<div class="ttc" id="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_input_kernel_xhtml_af17b2792d63e38a0eea385635191e836"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_input_kernel.xhtml#af17b2792d63e38a0eea385635191e836">arm_compute::cpu::CpuWinogradConv2dTransformInputKernel::WinogradConv</a></div><div class="ttdeci">typename WinogradBase::template Convolution&lt; T, T &gt; WinogradConv</div><div class="ttdoc">Winograd convolution kernel. </div><div class="ttdef"><b>Definition:</b> <a href="_cpu_winograd_conv2d_kernel_8h_source.xhtml#l00198">CpuWinogradConv2dKernel.h:198</a></div></div>
<div class="ttc" id="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel_xhtml_ae4a40fc825c6741cd99c171544a6eda3"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel.xhtml#ae4a40fc825c6741cd99c171544a6eda3">arm_compute::cpu::ICpuWinogradConv2dTransformWeightsKernel::~ICpuWinogradConv2dTransformWeightsKernel</a></div><div class="ttdeci">virtual ~ICpuWinogradConv2dTransformWeightsKernel()</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_winograd_conv2d_kernel_8h_source.xhtml#l00436">CpuWinogradConv2dKernel.h:436</a></div></div>
<div class="ttc" id="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_weights_kernel_xhtml"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_weights_kernel.xhtml">arm_compute::cpu::CpuWinogradConv2dTransformWeightsKernel</a></div><div class="ttdoc">Kernel to perform Winograd weights transform. </div><div class="ttdef"><b>Definition:</b> <a href="_cpu_winograd_conv2d_kernel_8h_source.xhtml#l00480">CpuWinogradConv2dKernel.h:480</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_kernel_xhtml_a0466ee6ce6552c87595f0e88e73eeb1b"><div class="ttname"><a href="classarm__compute_1_1_i_kernel.xhtml#a0466ee6ce6552c87595f0e88e73eeb1b">arm_compute::IKernel::is_parallelisable</a></div><div class="ttdeci">virtual bool is_parallelisable() const</div><div class="ttdoc">Indicates whether or not the kernel is parallelisable. </div><div class="ttdef"><b>Definition:</b> <a href="_i_kernel_8cpp_source.xhtml#l00041">IKernel.cpp:41</a></div></div>
<div class="ttc" id="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_configuration_xhtml_acd8461f7d784d4c09b73447f357e6b1a"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_configuration.xhtml#acd8461f7d784d4c09b73447f357e6b1a">arm_compute::cpu::CpuWinogradConv2dConfiguration::WinogradConv</a></div><div class="ttdeci">typename WinogradBase::template Convolution&lt; TIn, TOut &gt; WinogradConv</div><div class="ttdoc">Winograd convolution kernel. </div><div class="ttdef"><b>Definition:</b> <a href="_cpu_winograd_conv2d_kernel_8h_source.xhtml#l00566">CpuWinogradConv2dKernel.h:566</a></div></div>
<div class="ttc" id="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_input_kernel_xhtml_aab3f5d8ea8dc80c21438141511b8a92d"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_input_kernel.xhtml#aab3f5d8ea8dc80c21438141511b8a92d">arm_compute::cpu::ICpuWinogradConv2dTransformInputKernel::get_matrix_stride</a></div><div class="ttdeci">virtual int get_matrix_stride(int num_batches, int num_channels, int num_rows, int num_cols, bool same_padding) const =0</div><div class="ttdoc">Gets the stride between matrices in the input worspace. </div></div>
<div class="ttc" id="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_input_kernel_xhtml_a2266ed380c381e1eb0abeb61a0c3a82a"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_input_kernel.xhtml#a2266ed380c381e1eb0abeb61a0c3a82a">arm_compute::cpu::ICpuWinogradConv2dTransformInputKernel::~ICpuWinogradConv2dTransformInputKernel</a></div><div class="ttdeci">virtual ~ICpuWinogradConv2dTransformInputKernel()</div><div class="ttdoc">Destructor. </div><div class="ttdef"><b>Definition:</b> <a href="_cpu_winograd_conv2d_kernel_8h_source.xhtml#l00093">CpuWinogradConv2dKernel.h:93</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_ac57b92957968088a392021cac1d2076b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">arm_compute::test::validation::info</a></div><div class="ttdeci">ScaleKernelInfo info(interpolation_policy, default_border_mode, PixelValue(), sampling_policy, false)</div></div>
<div class="ttc" id="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_configuration_xhtml"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_configuration.xhtml">arm_compute::cpu::CpuWinogradConv2dConfiguration</a></div><div class="ttdoc">Kernel to perform Winograd. </div><div class="ttdef"><b>Definition:</b> <a href="_cpu_winograd_conv2d_kernel_8h_source.xhtml#l00559">CpuWinogradConv2dKernel.h:559</a></div></div>
<div class="ttc" id="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_input_kernel_xhtml"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_input_kernel.xhtml">arm_compute::cpu::ICpuWinogradConv2dTransformInputKernel</a></div><div class="ttdoc">Interface for the kernel to perform Winograd input transform. </div><div class="ttdef"><b>Definition:</b> <a href="_cpu_winograd_conv2d_kernel_8h_source.xhtml#l00038">CpuWinogradConv2dKernel.h:38</a></div></div>
<div class="ttc" id="structarm__compute_1_1_thread_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1_thread_info.xhtml">arm_compute::ThreadInfo</a></div><div class="ttdoc">Information about executing thread and CPU. </div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_types_8h_source.xhtml#l00158">CPPTypes.h:158</a></div></div>
<div class="ttc" id="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_input_kernel_xhtml"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_input_kernel.xhtml">arm_compute::cpu::CpuWinogradConv2dTransformInputKernel</a></div><div class="ttdoc">Kernel to perform Winograd input transform. </div><div class="ttdef"><b>Definition:</b> <a href="_cpu_winograd_conv2d_kernel_8h_source.xhtml#l00100">CpuWinogradConv2dKernel.h:100</a></div></div>
<div class="ttc" id="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_input_kernel_xhtml_adf88b409a140a439b6e5479da2f4cb1f"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_input_kernel.xhtml#adf88b409a140a439b6e5479da2f4cb1f">arm_compute::cpu::ICpuWinogradConv2dTransformInputKernel::get_working_space_size</a></div><div class="ttdeci">virtual unsigned int get_working_space_size(unsigned int num_threads) const =0</div><div class="ttdoc">Get the working space required to perform the transformation. </div></div>
<div class="ttc" id="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_output_kernel_xhtml"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_output_kernel.xhtml">arm_compute::cpu::CpuWinogradConv2dTransformOutputKernel</a></div><div class="ttdoc">Kernel to perform Winograd output transform. </div><div class="ttdef"><b>Definition:</b> <a href="_cpu_winograd_conv2d_kernel_8h_source.xhtml#l00303">CpuWinogradConv2dKernel.h:303</a></div></div>
<div class="ttc" id="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_weights_kernel_xhtml_ab5656bb5b6334bdbe6e606c715872828"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_weights_kernel.xhtml#ab5656bb5b6334bdbe6e606c715872828">arm_compute::cpu::CpuWinogradConv2dTransformWeightsKernel::name</a></div><div class="ttdeci">const char * name() const override</div><div class="ttdoc">Name of the kernel. </div><div class="ttdef"><b>Definition:</b> <a href="_cpu_winograd_conv2d_kernel_8h_source.xhtml#l00496">CpuWinogradConv2dKernel.h:496</a></div></div>
<div class="ttc" id="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_output_kernel_xhtml"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_output_kernel.xhtml">arm_compute::cpu::ICpuWinogradConv2dTransformOutputKernel</a></div><div class="ttdoc">Interface for the kernel to perform Winograd output transform. </div><div class="ttdef"><b>Definition:</b> <a href="_cpu_winograd_conv2d_kernel_8h_source.xhtml#l00219">CpuWinogradConv2dKernel.h:219</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_pack_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_pack.xhtml">arm_compute::ITensorPack</a></div><div class="ttdoc">Tensor packing service. </div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_pack_8h_source.xhtml#l00039">ITensorPack.h:39</a></div></div>
<div class="ttc" id="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_input_kernel_xhtml_a1bc75fe67cfd09e90f240a935da92f54"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_input_kernel.xhtml#a1bc75fe67cfd09e90f240a935da92f54">arm_compute::cpu::CpuWinogradConv2dTransformInputKernel::WinogradBase</a></div><div class="ttdeci">winograd::WinogradGEMM&lt; OutputTileRows, OutputTileCols, KernelRows, KernelCols, winograd::WinogradRoots::Integers &gt; WinogradBase</div><div class="ttdoc">Winograd base kernel. </div><div class="ttdef"><b>Definition:</b> <a href="_cpu_winograd_conv2d_kernel_8h_source.xhtml#l00196">CpuWinogradConv2dKernel.h:196</a></div></div>
<div class="ttc" id="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel_xhtml"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel.xhtml">arm_compute::cpu::ICpuWinogradConv2dTransformWeightsKernel</a></div><div class="ttdoc">Interface for the kernel to perform Winograd weights transform. </div><div class="ttdef"><b>Definition:</b> <a href="_cpu_winograd_conv2d_kernel_8h_source.xhtml#l00421">CpuWinogradConv2dKernel.h:421</a></div></div>
<div class="ttc" id="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel_xhtml_a6cf5d37e43adc9c391b50e52c3b4a8d4"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_i_cpu_winograd_conv2d_transform_weights_kernel.xhtml#a6cf5d37e43adc9c391b50e52c3b4a8d4">arm_compute::cpu::ICpuWinogradConv2dTransformWeightsKernel::ICpuWinogradConv2dTransformWeightsKernel</a></div><div class="ttdeci">ICpuWinogradConv2dTransformWeightsKernel()</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_winograd_conv2d_kernel_8h_source.xhtml#l00433">CpuWinogradConv2dKernel.h:433</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml">arm_compute::Window</a></div><div class="ttdoc">Describe a multidimensional execution window. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00039">Window.h:39</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a4feaaa70771629f4b5dcf3b219c8b647"><div class="ttname"><a href="namespacearm__compute.xhtml#a4feaaa70771629f4b5dcf3b219c8b647">arm_compute::validate</a></div><div class="ttdeci">Status validate(const ITensorInfo *scores_in, const ITensorInfo *boxes_in, const ITensorInfo *batch_splits_in, const ITensorInfo *scores_out, const ITensorInfo *boxes_out, const ITensorInfo *classes, const ITensorInfo *batch_splits_out, const ITensorInfo *keeps, const ITensorInfo *keeps_size, const BoxNMSLimitInfo info)</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_box_with_non_maxima_suppression_limit_8cpp_source.xhtml#l00214">CPPBoxWithNonMaximaSuppressionLimit.cpp:214</a></div></div>
<div class="ttc" id="structarm__gemm_1_1_activation_xhtml"><div class="ttname"><a href="structarm__gemm_1_1_activation.xhtml">arm_gemm::Activation</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__gemm_8hpp_source.xhtml#l00082">arm_gemm.hpp:82</a></div></div>
<div class="ttc" id="_i_cpu_kernel_8h_xhtml"><div class="ttname"><a href="_i_cpu_kernel_8h.xhtml">ICpuKernel.h</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_2c61f424fd391396db977702a2beee9a.xhtml">cpu</a></li><li class="navelem"><a class="el" href="dir_1de7bcbbdec2bf3559cb3c688662d4f5.xhtml">kernels</a></li><li class="navelem"><a class="el" href="_cpu_winograd_conv2d_kernel_8h.xhtml">CpuWinogradConv2dKernel.h</a></li>
    <li class="footer">Generated on Mon Nov 15 2021 14:44:26 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
