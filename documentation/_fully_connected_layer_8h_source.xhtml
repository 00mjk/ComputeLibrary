<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: tests/benchmark/common/FullyConnectedLayer.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Compute Library
   &#160;<span id="projectnumber">v17.06</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>Globals</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_fully_connected_layer_8h_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">FullyConnectedLayer.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_fully_connected_layer_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2017 ARM Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef __ARM_COMPUTE_TEST_BENCHMARK_FULLYCONNECTED_LAYER_H__</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define __ARM_COMPUTE_TEST_BENCHMARK_FULLYCONNECTED_LAYER_H__</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_tensor_library_8h.xhtml">TensorLibrary.h</a>&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;Utils.h&quot;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_convolution_layer_dataset_8h.xhtml">dataset/ConvolutionLayerDataset.h</a>&quot;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &lt;memory&gt;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a>;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacearm__compute_1_1test.xhtml">arm_compute::test</a>;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacearm__compute_1_1test_1_1benchmark.xhtml">arm_compute::test::benchmark</a>;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;{</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">namespace </span>test</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;{</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keyword">namespace </span>benchmark</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;{</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> DataSet, <span class="keyword">typename</span> TensorType, <span class="keyword">typename</span> Accessor, <span class="keyword">typename</span> Function, DataType dt = DataType::F32&gt;</div><div class="line"><a name="l00045"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1benchmark_1_1_fully_connected_layer.xhtml">   45</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1test_1_1benchmark_1_1_fully_connected_layer.xhtml">FullyConnectedLayer</a> : <span class="keyword">public</span> ::benchmark::Fixture</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;{</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00048"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1benchmark_1_1_fully_connected_layer.xhtml#afefeb9fe1555964776400f2ef0c619ce">   48</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1benchmark_1_1_fully_connected_layer.xhtml#afefeb9fe1555964776400f2ef0c619ce">SetUp</a>(::benchmark::State &amp;<a class="code" href="benchmark_2_c_l_2_activation_layer_8cpp.xhtml#a7ff4fc3bbf305206c6f2b97d4e6681a0">state</a>)<span class="keyword"> override</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;        profiler.add(std::make_shared&lt;WallClockTimer&gt;());</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1test_1_1_fully_connected_layer_data_object.xhtml">FullyConnectedLayerDataObject</a> fc_obj = *(DataSet().begin() + state.range(0));</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        <span class="comment">// Set batched in source and destination shapes</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> batches              = state.range(1);</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> fixed_point_position = 4;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>        src_shape            = fc_obj.<a class="code" href="classarm__compute_1_1test_1_1_fully_connected_layer_data_object.xhtml#a1657d54add914f1cb9de70d569c56032">src_shape</a>;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>        dst_shape            = fc_obj.<a class="code" href="classarm__compute_1_1test_1_1_fully_connected_layer_data_object.xhtml#ad8f82f8e286d9360a6325ba3de549a93">dst_shape</a>;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        src_shape.<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml#a0cb0e1f5da2e1cc2e0ea5690450f53e8">set</a>(src_shape.<a class="code" href="classarm__compute_1_1_dimensions.xhtml#a0f59f175e7682c7ed5f4ea30ef687834">num_dimensions</a>(), batches);</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        dst_shape.<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml#a0cb0e1f5da2e1cc2e0ea5690450f53e8">set</a>(dst_shape.<a class="code" href="classarm__compute_1_1_dimensions.xhtml#a0f59f175e7682c7ed5f4ea30ef687834">num_dimensions</a>(), batches);</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        <span class="comment">// Create tensors</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        src     = <a class="code" href="namespacearm__compute_1_1test_1_1cl.xhtml#a6feffffa9821246ed8ac8fe7d633df57">create_tensor</a>(src_shape, dt, 1, fixed_point_position);</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        weights = <a class="code" href="namespacearm__compute_1_1test_1_1cl.xhtml#a6feffffa9821246ed8ac8fe7d633df57">create_tensor</a>(fc_obj.<a class="code" href="classarm__compute_1_1test_1_1_fully_connected_layer_data_object.xhtml#a639a4b038a3685eb058e33cb95385212">weights_shape</a>, dt, 1, fixed_point_position);</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        bias    = <a class="code" href="namespacearm__compute_1_1test_1_1cl.xhtml#a6feffffa9821246ed8ac8fe7d633df57">create_tensor</a>(fc_obj.<a class="code" href="classarm__compute_1_1test_1_1_fully_connected_layer_data_object.xhtml#a79820c7442073b8eb22fb3eaef6fd6ba">bias_shape</a>, dt, 1, fixed_point_position);</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        dst     = <a class="code" href="namespacearm__compute_1_1test_1_1cl.xhtml#a6feffffa9821246ed8ac8fe7d633df57">create_tensor</a>(dst_shape, dt, 1, fixed_point_position);</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        <span class="comment">// Create and configure function</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        fc_layer = std::unique_ptr&lt;Function&gt;(<span class="keyword">new</span> Function());</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        fc_layer-&gt;configure(&amp;src, &amp;weights, &amp;bias, &amp;dst);</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        <span class="comment">// Allocate tensors</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        src.allocator()-&gt;allocate();</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        weights.allocator()-&gt;allocate();</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        bias.allocator()-&gt;allocate();</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        dst.allocator()-&gt;allocate();</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        <span class="comment">// Fill tensors</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        <a class="code" href="namespacearm__compute_1_1test.xhtml#a4ced6442a379a75e8a6c4be093fb666b">library</a>-&gt;fill_tensor_uniform(Accessor(src), 0);</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        <a class="code" href="namespacearm__compute_1_1test.xhtml#a4ced6442a379a75e8a6c4be093fb666b">library</a>-&gt;fill_tensor_uniform(Accessor(weights), 1);</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        <a class="code" href="namespacearm__compute_1_1test.xhtml#a4ced6442a379a75e8a6c4be093fb666b">library</a>-&gt;fill_tensor_uniform(Accessor(bias), 2);</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    }</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1benchmark_1_1_fully_connected_layer.xhtml#ab5cddfc86d6a5b91f6dcc6410890d1b6">   84</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1benchmark_1_1_fully_connected_layer.xhtml#ab5cddfc86d6a5b91f6dcc6410890d1b6">TearDown</a>(::benchmark::State &amp;<a class="code" href="benchmark_2_c_l_2_activation_layer_8cpp.xhtml#a7ff4fc3bbf305206c6f2b97d4e6681a0">state</a>)<span class="keyword"> override</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        fc_layer.reset();</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        src.allocator()-&gt;free();</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        weights.allocator()-&gt;free();</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        bias.allocator()-&gt;free();</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        dst.allocator()-&gt;free();</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        profiler.submit(state);</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    }</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1benchmark_1_1_fully_connected_layer.xhtml#aef95e5f9152f736f58d6de6f5890a75f">   96</a></span>&#160;    std::unique_ptr&lt;Function&gt; fc_layer{ <span class="keyword">nullptr</span> };</div><div class="line"><a name="l00097"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1benchmark_1_1_fully_connected_layer.xhtml#a776ac8deaafd98dedc2c146058762923">   97</a></span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1benchmark_1_1_profiler.xhtml">Profiler</a>                  profiler{};</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    TensorType src{};</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    TensorType weights{};</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    TensorType bias{};</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    TensorType dst{};</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;};</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;} <span class="comment">// namespace benchmark</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;} <span class="comment">// namespace test</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;} <span class="comment">// namespace arm_compute</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="preprocessor">#endif //__ARM_COMPUTE_TEST_BENCHMARK_FULLYCONNECTED_LAYER_H__</span></div><div class="ttc" id="classarm__compute_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarm__compute_1_1_tensor_shape.xhtml">arm_compute::TensorShape</a></div><div class="ttdoc">Shape of a tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_shape_8h_source.xhtml#l00038">TensorShape.h:38</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1_fully_connected_layer_data_object_xhtml_a1657d54add914f1cb9de70d569c56032"><div class="ttname"><a href="classarm__compute_1_1test_1_1_fully_connected_layer_data_object.xhtml#a1657d54add914f1cb9de70d569c56032">arm_compute::test::FullyConnectedLayerDataObject::src_shape</a></div><div class="ttdeci">TensorShape src_shape</div><div class="ttdef"><b>Definition:</b> <a href="_fully_connected_layer_dataset_8h_source.xhtml#l00062">FullyConnectedLayerDataset.h:62</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_xhtml"><div class="ttname"><a href="namespacearm__compute_1_1test.xhtml">arm_compute::test</a></div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_g_e_m_m_8h_source.xhtml#l00039">GEMM.h:39</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1benchmark_xhtml"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1benchmark.xhtml">arm_compute::test::benchmark</a></div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_g_e_m_m_8h_source.xhtml#l00041">GEMM.h:41</a></div></div>
<div class="ttc" id="_tensor_library_8h_xhtml"><div class="ttname"><a href="_tensor_library_8h.xhtml">TensorLibrary.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdef"><b>Definition:</b> <a href="01__library_8dox_source.xhtml#l00001">01_library.dox:1</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1benchmark_1_1_fully_connected_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1benchmark_1_1_fully_connected_layer.xhtml">arm_compute::test::benchmark::FullyConnectedLayer</a></div><div class="ttdef"><b>Definition:</b> <a href="_fully_connected_layer_8h_source.xhtml#l00045">FullyConnectedLayer.h:45</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1_fully_connected_layer_data_object_xhtml_ad8f82f8e286d9360a6325ba3de549a93"><div class="ttname"><a href="classarm__compute_1_1test_1_1_fully_connected_layer_data_object.xhtml#ad8f82f8e286d9360a6325ba3de549a93">arm_compute::test::FullyConnectedLayerDataObject::dst_shape</a></div><div class="ttdeci">TensorShape dst_shape</div><div class="ttdef"><b>Definition:</b> <a href="_fully_connected_layer_dataset_8h_source.xhtml#l00065">FullyConnectedLayerDataset.h:65</a></div></div>
<div class="ttc" id="benchmark_2_c_l_2_activation_layer_8cpp_xhtml_a7ff4fc3bbf305206c6f2b97d4e6681a0"><div class="ttname"><a href="benchmark_2_c_l_2_activation_layer_8cpp.xhtml#a7ff4fc3bbf305206c6f2b97d4e6681a0">state</a></div><div class="ttdeci">::benchmark::State &amp; state</div><div class="ttdef"><b>Definition:</b> <a href="benchmark_2_c_l_2_activation_layer_8cpp_source.xhtml#l00057">ActivationLayer.cpp:57</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_shape_xhtml_a0cb0e1f5da2e1cc2e0ea5690450f53e8"><div class="ttname"><a href="classarm__compute_1_1_tensor_shape.xhtml#a0cb0e1f5da2e1cc2e0ea5690450f53e8">arm_compute::TensorShape::set</a></div><div class="ttdeci">void set(size_t dimension, size_t value)</div><div class="ttdoc">Accessor to set the value of one of the dimensions. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_shape_8h_source.xhtml#l00074">TensorShape.h:74</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1_fully_connected_layer_data_object_xhtml_a639a4b038a3685eb058e33cb95385212"><div class="ttname"><a href="classarm__compute_1_1test_1_1_fully_connected_layer_data_object.xhtml#a639a4b038a3685eb058e33cb95385212">arm_compute::test::FullyConnectedLayerDataObject::weights_shape</a></div><div class="ttdeci">TensorShape weights_shape</div><div class="ttdef"><b>Definition:</b> <a href="_fully_connected_layer_dataset_8h_source.xhtml#l00063">FullyConnectedLayerDataset.h:63</a></div></div>
<div class="ttc" id="_convolution_layer_dataset_8h_xhtml"><div class="ttname"><a href="_convolution_layer_dataset_8h.xhtml">ConvolutionLayerDataset.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1benchmark_1_1_fully_connected_layer_xhtml_afefeb9fe1555964776400f2ef0c619ce"><div class="ttname"><a href="classarm__compute_1_1test_1_1benchmark_1_1_fully_connected_layer.xhtml#afefeb9fe1555964776400f2ef0c619ce">arm_compute::test::benchmark::FullyConnectedLayer::SetUp</a></div><div class="ttdeci">void SetUp(::benchmark::State &amp;state) override</div><div class="ttdef"><b>Definition:</b> <a href="_fully_connected_layer_8h_source.xhtml#l00048">FullyConnectedLayer.h:48</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1benchmark_1_1_profiler_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1benchmark_1_1_profiler.xhtml">arm_compute::test::benchmark::Profiler</a></div><div class="ttdef"><b>Definition:</b> <a href="_profiler_8h_source.xhtml#l00042">Profiler.h:42</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1benchmark_1_1_fully_connected_layer_xhtml_ab5cddfc86d6a5b91f6dcc6410890d1b6"><div class="ttname"><a href="classarm__compute_1_1test_1_1benchmark_1_1_fully_connected_layer.xhtml#ab5cddfc86d6a5b91f6dcc6410890d1b6">arm_compute::test::benchmark::FullyConnectedLayer::TearDown</a></div><div class="ttdeci">void TearDown(::benchmark::State &amp;state) override</div><div class="ttdef"><b>Definition:</b> <a href="_fully_connected_layer_8h_source.xhtml#l00084">FullyConnectedLayer.h:84</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_xhtml_a4ced6442a379a75e8a6c4be093fb666b"><div class="ttname"><a href="namespacearm__compute_1_1test.xhtml#a4ced6442a379a75e8a6c4be093fb666b">arm_compute::test::library</a></div><div class="ttdeci">std::unique_ptr&lt; TensorLibrary &gt; library</div><div class="ttdef"><b>Definition:</b> <a href="benchmark_2main_8cpp_source.xhtml#l00050">main.cpp:50</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1cl_xhtml_a6feffffa9821246ed8ac8fe7d633df57"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1cl.xhtml#a6feffffa9821246ed8ac8fe7d633df57">arm_compute::test::cl::create_tensor</a></div><div class="ttdeci">CLTensor create_tensor(const TensorShape &amp;shape, DataType data_type, int num_channels=1, int fixed_point_position=0)</div><div class="ttdoc">Helper to create an empty tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_helper_8h_source.xhtml#l00047">Helper.h:47</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1_fully_connected_layer_data_object_xhtml_a79820c7442073b8eb22fb3eaef6fd6ba"><div class="ttname"><a href="classarm__compute_1_1test_1_1_fully_connected_layer_data_object.xhtml#a79820c7442073b8eb22fb3eaef6fd6ba">arm_compute::test::FullyConnectedLayerDataObject::bias_shape</a></div><div class="ttdeci">TensorShape bias_shape</div><div class="ttdef"><b>Definition:</b> <a href="_fully_connected_layer_dataset_8h_source.xhtml#l00064">FullyConnectedLayerDataset.h:64</a></div></div>
<div class="ttc" id="classarm__compute_1_1_dimensions_xhtml_a0f59f175e7682c7ed5f4ea30ef687834"><div class="ttname"><a href="classarm__compute_1_1_dimensions.xhtml#a0f59f175e7682c7ed5f4ea30ef687834">arm_compute::Dimensions::num_dimensions</a></div><div class="ttdeci">unsigned int num_dimensions() const </div><div class="ttdoc">Returns the effective dimensionality of the tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_dimensions_8h_source.xhtml#l00109">Dimensions.h:109</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1_fully_connected_layer_data_object_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1_fully_connected_layer_data_object.xhtml">arm_compute::test::FullyConnectedLayerDataObject</a></div><div class="ttdef"><b>Definition:</b> <a href="_fully_connected_layer_dataset_8h_source.xhtml#l00043">FullyConnectedLayerDataset.h:43</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_59425e443f801f1f2fd8bbe4959a3ccf.xhtml">tests</a></li><li class="navelem"><a class="el" href="dir_4f2df8950dc650bf7cf9176fae02facc.xhtml">benchmark</a></li><li class="navelem"><a class="el" href="dir_e384de53230b0fb8812f7ca98fdb0e65.xhtml">common</a></li><li class="navelem"><a class="el" href="_fully_connected_layer_8h.xhtml">FullyConnectedLayer.h</a></li>
    <li class="footer">Generated on Fri Jun 23 2017 15:44:33 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
