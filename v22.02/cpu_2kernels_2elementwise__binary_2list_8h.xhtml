<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/cpu/kernels/elementwise_binary/list.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('cpu_2kernels_2elementwise__binary_2list_8h.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#namespaces">Namespaces</a> &#124;
<a href="#define-members">Macros</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">list.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><a href="cpu_2kernels_2elementwise__binary_2list_8h_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespacearm__compute"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></td></tr>
<tr class="memdesc:namespacearm__compute"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copyright (c) 2017-2021 Arm Limited. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacearm__compute_1_1cpu"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1cpu.xhtml">arm_compute::cpu</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:a686cef988364af17fa598bfebb2b5906"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="cpu_2kernels_2elementwise__binary_2list_8h.xhtml#a686cef988364af17fa598bfebb2b5906">DECLARE_ELEMETWISE_BINARY_KERNEL</a>(func_name)</td></tr>
<tr class="separator:a686cef988364af17fa598bfebb2b5906"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a203e70ca02319f5a11035e9a6476c792"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="cpu_2kernels_2elementwise__binary_2list_8h.xhtml#a203e70ca02319f5a11035e9a6476c792">DECLARE_COPMP_ELEMETWISE_BINARY_KERNEL</a>(func_name)</td></tr>
<tr class="separator:a203e70ca02319f5a11035e9a6476c792"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:abf9bcd0a1f73fa33944c7bd4d12041cd"><td class="memTemplParams" colspan="2">template&lt;ArithmeticOperation op&gt; </td></tr>
<tr class="memitem:abf9bcd0a1f73fa33944c7bd4d12041cd"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1cpu.xhtml#abf9bcd0a1f73fa33944c7bd4d12041cd">sve_fp16_elementwise_binary</a> (const ITensor *in1, const ITensor *in2, ITensor *out, const Window &amp;window)</td></tr>
<tr class="separator:abf9bcd0a1f73fa33944c7bd4d12041cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a69218d90274a4655ef075f579cb6abf3"><td class="memTemplParams" colspan="2">template&lt;ArithmeticOperation op&gt; </td></tr>
<tr class="memitem:a69218d90274a4655ef075f579cb6abf3"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1cpu.xhtml#a69218d90274a4655ef075f579cb6abf3">sve_fp32_elementwise_binary</a> (const ITensor *in1, const ITensor *in2, ITensor *out, const Window &amp;window)</td></tr>
<tr class="separator:a69218d90274a4655ef075f579cb6abf3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe471e18aa9fece87883a8fa527e869d"><td class="memTemplParams" colspan="2">template&lt;ArithmeticOperation op&gt; </td></tr>
<tr class="memitem:abe471e18aa9fece87883a8fa527e869d"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1cpu.xhtml#abe471e18aa9fece87883a8fa527e869d">sve_s32_elementwise_binary</a> (const ITensor *in1, const ITensor *in2, ITensor *out, const Window &amp;window)</td></tr>
<tr class="separator:abe471e18aa9fece87883a8fa527e869d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8075116a82e004a9994d9eb37714373b"><td class="memTemplParams" colspan="2">template&lt;ArithmeticOperation op&gt; </td></tr>
<tr class="memitem:a8075116a82e004a9994d9eb37714373b"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1cpu.xhtml#a8075116a82e004a9994d9eb37714373b">sve_s16_elementwise_binary</a> (const ITensor *in1, const ITensor *in2, ITensor *out, const Window &amp;window)</td></tr>
<tr class="separator:a8075116a82e004a9994d9eb37714373b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe7e4517cbdcf9ac5a79c7772c10c0d7"><td class="memTemplParams" colspan="2">template&lt;ArithmeticOperation op&gt; </td></tr>
<tr class="memitem:afe7e4517cbdcf9ac5a79c7772c10c0d7"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1cpu.xhtml#afe7e4517cbdcf9ac5a79c7772c10c0d7">sve2_qasymm8_signed_elementwise_binary</a> (const ITensor *in1, const ITensor *in2, ITensor *out, const Window &amp;window)</td></tr>
<tr class="separator:afe7e4517cbdcf9ac5a79c7772c10c0d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0e8037cde30310b38c3987c2584b0d62"><td class="memTemplParams" colspan="2">template&lt;ArithmeticOperation op&gt; </td></tr>
<tr class="memitem:a0e8037cde30310b38c3987c2584b0d62"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1cpu.xhtml#a0e8037cde30310b38c3987c2584b0d62">sve2_qasymm8_elementwise_binary</a> (const ITensor *in1, const ITensor *in2, ITensor *out, const Window &amp;window)</td></tr>
<tr class="separator:a0e8037cde30310b38c3987c2584b0d62"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8ec4688c02d3bdc86bdaa5989e723acc"><td class="memTemplParams" colspan="2">template&lt;ArithmeticOperation op&gt; </td></tr>
<tr class="memitem:a8ec4688c02d3bdc86bdaa5989e723acc"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1cpu.xhtml#a8ec4688c02d3bdc86bdaa5989e723acc">neon_qasymm8_signed_elementwise_binary</a> (const ITensor *in1, const ITensor *in2, ITensor *out, const Window &amp;window)</td></tr>
<tr class="separator:a8ec4688c02d3bdc86bdaa5989e723acc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a5b347d0d1e809d9aa97f3a3dac8183"><td class="memTemplParams" colspan="2">template&lt;ArithmeticOperation op&gt; </td></tr>
<tr class="memitem:a6a5b347d0d1e809d9aa97f3a3dac8183"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1cpu.xhtml#a6a5b347d0d1e809d9aa97f3a3dac8183">neon_qasymm8_elementwise_binary</a> (const ITensor *in1, const ITensor *in2, ITensor *out, const Window &amp;window)</td></tr>
<tr class="separator:a6a5b347d0d1e809d9aa97f3a3dac8183"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec756ab02c2d2e38049647d281398743"><td class="memTemplParams" colspan="2">template&lt;ArithmeticOperation op&gt; </td></tr>
<tr class="memitem:aec756ab02c2d2e38049647d281398743"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1cpu.xhtml#aec756ab02c2d2e38049647d281398743">neon_fp16_elementwise_binary</a> (const ITensor *in1, const ITensor *in2, ITensor *out, const Window &amp;window)</td></tr>
<tr class="separator:aec756ab02c2d2e38049647d281398743"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af8909d1c05d50e28f4d52c6ddfbb06d4"><td class="memTemplParams" colspan="2">template&lt;ArithmeticOperation op&gt; </td></tr>
<tr class="memitem:af8909d1c05d50e28f4d52c6ddfbb06d4"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1cpu.xhtml#af8909d1c05d50e28f4d52c6ddfbb06d4">neon_fp32_elementwise_binary</a> (const ITensor *in1, const ITensor *in2, ITensor *out, const Window &amp;window)</td></tr>
<tr class="separator:af8909d1c05d50e28f4d52c6ddfbb06d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0469bd9f1f5a4df12bcb7ff3cdbb6a43"><td class="memTemplParams" colspan="2">template&lt;ArithmeticOperation op&gt; </td></tr>
<tr class="memitem:a0469bd9f1f5a4df12bcb7ff3cdbb6a43"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1cpu.xhtml#a0469bd9f1f5a4df12bcb7ff3cdbb6a43">neon_s16_elementwise_binary</a> (const ITensor *in1, const ITensor *in2, ITensor *out, const Window &amp;window)</td></tr>
<tr class="separator:a0469bd9f1f5a4df12bcb7ff3cdbb6a43"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a80f249016dbcc431fa33089ec6fadd4e"><td class="memTemplParams" colspan="2">template&lt;ArithmeticOperation op&gt; </td></tr>
<tr class="memitem:a80f249016dbcc431fa33089ec6fadd4e"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1cpu.xhtml#a80f249016dbcc431fa33089ec6fadd4e">neon_s32_elementwise_binary</a> (const ITensor *in1, const ITensor *in2, ITensor *out, const Window &amp;window)</td></tr>
<tr class="separator:a80f249016dbcc431fa33089ec6fadd4e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4c3dbb5d5517887304cb92438e8f4aa8"><td class="memTemplParams" colspan="2">template&lt;ComparisonOperation op&gt; </td></tr>
<tr class="memitem:a4c3dbb5d5517887304cb92438e8f4aa8"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1cpu.xhtml#a4c3dbb5d5517887304cb92438e8f4aa8">sve_u8_comparison_elementwise_binary</a> (const ITensor *in1, const ITensor *in2, ITensor *out, const Window &amp;window)</td></tr>
<tr class="separator:a4c3dbb5d5517887304cb92438e8f4aa8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abbb171617537b791d4b7d44da746ac7e"><td class="memTemplParams" colspan="2">template&lt;ComparisonOperation op&gt; </td></tr>
<tr class="memitem:abbb171617537b791d4b7d44da746ac7e"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1cpu.xhtml#abbb171617537b791d4b7d44da746ac7e">sve_s16_comparison_elementwise_binary</a> (const ITensor *in1, const ITensor *in2, ITensor *out, const Window &amp;window)</td></tr>
<tr class="separator:abbb171617537b791d4b7d44da746ac7e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af57f10ac2cd05c6fc0ed3721343313be"><td class="memTemplParams" colspan="2">template&lt;ComparisonOperation op&gt; </td></tr>
<tr class="memitem:af57f10ac2cd05c6fc0ed3721343313be"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1cpu.xhtml#af57f10ac2cd05c6fc0ed3721343313be">sve_s32_comparison_elementwise_binary</a> (const ITensor *in1, const ITensor *in2, ITensor *out, const Window &amp;window)</td></tr>
<tr class="separator:af57f10ac2cd05c6fc0ed3721343313be"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a72c4ce52d987a3588654a7a451f42e84"><td class="memTemplParams" colspan="2">template&lt;ComparisonOperation op&gt; </td></tr>
<tr class="memitem:a72c4ce52d987a3588654a7a451f42e84"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1cpu.xhtml#a72c4ce52d987a3588654a7a451f42e84">sve_fp32_comparison_elementwise_binary</a> (const ITensor *in1, const ITensor *in2, ITensor *out, const Window &amp;window)</td></tr>
<tr class="separator:a72c4ce52d987a3588654a7a451f42e84"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7cd05ed6561d49b62c5201be588b2f21"><td class="memTemplParams" colspan="2">template&lt;ComparisonOperation op&gt; </td></tr>
<tr class="memitem:a7cd05ed6561d49b62c5201be588b2f21"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1cpu.xhtml#a7cd05ed6561d49b62c5201be588b2f21">sve_fp16_comparison_elementwise_binary</a> (const ITensor *in1, const ITensor *in2, ITensor *out, const Window &amp;window)</td></tr>
<tr class="separator:a7cd05ed6561d49b62c5201be588b2f21"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa6ae19cd0cee68d5f7aaa23169c704bc"><td class="memTemplParams" colspan="2">template&lt;ComparisonOperation op&gt; </td></tr>
<tr class="memitem:aa6ae19cd0cee68d5f7aaa23169c704bc"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1cpu.xhtml#aa6ae19cd0cee68d5f7aaa23169c704bc">sve2_qasymm8_signed_comparison_elementwise_binary</a> (const ITensor *in1, const ITensor *in2, ITensor *out, const Window &amp;window)</td></tr>
<tr class="separator:aa6ae19cd0cee68d5f7aaa23169c704bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8f986cb88330e699ed7dcb16ec5264d9"><td class="memTemplParams" colspan="2">template&lt;ComparisonOperation op&gt; </td></tr>
<tr class="memitem:a8f986cb88330e699ed7dcb16ec5264d9"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1cpu.xhtml#a8f986cb88330e699ed7dcb16ec5264d9">sve2_qasymm8_comparison_elementwise_binary</a> (const ITensor *in1, const ITensor *in2, ITensor *out, const Window &amp;window)</td></tr>
<tr class="separator:a8f986cb88330e699ed7dcb16ec5264d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac40fc459862ae0050b89550bd76fbcc"><td class="memTemplParams" colspan="2">template&lt;ComparisonOperation op&gt; </td></tr>
<tr class="memitem:aac40fc459862ae0050b89550bd76fbcc"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1cpu.xhtml#aac40fc459862ae0050b89550bd76fbcc">neon_qasymm8_comparison_elementwise_binary</a> (const ITensor *in1, const ITensor *in2, ITensor *out, const Window &amp;window)</td></tr>
<tr class="separator:aac40fc459862ae0050b89550bd76fbcc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac6ebb6108697495178fef6c9ea5e68e3"><td class="memTemplParams" colspan="2">template&lt;ComparisonOperation op&gt; </td></tr>
<tr class="memitem:ac6ebb6108697495178fef6c9ea5e68e3"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1cpu.xhtml#ac6ebb6108697495178fef6c9ea5e68e3">neon_qasymm8_signed_comparison_elementwise_binary</a> (const ITensor *in1, const ITensor *in2, ITensor *out, const Window &amp;window)</td></tr>
<tr class="separator:ac6ebb6108697495178fef6c9ea5e68e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a72684fb557998f19eca6aa52da02d11a"><td class="memTemplParams" colspan="2">template&lt;ComparisonOperation op&gt; </td></tr>
<tr class="memitem:a72684fb557998f19eca6aa52da02d11a"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1cpu.xhtml#a72684fb557998f19eca6aa52da02d11a">neon_fp16_comparison_elementwise_binary</a> (const ITensor *in1, const ITensor *in2, ITensor *out, const Window &amp;window)</td></tr>
<tr class="separator:a72684fb557998f19eca6aa52da02d11a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab11b3f4b86665b08ca8b9fb00e38bb9d"><td class="memTemplParams" colspan="2">template&lt;ComparisonOperation op&gt; </td></tr>
<tr class="memitem:ab11b3f4b86665b08ca8b9fb00e38bb9d"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1cpu.xhtml#ab11b3f4b86665b08ca8b9fb00e38bb9d">neon_u8_comparison_elementwise_binary</a> (const ITensor *in1, const ITensor *in2, ITensor *out, const Window &amp;window)</td></tr>
<tr class="separator:ab11b3f4b86665b08ca8b9fb00e38bb9d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8b0752a4d54894e23581ff38b15aada9"><td class="memTemplParams" colspan="2">template&lt;ComparisonOperation op&gt; </td></tr>
<tr class="memitem:a8b0752a4d54894e23581ff38b15aada9"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1cpu.xhtml#a8b0752a4d54894e23581ff38b15aada9">neon_s16_comparison_elementwise_binary</a> (const ITensor *in1, const ITensor *in2, ITensor *out, const Window &amp;window)</td></tr>
<tr class="separator:a8b0752a4d54894e23581ff38b15aada9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8109015040dabe0728f37ebf7facf3df"><td class="memTemplParams" colspan="2">template&lt;ComparisonOperation op&gt; </td></tr>
<tr class="memitem:a8109015040dabe0728f37ebf7facf3df"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1cpu.xhtml#a8109015040dabe0728f37ebf7facf3df">neon_s32_comparison_elementwise_binary</a> (const ITensor *in1, const ITensor *in2, ITensor *out, const Window &amp;window)</td></tr>
<tr class="separator:a8109015040dabe0728f37ebf7facf3df"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb6ac6d7a2301e053b26d95781db3e44"><td class="memTemplParams" colspan="2">template&lt;ComparisonOperation op&gt; </td></tr>
<tr class="memitem:acb6ac6d7a2301e053b26d95781db3e44"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1cpu.xhtml#acb6ac6d7a2301e053b26d95781db3e44">neon_fp32_comparison_elementwise_binary</a> (const ITensor *in1, const ITensor *in2, ITensor *out, const Window &amp;window)</td></tr>
<tr class="separator:acb6ac6d7a2301e053b26d95781db3e44"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Macro Definition Documentation</h2>
<a id="a203e70ca02319f5a11035e9a6476c792"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a203e70ca02319f5a11035e9a6476c792">&#9670;&nbsp;</a></span>DECLARE_COPMP_ELEMETWISE_BINARY_KERNEL</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define DECLARE_COPMP_ELEMETWISE_BINARY_KERNEL</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">func_name</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line"><span class="keyword">template</span> &lt;ComparisonOperation op&gt;                     \</div><div class="line">    void func_name(<span class="keyword">const</span> ITensor *in1, <span class="keyword">const</span> ITensor *in2, ITensor *out, <span class="keyword">const</span> Window &amp;window)</div></div><!-- fragment -->
<p class="definition">Definition at line <a class="el" href="cpu_2kernels_2elementwise__binary_2list_8h_source.xhtml#l00050">50</a> of file <a class="el" href="cpu_2kernels_2elementwise__binary_2list_8h_source.xhtml">list.h</a>.</p>

</div>
</div>
<a id="a686cef988364af17fa598bfebb2b5906"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a686cef988364af17fa598bfebb2b5906">&#9670;&nbsp;</a></span>DECLARE_ELEMETWISE_BINARY_KERNEL</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define DECLARE_ELEMETWISE_BINARY_KERNEL</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">func_name</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line"><span class="keyword">template</span> &lt;ArithmeticOperation op&gt;               \</div><div class="line">    void func_name(<span class="keyword">const</span> ITensor *in1, <span class="keyword">const</span> ITensor *in2, ITensor *out, <span class="keyword">const</span> Window &amp;window)</div></div><!-- fragment -->
<p class="definition">Definition at line <a class="el" href="cpu_2kernels_2elementwise__binary_2list_8h_source.xhtml#l00031">31</a> of file <a class="el" href="cpu_2kernels_2elementwise__binary_2list_8h_source.xhtml">list.h</a>.</p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_2c61f424fd391396db977702a2beee9a.xhtml">cpu</a></li><li class="navelem"><a class="el" href="dir_1de7bcbbdec2bf3559cb3c688662d4f5.xhtml">kernels</a></li><li class="navelem"><a class="el" href="dir_66520ab4814343cef4d99a57e61c0978.xhtml">elementwise_binary</a></li><li class="navelem"><a class="el" href="cpu_2kernels_2elementwise__binary_2list_8h.xhtml">list.h</a></li>
    <li class="footer">Generated on Sat Feb 26 2022 12:27:43 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
