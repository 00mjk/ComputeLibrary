<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: ProgramOptions Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Compute Library
   &#160;<span id="projectnumber">v17.06</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li><a href="classes.xhtml"><span>Data&#160;Structure&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Data&#160;Fields</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarm__compute_1_1test_1_1_program_options.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">ProgramOptions Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Defines available commandline arguments and allows to parse them.  
 <a href="classarm__compute_1_1test_1_1_program_options.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_program_options_8h_source.xhtml">ProgramOptions.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a263a38a1c179c73585830a0b0c1b100c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1_program_options.xhtml#a263a38a1c179c73585830a0b0c1b100c">ProgramOptions</a> ()</td></tr>
<tr class="memdesc:a263a38a1c179c73585830a0b0c1b100c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Defines available options.  <a href="#a263a38a1c179c73585830a0b0c1b100c">More...</a><br /></td></tr>
<tr class="separator:a263a38a1c179c73585830a0b0c1b100c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a468383228eb02136468e91be3663ec8b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1_program_options.xhtml#a468383228eb02136468e91be3663ec8b">wants_help</a> () const </td></tr>
<tr class="memdesc:a468383228eb02136468e91be3663ec8b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Signals if the &ndash;help flag has been passed on the commandline.  <a href="#a468383228eb02136468e91be3663ec8b">More...</a><br /></td></tr>
<tr class="separator:a468383228eb02136468e91be3663ec8b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9b576b0164ac6ad02b26f8b5b01575ba"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1_program_options.xhtml#a9b576b0164ac6ad02b26f8b5b01575ba">get_help</a> () const </td></tr>
<tr class="memdesc:a9b576b0164ac6ad02b26f8b5b01575ba"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a string describing all available options.  <a href="#a9b576b0164ac6ad02b26f8b5b01575ba">More...</a><br /></td></tr>
<tr class="separator:a9b576b0164ac6ad02b26f8b5b01575ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae24d4b7fe84e05687b4c390ed8096b8a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1_program_options.xhtml#ae24d4b7fe84e05687b4c390ed8096b8a">parse_commandline</a> (int argc, char **argv)</td></tr>
<tr class="memdesc:ae24d4b7fe84e05687b4c390ed8096b8a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses the given arguments and makes them available via <a class="el" href="classarm__compute_1_1test_1_1_program_options.xhtml#ad9477503abc6ea34d01994c663261cc7">get</a>.  <a href="#ae24d4b7fe84e05687b4c390ed8096b8a">More...</a><br /></td></tr>
<tr class="separator:ae24d4b7fe84e05687b4c390ed8096b8a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad9477503abc6ea34d01994c663261cc7"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ad9477503abc6ea34d01994c663261cc7"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1_program_options.xhtml#ad9477503abc6ea34d01994c663261cc7">get</a> (const std::string &amp;name, T &amp;value) const </td></tr>
<tr class="memdesc:ad9477503abc6ea34d01994c663261cc7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets <code>value</code> if it has been specified on the command line.  <a href="#ad9477503abc6ea34d01994c663261cc7">More...</a><br /></td></tr>
<tr class="separator:ad9477503abc6ea34d01994c663261cc7"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Defines available commandline arguments and allows to parse them. </p>

<p>Definition at line <a class="el" href="_program_options_8h_source.xhtml#l00042">42</a> of file <a class="el" href="_program_options_8h_source.xhtml">ProgramOptions.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a263a38a1c179c73585830a0b0c1b100c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1test_1_1_program_options.xhtml">ProgramOptions</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Defines available options. </p>

<p>Definition at line <a class="el" href="_program_options_8cpp_source.xhtml#l00038">38</a> of file <a class="el" href="_program_options_8cpp_source.xhtml">ProgramOptions.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;{</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    boost::program_options::options_description <span class="keyword">generic</span>(<span class="stringliteral">&quot;Generic options&quot;</span>);</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <span class="keyword">generic</span>.add_options()(<span class="stringliteral">&quot;help&quot;</span>, <span class="stringliteral">&quot;Print help message&quot;</span>)(<span class="stringliteral">&quot;seed&quot;</span>, boost::program_options::value&lt;std::random_device::result_type&gt;(), <span class="stringliteral">&quot;Seed for the tensor library&quot;</span>);</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    _visible.add(<span class="keyword">generic</span>);</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    _hidden.add_options()(<span class="stringliteral">&quot;path&quot;</span>, boost::program_options::value&lt;std::string&gt;(), <span class="stringliteral">&quot;Path from where to load the asset/s&quot;</span>);</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    _positional.add(<span class="stringliteral">&quot;path&quot;</span>, 1);</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="ad9477503abc6ea34d01994c663261cc7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool get </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">T &amp;&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets <code>value</code> if it has been specified on the command line. </p>
<dl class="section note"><dt>Note</dt><dd>The type T has to match the type that has been specified for the command line option.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">name</td><td>Name of the option to query. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">value</td><td>Variable to which the value will be assigned.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True if the value is assigned, false otherwise. </dd></dl>

<p>Definition at line <a class="el" href="_program_options_8h_source.xhtml#l00089">89</a> of file <a class="el" href="_program_options_8h_source.xhtml">ProgramOptions.h</a>.</p>

<p>Referenced by <a class="el" href="_performance_user_configuration_8cpp_source.xhtml#l00034">PerformanceUserConfiguration::PerformanceUserConfiguration()</a>, and <a class="el" href="_user_configuration_8cpp_source.xhtml#l00034">UserConfiguration::UserConfiguration()</a>.</p>
<div class="fragment"><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;{</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="keywordflow">if</span>(_vm.count(name) != 0)</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    {</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        value = _vm[name].as&lt;T&gt;();</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    }</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a9b576b0164ac6ad02b26f8b5b01575ba"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string get_help </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns a string describing all available options. </p>

<p>Definition at line <a class="el" href="_program_options_8cpp_source.xhtml#l00060">60</a> of file <a class="el" href="_program_options_8cpp_source.xhtml">ProgramOptions.cpp</a>.</p>

<p>Referenced by <a class="el" href="validation_2main_8cpp_source.xhtml#l00071">init_unit_test()</a>, and <a class="el" href="benchmark_2main_8cpp_source.xhtml#l00054">main()</a>.</p>
<div class="fragment"><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;{</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    std::stringstream help;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    help &lt;&lt; _visible;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="keywordflow">return</span> help.str();</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ae24d4b7fe84e05687b4c390ed8096b8a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void parse_commandline </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>argc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char **&#160;</td>
          <td class="paramname"><em>argv</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Parses the given arguments and makes them available via <a class="el" href="classarm__compute_1_1test_1_1_program_options.xhtml#ad9477503abc6ea34d01994c663261cc7">get</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">argc</td><td>Number of command line arguments. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">argv</td><td>Pointer to the command line arguments. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="_program_options_8cpp_source.xhtml#l00068">68</a> of file <a class="el" href="_program_options_8cpp_source.xhtml">ProgramOptions.cpp</a>.</p>

<p>Referenced by <a class="el" href="validation_2main_8cpp_source.xhtml#l00071">init_unit_test()</a>, and <a class="el" href="benchmark_2main_8cpp_source.xhtml#l00054">main()</a>.</p>
<div class="fragment"><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;{</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    boost::program_options::options_description all;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    all.add(_visible).add(_hidden);</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    boost::program_options::store(boost::program_options::command_line_parser(argc, argv)</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;                                  .options(all)</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;                                  .positional(_positional)</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                                  .allow_unregistered()</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                                  .run(),</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;                                  _vm);</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="keywordflow">if</span>(_vm.count(<span class="stringliteral">&quot;help&quot;</span>) == 0 &amp;&amp; _vm.count(<span class="stringliteral">&quot;path&quot;</span>) == 0)</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    {</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        <span class="keywordflow">throw</span> boost::program_options::required_option(<span class="stringliteral">&quot;PATH&quot;</span>);</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    }</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    boost::program_options::notify(_vm);</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a468383228eb02136468e91be3663ec8b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool wants_help </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Signals if the &ndash;help flag has been passed on the commandline. </p>

<p>Definition at line <a class="el" href="_program_options_8cpp_source.xhtml#l00055">55</a> of file <a class="el" href="_program_options_8cpp_source.xhtml">ProgramOptions.cpp</a>.</p>

<p>Referenced by <a class="el" href="validation_2main_8cpp_source.xhtml#l00071">init_unit_test()</a>, and <a class="el" href="benchmark_2main_8cpp_source.xhtml#l00054">main()</a>.</p>
<div class="fragment"><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;{</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="keywordflow">return</span> (_vm.count(<span class="stringliteral">&quot;help&quot;</span>) != 0);</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>tests/<a class="el" href="_program_options_8h_source.xhtml">ProgramOptions.h</a></li>
<li>tests/<a class="el" href="_program_options_8cpp_source.xhtml">ProgramOptions.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1test.xhtml">test</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1test_1_1_program_options.xhtml">ProgramOptions</a></li>
    <li class="footer">Generated on Fri Jun 23 2017 15:44:35 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
