<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: examples/graph_yolov3_output_detector.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('graph__yolov3__output__detector_8cpp_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">graph_yolov3_output_detector.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="graph__yolov3__output__detector_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2020 Arm Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_graph_8h.xhtml">arm_compute/graph.h</a>&quot;</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2graph_2_utils_8h.xhtml">arm_compute/graph/Utils.h</a>&quot;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_toolchain_support_8h.xhtml">support/ToolchainSupport.h</a>&quot;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_common_graph_options_8h.xhtml">utils/CommonGraphOptions.h</a>&quot;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_graph_utils_8h.xhtml">utils/GraphUtils.h</a>&quot;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="utils_2_utils_8h.xhtml">utils/Utils.h</a>&quot;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacearm__compute_1_1utils.xhtml">arm_compute::utils</a>;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">class </span>GraphYoloV3OutputDetector</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    GraphYoloV3OutputDetector()</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        : _graph(0, <span class="stringliteral">&quot;GraphYoloV3OutputDetector&quot;</span>)</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    {</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    }</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <span class="keywordtype">bool</span> setup(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1utils_1_1_common_graph_params.xhtml">CommonGraphParams</a> &amp;common_params, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1utils_1_1_simple_option.xhtml">SimpleOption&lt;std::string&gt;</a> &amp;expected_output_filename)</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    {</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        <span class="keyword">using namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a>;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        <span class="keyword">using namespace </span>graph_utils;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">DataLayout</a>  <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a> = common_params.<a class="code" href="structarm__compute_1_1utils_1_1_common_graph_params.xhtml#aa56f0562febf49bc0e29a4257551191b">data_layout</a>;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;        <span class="keyword">const</span> std::string data_path   = common_params.<a class="code" href="structarm__compute_1_1utils_1_1_common_graph_params.xhtml#a30a81dbc66a8e9eeb693a75046b4655d">data_path</a>;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        <span class="keyword">const</span> <a class="code" href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35d">Target</a>      target      = common_params.<a class="code" href="structarm__compute_1_1utils_1_1_common_graph_params.xhtml#a29d9bc83bfba2fba21af47e575569dde">target</a>;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02">DataLayoutDimension</a> x_dim = (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a> == <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">DataLayout::NHWC</a>) ? <a class="code" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02af52e9c50a060add65a035429b2a22229">DataLayoutDimension::CHANNEL</a> : <a class="code" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02a49da85b69bc6285eeee286ca49fa7195">DataLayoutDimension::WIDTH</a>;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02">DataLayoutDimension</a> y_dim = (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a> == <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">DataLayout::NHWC</a>) ? <a class="code" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02a49da85b69bc6285eeee286ca49fa7195">DataLayoutDimension::WIDTH</a> : <a class="code" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02ad770ba3ce18fa409965dfdf5e7c348e6">DataLayoutDimension::HEIGHT</a>;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> id_ConstantFolding_truediv_1_recip = _graph.add_node&lt;<a class="code" href="classarm__compute_1_1graph_1_1_const_node.xhtml">ConstNode</a>&gt;(</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;                                                        <a class="code" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml">TensorDescriptor</a></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        {</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;            <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>{ 1, 1, 1 },</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;            <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>,</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(),</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;            <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a> });</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> *node_ConstantFolding_truediv_1_recip = _graph.node(id_ConstantFolding_truediv_1_recip);</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        node_ConstantFolding_truediv_1_recip-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#aeadb909ea02bec78f92ca35ff0ccbaea">set_common_node_parameters</a>(<a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>{ <span class="stringliteral">&quot;ConstantFolding_truediv_1_recip&quot;</span>, target });</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        node_ConstantFolding_truediv_1_recip-&gt;output(0)-&gt;set_accessor(<a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, <span class="stringliteral">&quot;/cnn_data/yolov3_output_detector/ConstantFolding_truediv_1_recip.npy&quot;</span>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a>));</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> id_ConstantFolding_truediv_recip = _graph.add_node&lt;<a class="code" href="classarm__compute_1_1graph_1_1_const_node.xhtml">ConstNode</a>&gt;(</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;                                                      <a class="code" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml">TensorDescriptor</a></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        {</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;            <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>{ 1, 1, 1 },</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;            <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>,</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(),</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;            <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a> });</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> *node_ConstantFolding_truediv_recip = _graph.node(id_ConstantFolding_truediv_recip);</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        node_ConstantFolding_truediv_recip-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#aeadb909ea02bec78f92ca35ff0ccbaea">set_common_node_parameters</a>(<a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>{ <span class="stringliteral">&quot;ConstantFolding_truediv_recip&quot;</span>, target });</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        node_ConstantFolding_truediv_recip-&gt;output(0)-&gt;set_accessor(<a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, <span class="stringliteral">&quot;/cnn_data/yolov3_output_detector/ConstantFolding_truediv_recip.npy&quot;</span>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a>));</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> id_detector_yolo_v3_mul_6_y = _graph.add_node&lt;<a class="code" href="classarm__compute_1_1graph_1_1_const_node.xhtml">ConstNode</a>&gt;(</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;                                                 <a class="code" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml">TensorDescriptor</a></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        {</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;            <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>{ 2 },</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;            <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>,</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(),</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;            <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a> });</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> *node_detector_yolo_v3_mul_6_y = _graph.node(id_detector_yolo_v3_mul_6_y);</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        node_detector_yolo_v3_mul_6_y-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#aeadb909ea02bec78f92ca35ff0ccbaea">set_common_node_parameters</a>(<a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>{ <span class="stringliteral">&quot;detector_yolo_v3_mul_6_y&quot;</span>, target });</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        node_detector_yolo_v3_mul_6_y-&gt;output(0)-&gt;set_accessor(<a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, <span class="stringliteral">&quot;/cnn_data/yolov3_output_detector/detector_yolo-v3_mul_6_y.npy&quot;</span>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a>));</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> id_detector_yolo_v3_mul_3_y = _graph.add_node&lt;<a class="code" href="classarm__compute_1_1graph_1_1_const_node.xhtml">ConstNode</a>&gt;(</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                                                 <a class="code" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml">TensorDescriptor</a></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        {</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;            <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>{ 2 },</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;            <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>,</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(),</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;            <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a> });</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> *node_detector_yolo_v3_mul_3_y = _graph.node(id_detector_yolo_v3_mul_3_y);</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        node_detector_yolo_v3_mul_3_y-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#aeadb909ea02bec78f92ca35ff0ccbaea">set_common_node_parameters</a>(<a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>{ <span class="stringliteral">&quot;detector_yolo_v3_mul_3_y&quot;</span>, target });</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        node_detector_yolo_v3_mul_3_y-&gt;output(0)-&gt;set_accessor(<a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, <span class="stringliteral">&quot;/cnn_data/yolov3_output_detector/detector_yolo-v3_mul_3_y.npy&quot;</span>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a>));</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> id_detector_yolo_v3_mul_y = _graph.add_node&lt;<a class="code" href="classarm__compute_1_1graph_1_1_const_node.xhtml">ConstNode</a>&gt;(</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                                               <a class="code" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml">TensorDescriptor</a></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        {</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;            <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>{ 2 },</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;            <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>,</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(),</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;            <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a> });</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> *node_detector_yolo_v3_mul_y = _graph.node(id_detector_yolo_v3_mul_y);</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        node_detector_yolo_v3_mul_y-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#aeadb909ea02bec78f92ca35ff0ccbaea">set_common_node_parameters</a>(<a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>{ <span class="stringliteral">&quot;detector_yolo_v3_mul_y&quot;</span>, target });</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        node_detector_yolo_v3_mul_y-&gt;output(0)-&gt;set_accessor(<a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, <span class="stringliteral">&quot;/cnn_data/yolov3_output_detector/detector_yolo-v3_mul_y.npy&quot;</span>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a>));</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> id_detector_yolo_v3_mul_7 = _graph.add_node&lt;<a class="code" href="classarm__compute_1_1graph_1_1_const_node.xhtml">ConstNode</a>&gt;(</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;                                               <a class="code" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml">TensorDescriptor</a></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        {</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;            <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>{ 2, 8112 },</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;            <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>,</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(),</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;            <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a> });</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> *node_detector_yolo_v3_mul_7 = _graph.node(id_detector_yolo_v3_mul_7);</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        node_detector_yolo_v3_mul_7-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#aeadb909ea02bec78f92ca35ff0ccbaea">set_common_node_parameters</a>(<a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>{ <span class="stringliteral">&quot;detector_yolo_v3_mul_7&quot;</span>, target });</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        node_detector_yolo_v3_mul_7-&gt;output(0)-&gt;set_accessor(<a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, <span class="stringliteral">&quot;/cnn_data/yolov3_output_detector/detector_yolo-v3_mul_7.npy&quot;</span>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a>));</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> id_detector_yolo_v3_Reshape_11 = _graph.add_node&lt;<a class="code" href="classarm__compute_1_1graph_1_1_const_node.xhtml">ConstNode</a>&gt;(</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;                                                    <a class="code" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml">TensorDescriptor</a></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        {</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;            <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>{ 2, 8112 },</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;            <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>,</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(),</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;            <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a> });</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> *node_detector_yolo_v3_Reshape_11 = _graph.node(id_detector_yolo_v3_Reshape_11);</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        node_detector_yolo_v3_Reshape_11-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#aeadb909ea02bec78f92ca35ff0ccbaea">set_common_node_parameters</a>(<a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>{ <span class="stringliteral">&quot;detector_yolo_v3_Reshape_11&quot;</span>, target });</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        node_detector_yolo_v3_Reshape_11-&gt;output(0)-&gt;set_accessor(<a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, <span class="stringliteral">&quot;/cnn_data/yolov3_output_detector/detector_yolo-v3_Reshape_11.npy&quot;</span>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a>));</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> id_detector_yolo_v3_mul_4 = _graph.add_node&lt;<a class="code" href="classarm__compute_1_1graph_1_1_const_node.xhtml">ConstNode</a>&gt;(</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                                               <a class="code" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml">TensorDescriptor</a></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        {</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;            <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>{ 2, 2028 },</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;            <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>,</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(),</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;            <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a> });</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> *node_detector_yolo_v3_mul_4 = _graph.node(id_detector_yolo_v3_mul_4);</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        node_detector_yolo_v3_mul_4-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#aeadb909ea02bec78f92ca35ff0ccbaea">set_common_node_parameters</a>(<a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>{ <span class="stringliteral">&quot;detector_yolo_v3_mul_4&quot;</span>, target });</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        node_detector_yolo_v3_mul_4-&gt;output(0)-&gt;set_accessor(<a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, <span class="stringliteral">&quot;/cnn_data/yolov3_output_detector/detector_yolo-v3_mul_4.npy&quot;</span>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a>));</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> id_detector_yolo_v3_Reshape_7 = _graph.add_node&lt;<a class="code" href="classarm__compute_1_1graph_1_1_const_node.xhtml">ConstNode</a>&gt;(</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;                                                   <a class="code" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml">TensorDescriptor</a></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        {</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;            <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>{ 2, 2028 },</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;            <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>,</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(),</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;            <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a> });</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> *node_detector_yolo_v3_Reshape_7 = _graph.node(id_detector_yolo_v3_Reshape_7);</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        node_detector_yolo_v3_Reshape_7-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#aeadb909ea02bec78f92ca35ff0ccbaea">set_common_node_parameters</a>(<a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>{ <span class="stringliteral">&quot;detector_yolo_v3_Reshape_7&quot;</span>, target });</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        node_detector_yolo_v3_Reshape_7-&gt;output(0)-&gt;set_accessor(<a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, <span class="stringliteral">&quot;/cnn_data/yolov3_output_detector/detector_yolo-v3_Reshape_7.npy&quot;</span>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a>));</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> id_detector_yolo_v3_mul_1 = _graph.add_node&lt;<a class="code" href="classarm__compute_1_1graph_1_1_const_node.xhtml">ConstNode</a>&gt;(</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;                                               <a class="code" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml">TensorDescriptor</a></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        {</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;            <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>{ 2, 507 },</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;            <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>,</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(),</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;            <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a> });</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> *node_detector_yolo_v3_mul_1 = _graph.node(id_detector_yolo_v3_mul_1);</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        node_detector_yolo_v3_mul_1-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#aeadb909ea02bec78f92ca35ff0ccbaea">set_common_node_parameters</a>(<a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>{ <span class="stringliteral">&quot;detector_yolo_v3_mul_1&quot;</span>, target });</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        node_detector_yolo_v3_mul_1-&gt;output(0)-&gt;set_accessor(<a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, <span class="stringliteral">&quot;/cnn_data/yolov3_output_detector/detector_yolo-v3_mul_1.npy&quot;</span>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a>));</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> id_detector_yolo_v3_Reshape_3 = _graph.add_node&lt;<a class="code" href="classarm__compute_1_1graph_1_1_const_node.xhtml">ConstNode</a>&gt;(</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;                                                   <a class="code" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml">TensorDescriptor</a></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        {</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;            <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>{ 2, 507 },</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;            <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>,</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(),</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;            <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a> });</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;        <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> *node_detector_yolo_v3_Reshape_3 = _graph.node(id_detector_yolo_v3_Reshape_3);</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        node_detector_yolo_v3_Reshape_3-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#aeadb909ea02bec78f92ca35ff0ccbaea">set_common_node_parameters</a>(<a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>{ <span class="stringliteral">&quot;detector_yolo_v3_Reshape_3&quot;</span>, target });</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;        node_detector_yolo_v3_Reshape_3-&gt;output(0)-&gt;set_accessor(<a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, <span class="stringliteral">&quot;/cnn_data/yolov3_output_detector/detector_yolo-v3_Reshape_3.npy&quot;</span>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a>));</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> id_input_to_detector_3 = _graph.add_node&lt;<a class="code" href="classarm__compute_1_1graph_1_1_input_node.xhtml">InputNode</a>&gt;(</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;                                            <a class="code" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml">TensorDescriptor</a></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;        {</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;            <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>{ 255, 52, 52, 1 },</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;            <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>,</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(),</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;            <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a> });</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;        <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> *node_input_to_detector_3 = _graph.node(id_input_to_detector_3);</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        node_input_to_detector_3-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#aeadb909ea02bec78f92ca35ff0ccbaea">set_common_node_parameters</a>(<a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>{ <span class="stringliteral">&quot;input_to_detector_3&quot;</span>, target });</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        node_input_to_detector_3-&gt;output(0)-&gt;set_accessor(<a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, <span class="stringliteral">&quot;/cnn_data/yolov3_output_detector/input_to_detector_3.npy&quot;</span>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a>));</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;        <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> id_detector_yolo_v3_Reshape_10 = _graph.add_node&lt;<a class="code" href="classarm__compute_1_1graph_1_1_reshape_layer_node.xhtml">ReshapeLayerNode</a>&gt;(</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;                                                    <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>{ 85, 8112 });</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;        <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> *node_detector_yolo_v3_Reshape_10 = _graph.node(id_detector_yolo_v3_Reshape_10);</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;        node_detector_yolo_v3_Reshape_10-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#aeadb909ea02bec78f92ca35ff0ccbaea">set_common_node_parameters</a>(<a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>{ <span class="stringliteral">&quot;detector_yolo_v3_Reshape_10&quot;</span>, target });</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;        _graph.add_connection(id_input_to_detector_3, 0, id_detector_yolo_v3_Reshape_10, 0);</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;        <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> id_detector_yolo_v3_split_2 = _graph.add_node&lt;<a class="code" href="classarm__compute_1_1graph_1_1_split_layer_node.xhtml">SplitLayerNode</a>&gt;(</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;                                                 4,</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;                                                 0,</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;                                                 std::vector&lt;int&gt; { 2, 2, 1, 80 });</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;        <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> *node_detector_yolo_v3_split_2 = _graph.node(id_detector_yolo_v3_split_2);</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;        node_detector_yolo_v3_split_2-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#aeadb909ea02bec78f92ca35ff0ccbaea">set_common_node_parameters</a>(<a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>{ <span class="stringliteral">&quot;detector_yolo_v3_split_2&quot;</span>, target });</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        _graph.add_connection(id_detector_yolo_v3_Reshape_10, 0, id_detector_yolo_v3_split_2, 0);</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> id_detector_yolo_v3_Sigmoid_6 = _graph.add_node&lt;<a class="code" href="classarm__compute_1_1graph_1_1_activation_layer_node.xhtml">ActivationLayerNode</a>&gt;(</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;                                                   <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>{ <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa72ee60fba0509af07cbbd91398d8db9d">ActivationLayerInfo::ActivationFunction::LOGISTIC</a>, 0, 0 });</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;        <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> *node_detector_yolo_v3_Sigmoid_6 = _graph.node(id_detector_yolo_v3_Sigmoid_6);</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;        node_detector_yolo_v3_Sigmoid_6-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#aeadb909ea02bec78f92ca35ff0ccbaea">set_common_node_parameters</a>(<a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>{ <span class="stringliteral">&quot;detector_yolo_v3_Sigmoid_6&quot;</span>, target });</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        _graph.add_connection(id_detector_yolo_v3_split_2, 0, id_detector_yolo_v3_Sigmoid_6, 0);</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> id_detector_yolo_v3_add_2 = _graph.add_node&lt;<a class="code" href="classarm__compute_1_1graph_1_1_eltwise_layer_node.xhtml">EltwiseLayerNode</a>&gt;(</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;                                               <a class="code" href="structarm__compute_1_1graph_1_1descriptors_1_1_eltwise_layer_descriptor.xhtml">descriptors::EltwiseLayerDescriptor</a></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;        {</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;            <a class="code" href="namespacearm__compute_1_1graph.xhtml#aa12973876c037bddff8e9ece94aca0e4aec211f7c20af43e742bf2570c3cb84f9">EltwiseOperation::Add</a>,</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>() });</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;        <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> *node_detector_yolo_v3_add_2 = _graph.node(id_detector_yolo_v3_add_2);</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;        node_detector_yolo_v3_add_2-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#aeadb909ea02bec78f92ca35ff0ccbaea">set_common_node_parameters</a>(<a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>{ <span class="stringliteral">&quot;detector_yolo_v3_add_2&quot;</span>, target });</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;        _graph.add_connection(id_detector_yolo_v3_Sigmoid_6, 0, id_detector_yolo_v3_add_2, 0);</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;        _graph.add_connection(id_detector_yolo_v3_Reshape_11, 0, id_detector_yolo_v3_add_2, 1);</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> id_detector_yolo_v3_mul_6 = _graph.add_node&lt;<a class="code" href="classarm__compute_1_1graph_1_1_eltwise_layer_node.xhtml">EltwiseLayerNode</a>&gt;(</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;                                               <a class="code" href="structarm__compute_1_1graph_1_1descriptors_1_1_eltwise_layer_descriptor.xhtml">descriptors::EltwiseLayerDescriptor</a></div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        {</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;            <a class="code" href="namespacearm__compute_1_1graph.xhtml#aa12973876c037bddff8e9ece94aca0e4a62b6d55816cf737bfc6f42e60df1a3f2">EltwiseOperation::Mul</a>,</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>() });</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;        <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> *node_detector_yolo_v3_mul_6 = _graph.node(id_detector_yolo_v3_mul_6);</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;        node_detector_yolo_v3_mul_6-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#aeadb909ea02bec78f92ca35ff0ccbaea">set_common_node_parameters</a>(<a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>{ <span class="stringliteral">&quot;detector_yolo_v3_mul_6&quot;</span>, target });</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;        _graph.add_connection(id_detector_yolo_v3_add_2, 0, id_detector_yolo_v3_mul_6, 0);</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;        _graph.add_connection(id_detector_yolo_v3_mul_6_y, 0, id_detector_yolo_v3_mul_6, 1);</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;        <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> id_detector_yolo_v3_Sigmoid_7 = _graph.add_node&lt;<a class="code" href="classarm__compute_1_1graph_1_1_activation_layer_node.xhtml">ActivationLayerNode</a>&gt;(</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;                                                   <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>{ <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa72ee60fba0509af07cbbd91398d8db9d">ActivationLayerInfo::ActivationFunction::LOGISTIC</a>, 0, 0 });</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;        <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> *node_detector_yolo_v3_Sigmoid_7 = _graph.node(id_detector_yolo_v3_Sigmoid_7);</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;        node_detector_yolo_v3_Sigmoid_7-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#aeadb909ea02bec78f92ca35ff0ccbaea">set_common_node_parameters</a>(<a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>{ <span class="stringliteral">&quot;detector_yolo_v3_Sigmoid_7&quot;</span>, target });</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;        _graph.add_connection(id_detector_yolo_v3_split_2, 2, id_detector_yolo_v3_Sigmoid_7, 0);</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> id_detector_yolo_v3_Exp_2 = _graph.add_node&lt;<a class="code" href="classarm__compute_1_1graph_1_1_unary_eltwise_layer_node.xhtml">UnaryEltwiseLayerNode</a>&gt;(</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;                                               <a class="code" href="structarm__compute_1_1graph_1_1descriptors_1_1_unary_eltwise_layer_descriptor.xhtml">descriptors::UnaryEltwiseLayerDescriptor</a></div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;        {</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;            <a class="code" href="namespacearm__compute_1_1graph.xhtml#a3805b9005b1d842bad30e09846e1f4e7acad39a154bffb61175f674d6eefaf6d0">UnaryEltwiseOperation::Exp</a>,</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>() });</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;        <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> *node_detector_yolo_v3_Exp_2 = _graph.node(id_detector_yolo_v3_Exp_2);</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;        node_detector_yolo_v3_Exp_2-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#aeadb909ea02bec78f92ca35ff0ccbaea">set_common_node_parameters</a>(<a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>{ <span class="stringliteral">&quot;detector_yolo_v3_Exp_2&quot;</span>, target });</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;        _graph.add_connection(id_detector_yolo_v3_split_2, 1, id_detector_yolo_v3_Exp_2, 0);</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;        <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> id_detector_yolo_v3_mul_8 = _graph.add_node&lt;<a class="code" href="classarm__compute_1_1graph_1_1_eltwise_layer_node.xhtml">EltwiseLayerNode</a>&gt;(</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;                                               <a class="code" href="structarm__compute_1_1graph_1_1descriptors_1_1_eltwise_layer_descriptor.xhtml">descriptors::EltwiseLayerDescriptor</a></div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;        {</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;            <a class="code" href="namespacearm__compute_1_1graph.xhtml#aa12973876c037bddff8e9ece94aca0e4a62b6d55816cf737bfc6f42e60df1a3f2">EltwiseOperation::Mul</a>,</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>() });</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;        <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> *node_detector_yolo_v3_mul_8 = _graph.node(id_detector_yolo_v3_mul_8);</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;        node_detector_yolo_v3_mul_8-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#aeadb909ea02bec78f92ca35ff0ccbaea">set_common_node_parameters</a>(<a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>{ <span class="stringliteral">&quot;detector_yolo_v3_mul_8&quot;</span>, target });</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;        _graph.add_connection(id_detector_yolo_v3_Exp_2, 0, id_detector_yolo_v3_mul_8, 0);</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;        _graph.add_connection(id_detector_yolo_v3_mul_7, 0, id_detector_yolo_v3_mul_8, 1);</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;        <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> id_detector_yolo_v3_Sigmoid_8 = _graph.add_node&lt;<a class="code" href="classarm__compute_1_1graph_1_1_activation_layer_node.xhtml">ActivationLayerNode</a>&gt;(</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;                                                   <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>{ <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa72ee60fba0509af07cbbd91398d8db9d">ActivationLayerInfo::ActivationFunction::LOGISTIC</a>, 0, 0 });</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;        <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> *node_detector_yolo_v3_Sigmoid_8 = _graph.node(id_detector_yolo_v3_Sigmoid_8);</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;        node_detector_yolo_v3_Sigmoid_8-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#aeadb909ea02bec78f92ca35ff0ccbaea">set_common_node_parameters</a>(<a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>{ <span class="stringliteral">&quot;detector_yolo_v3_Sigmoid_8&quot;</span>, target });</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;        _graph.add_connection(id_detector_yolo_v3_split_2, 3, id_detector_yolo_v3_Sigmoid_8, 0);</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;        <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> id_detector_yolo_v3_concat_8 = _graph.add_node&lt;<a class="code" href="classarm__compute_1_1graph_1_1_concatenate_layer_node.xhtml">ConcatenateLayerNode</a>&gt;(</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;                                                  4,</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;                                                  <a class="code" href="structarm__compute_1_1graph_1_1descriptors_1_1_concat_layer_descriptor.xhtml">descriptors::ConcatLayerDescriptor</a>{ x_dim });</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;        <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> *node_detector_yolo_v3_concat_8 = _graph.node(id_detector_yolo_v3_concat_8);</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;        node_detector_yolo_v3_concat_8-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#aeadb909ea02bec78f92ca35ff0ccbaea">set_common_node_parameters</a>(<a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>{ <span class="stringliteral">&quot;detector_yolo_v3_concat_8&quot;</span>, target });</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;        _graph.add_connection(id_detector_yolo_v3_mul_6, 0, id_detector_yolo_v3_concat_8, 0);</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;        _graph.add_connection(id_detector_yolo_v3_mul_8, 0, id_detector_yolo_v3_concat_8, 1);</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;        _graph.add_connection(id_detector_yolo_v3_Sigmoid_7, 0, id_detector_yolo_v3_concat_8, 2);</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;        _graph.add_connection(id_detector_yolo_v3_Sigmoid_8, 0, id_detector_yolo_v3_concat_8, 3);</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;        <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> id_input_to_detector_2 = _graph.add_node&lt;<a class="code" href="classarm__compute_1_1graph_1_1_input_node.xhtml">InputNode</a>&gt;(</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;                                            <a class="code" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml">TensorDescriptor</a></div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;        {</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;            <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>{ 255, 26, 26, 1 },</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;            <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>,</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(),</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;            <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a> });</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;        <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> *node_input_to_detector_2 = _graph.node(id_input_to_detector_2);</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;        node_input_to_detector_2-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#aeadb909ea02bec78f92ca35ff0ccbaea">set_common_node_parameters</a>(<a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>{ <span class="stringliteral">&quot;input_to_detector_2&quot;</span>, target });</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;        node_input_to_detector_2-&gt;output(0)-&gt;set_accessor(<a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, <span class="stringliteral">&quot;/cnn_data/yolov3_output_detector/input_to_detector_2.npy&quot;</span>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a>));</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;        <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> id_detector_yolo_v3_Reshape_6 = _graph.add_node&lt;<a class="code" href="classarm__compute_1_1graph_1_1_reshape_layer_node.xhtml">ReshapeLayerNode</a>&gt;(</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;                                                   <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>{ 85, 2028 });</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;        <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> *node_detector_yolo_v3_Reshape_6 = _graph.node(id_detector_yolo_v3_Reshape_6);</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;        node_detector_yolo_v3_Reshape_6-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#aeadb909ea02bec78f92ca35ff0ccbaea">set_common_node_parameters</a>(<a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>{ <span class="stringliteral">&quot;detector_yolo_v3_Reshape_6&quot;</span>, target });</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;        _graph.add_connection(id_input_to_detector_2, 0, id_detector_yolo_v3_Reshape_6, 0);</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;        <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> id_detector_yolo_v3_split_1 = _graph.add_node&lt;<a class="code" href="classarm__compute_1_1graph_1_1_split_layer_node.xhtml">SplitLayerNode</a>&gt;(</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;                                                 4,</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;                                                 0,</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;                                                 std::vector&lt;int&gt; { 2, 2, 1, 80 });</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;        <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> *node_detector_yolo_v3_split_1 = _graph.node(id_detector_yolo_v3_split_1);</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;        node_detector_yolo_v3_split_1-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#aeadb909ea02bec78f92ca35ff0ccbaea">set_common_node_parameters</a>(<a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>{ <span class="stringliteral">&quot;detector_yolo_v3_split_1&quot;</span>, target });</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;        _graph.add_connection(id_detector_yolo_v3_Reshape_6, 0, id_detector_yolo_v3_split_1, 0);</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;        <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> id_detector_yolo_v3_Sigmoid_3 = _graph.add_node&lt;<a class="code" href="classarm__compute_1_1graph_1_1_activation_layer_node.xhtml">ActivationLayerNode</a>&gt;(</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;                                                   <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>{ <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa72ee60fba0509af07cbbd91398d8db9d">ActivationLayerInfo::ActivationFunction::LOGISTIC</a>, 0, 0 });</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;        <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> *node_detector_yolo_v3_Sigmoid_3 = _graph.node(id_detector_yolo_v3_Sigmoid_3);</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;        node_detector_yolo_v3_Sigmoid_3-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#aeadb909ea02bec78f92ca35ff0ccbaea">set_common_node_parameters</a>(<a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>{ <span class="stringliteral">&quot;detector_yolo_v3_Sigmoid_3&quot;</span>, target });</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;        _graph.add_connection(id_detector_yolo_v3_split_1, 0, id_detector_yolo_v3_Sigmoid_3, 0);</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;        <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> id_detector_yolo_v3_add_1 = _graph.add_node&lt;<a class="code" href="classarm__compute_1_1graph_1_1_eltwise_layer_node.xhtml">EltwiseLayerNode</a>&gt;(</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;                                               <a class="code" href="structarm__compute_1_1graph_1_1descriptors_1_1_eltwise_layer_descriptor.xhtml">descriptors::EltwiseLayerDescriptor</a></div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;        {</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;            <a class="code" href="namespacearm__compute_1_1graph.xhtml#aa12973876c037bddff8e9ece94aca0e4aec211f7c20af43e742bf2570c3cb84f9">EltwiseOperation::Add</a>,</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>() });</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;        <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> *node_detector_yolo_v3_add_1 = _graph.node(id_detector_yolo_v3_add_1);</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;        node_detector_yolo_v3_add_1-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#aeadb909ea02bec78f92ca35ff0ccbaea">set_common_node_parameters</a>(<a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>{ <span class="stringliteral">&quot;detector_yolo_v3_add_1&quot;</span>, target });</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;        _graph.add_connection(id_detector_yolo_v3_Sigmoid_3, 0, id_detector_yolo_v3_add_1, 0);</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;        _graph.add_connection(id_detector_yolo_v3_Reshape_7, 0, id_detector_yolo_v3_add_1, 1);</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;        <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> id_detector_yolo_v3_mul_3 = _graph.add_node&lt;<a class="code" href="classarm__compute_1_1graph_1_1_eltwise_layer_node.xhtml">EltwiseLayerNode</a>&gt;(</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;                                               <a class="code" href="structarm__compute_1_1graph_1_1descriptors_1_1_eltwise_layer_descriptor.xhtml">descriptors::EltwiseLayerDescriptor</a></div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;        {</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;            <a class="code" href="namespacearm__compute_1_1graph.xhtml#aa12973876c037bddff8e9ece94aca0e4a62b6d55816cf737bfc6f42e60df1a3f2">EltwiseOperation::Mul</a>,</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>() });</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;        <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> *node_detector_yolo_v3_mul_3 = _graph.node(id_detector_yolo_v3_mul_3);</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;        node_detector_yolo_v3_mul_3-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#aeadb909ea02bec78f92ca35ff0ccbaea">set_common_node_parameters</a>(<a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>{ <span class="stringliteral">&quot;detector_yolo_v3_mul_3&quot;</span>, target });</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;        _graph.add_connection(id_detector_yolo_v3_add_1, 0, id_detector_yolo_v3_mul_3, 0);</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;        _graph.add_connection(id_detector_yolo_v3_mul_3_y, 0, id_detector_yolo_v3_mul_3, 1);</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;        <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> id_detector_yolo_v3_Sigmoid_4 = _graph.add_node&lt;<a class="code" href="classarm__compute_1_1graph_1_1_activation_layer_node.xhtml">ActivationLayerNode</a>&gt;(</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;                                                   <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>{ <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa72ee60fba0509af07cbbd91398d8db9d">ActivationLayerInfo::ActivationFunction::LOGISTIC</a>, 0, 0 });</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;        <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> *node_detector_yolo_v3_Sigmoid_4 = _graph.node(id_detector_yolo_v3_Sigmoid_4);</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;        node_detector_yolo_v3_Sigmoid_4-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#aeadb909ea02bec78f92ca35ff0ccbaea">set_common_node_parameters</a>(<a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>{ <span class="stringliteral">&quot;detector_yolo_v3_Sigmoid_4&quot;</span>, target });</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;        _graph.add_connection(id_detector_yolo_v3_split_1, 2, id_detector_yolo_v3_Sigmoid_4, 0);</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;        <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> id_detector_yolo_v3_Exp_1 = _graph.add_node&lt;<a class="code" href="classarm__compute_1_1graph_1_1_unary_eltwise_layer_node.xhtml">UnaryEltwiseLayerNode</a>&gt;(</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;                                               <a class="code" href="structarm__compute_1_1graph_1_1descriptors_1_1_unary_eltwise_layer_descriptor.xhtml">descriptors::UnaryEltwiseLayerDescriptor</a></div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;        {</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;            <a class="code" href="namespacearm__compute_1_1graph.xhtml#a3805b9005b1d842bad30e09846e1f4e7acad39a154bffb61175f674d6eefaf6d0">UnaryEltwiseOperation::Exp</a>,</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>() });</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;        <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> *node_detector_yolo_v3_Exp_1 = _graph.node(id_detector_yolo_v3_Exp_1);</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;        node_detector_yolo_v3_Exp_1-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#aeadb909ea02bec78f92ca35ff0ccbaea">set_common_node_parameters</a>(<a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>{ <span class="stringliteral">&quot;detector_yolo_v3_Exp_1&quot;</span>, target });</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;        _graph.add_connection(id_detector_yolo_v3_split_1, 1, id_detector_yolo_v3_Exp_1, 0);</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;        <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> id_detector_yolo_v3_mul_5 = _graph.add_node&lt;<a class="code" href="classarm__compute_1_1graph_1_1_eltwise_layer_node.xhtml">EltwiseLayerNode</a>&gt;(</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;                                               <a class="code" href="structarm__compute_1_1graph_1_1descriptors_1_1_eltwise_layer_descriptor.xhtml">descriptors::EltwiseLayerDescriptor</a></div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;        {</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;            <a class="code" href="namespacearm__compute_1_1graph.xhtml#aa12973876c037bddff8e9ece94aca0e4a62b6d55816cf737bfc6f42e60df1a3f2">EltwiseOperation::Mul</a>,</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>() });</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;        <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> *node_detector_yolo_v3_mul_5 = _graph.node(id_detector_yolo_v3_mul_5);</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;        node_detector_yolo_v3_mul_5-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#aeadb909ea02bec78f92ca35ff0ccbaea">set_common_node_parameters</a>(<a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>{ <span class="stringliteral">&quot;detector_yolo_v3_mul_5&quot;</span>, target });</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;        _graph.add_connection(id_detector_yolo_v3_Exp_1, 0, id_detector_yolo_v3_mul_5, 0);</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;        _graph.add_connection(id_detector_yolo_v3_mul_4, 0, id_detector_yolo_v3_mul_5, 1);</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;        <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> id_detector_yolo_v3_Sigmoid_5 = _graph.add_node&lt;<a class="code" href="classarm__compute_1_1graph_1_1_activation_layer_node.xhtml">ActivationLayerNode</a>&gt;(</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;                                                   <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>{ <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa72ee60fba0509af07cbbd91398d8db9d">ActivationLayerInfo::ActivationFunction::LOGISTIC</a>, 0, 0 });</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;        <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> *node_detector_yolo_v3_Sigmoid_5 = _graph.node(id_detector_yolo_v3_Sigmoid_5);</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;        node_detector_yolo_v3_Sigmoid_5-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#aeadb909ea02bec78f92ca35ff0ccbaea">set_common_node_parameters</a>(<a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>{ <span class="stringliteral">&quot;detector_yolo_v3_Sigmoid_5&quot;</span>, target });</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;        _graph.add_connection(id_detector_yolo_v3_split_1, 3, id_detector_yolo_v3_Sigmoid_5, 0);</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;        <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> id_detector_yolo_v3_concat_5 = _graph.add_node&lt;<a class="code" href="classarm__compute_1_1graph_1_1_concatenate_layer_node.xhtml">ConcatenateLayerNode</a>&gt;(</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;                                                  4,</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;                                                  <a class="code" href="structarm__compute_1_1graph_1_1descriptors_1_1_concat_layer_descriptor.xhtml">descriptors::ConcatLayerDescriptor</a>{ x_dim });</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;        <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> *node_detector_yolo_v3_concat_5 = _graph.node(id_detector_yolo_v3_concat_5);</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;        node_detector_yolo_v3_concat_5-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#aeadb909ea02bec78f92ca35ff0ccbaea">set_common_node_parameters</a>(<a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>{ <span class="stringliteral">&quot;detector_yolo_v3_concat_5&quot;</span>, target });</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;        _graph.add_connection(id_detector_yolo_v3_mul_3, 0, id_detector_yolo_v3_concat_5, 0);</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;        _graph.add_connection(id_detector_yolo_v3_mul_5, 0, id_detector_yolo_v3_concat_5, 1);</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;        _graph.add_connection(id_detector_yolo_v3_Sigmoid_4, 0, id_detector_yolo_v3_concat_5, 2);</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;        _graph.add_connection(id_detector_yolo_v3_Sigmoid_5, 0, id_detector_yolo_v3_concat_5, 3);</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;        <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> id_input_to_detector_1 = _graph.add_node&lt;<a class="code" href="classarm__compute_1_1graph_1_1_input_node.xhtml">InputNode</a>&gt;(</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;                                            <a class="code" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml">TensorDescriptor</a></div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;        {</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;            <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>{ 255, 13, 13, 1 },</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;            <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>,</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(),</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;            <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a> });</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;        <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> *node_input_to_detector_1 = _graph.node(id_input_to_detector_1);</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;        node_input_to_detector_1-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#aeadb909ea02bec78f92ca35ff0ccbaea">set_common_node_parameters</a>(<a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>{ <span class="stringliteral">&quot;input_to_detector_1&quot;</span>, target });</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;        node_input_to_detector_1-&gt;output(0)-&gt;set_accessor(<a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, <span class="stringliteral">&quot;/cnn_data/yolov3_output_detector/input_to_detector_1.npy&quot;</span>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a>));</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;        <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> id_detector_yolo_v3_Reshape_2 = _graph.add_node&lt;<a class="code" href="classarm__compute_1_1graph_1_1_reshape_layer_node.xhtml">ReshapeLayerNode</a>&gt;(</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;                                                   <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>{ 85, 507 });</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;        <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> *node_detector_yolo_v3_Reshape_2 = _graph.node(id_detector_yolo_v3_Reshape_2);</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;        node_detector_yolo_v3_Reshape_2-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#aeadb909ea02bec78f92ca35ff0ccbaea">set_common_node_parameters</a>(<a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>{ <span class="stringliteral">&quot;detector_yolo_v3_Reshape_2&quot;</span>, target });</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;        _graph.add_connection(id_input_to_detector_1, 0, id_detector_yolo_v3_Reshape_2, 0);</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;        <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> id_detector_yolo_v3_split = _graph.add_node&lt;<a class="code" href="classarm__compute_1_1graph_1_1_split_layer_node.xhtml">SplitLayerNode</a>&gt;(</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;                                               4,</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;                                               0,</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;                                               std::vector&lt;int&gt; { 2, 2, 1, 80 });</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;        <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> *node_detector_yolo_v3_split = _graph.node(id_detector_yolo_v3_split);</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;        node_detector_yolo_v3_split-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#aeadb909ea02bec78f92ca35ff0ccbaea">set_common_node_parameters</a>(<a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>{ <span class="stringliteral">&quot;detector_yolo_v3_split&quot;</span>, target });</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;        _graph.add_connection(id_detector_yolo_v3_Reshape_2, 0, id_detector_yolo_v3_split, 0);</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;        <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> id_detector_yolo_v3_Sigmoid = _graph.add_node&lt;<a class="code" href="classarm__compute_1_1graph_1_1_activation_layer_node.xhtml">ActivationLayerNode</a>&gt;(</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;                                                 <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>{ <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa72ee60fba0509af07cbbd91398d8db9d">ActivationLayerInfo::ActivationFunction::LOGISTIC</a>, 0, 0 });</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;        <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> *node_detector_yolo_v3_Sigmoid = _graph.node(id_detector_yolo_v3_Sigmoid);</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;        node_detector_yolo_v3_Sigmoid-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#aeadb909ea02bec78f92ca35ff0ccbaea">set_common_node_parameters</a>(<a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>{ <span class="stringliteral">&quot;detector_yolo_v3_Sigmoid&quot;</span>, target });</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;        _graph.add_connection(id_detector_yolo_v3_split, 0, id_detector_yolo_v3_Sigmoid, 0);</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;        <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> id_detector_yolo_v3_add = _graph.add_node&lt;<a class="code" href="classarm__compute_1_1graph_1_1_eltwise_layer_node.xhtml">EltwiseLayerNode</a>&gt;(</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;                                             <a class="code" href="structarm__compute_1_1graph_1_1descriptors_1_1_eltwise_layer_descriptor.xhtml">descriptors::EltwiseLayerDescriptor</a></div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;        {</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;            <a class="code" href="namespacearm__compute_1_1graph.xhtml#aa12973876c037bddff8e9ece94aca0e4aec211f7c20af43e742bf2570c3cb84f9">EltwiseOperation::Add</a>,</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>() });</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;        <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> *node_detector_yolo_v3_add = _graph.node(id_detector_yolo_v3_add);</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;        node_detector_yolo_v3_add-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#aeadb909ea02bec78f92ca35ff0ccbaea">set_common_node_parameters</a>(<a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>{ <span class="stringliteral">&quot;detector_yolo_v3_add&quot;</span>, target });</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;        _graph.add_connection(id_detector_yolo_v3_Sigmoid, 0, id_detector_yolo_v3_add, 0);</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;        _graph.add_connection(id_detector_yolo_v3_Reshape_3, 0, id_detector_yolo_v3_add, 1);</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;        <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> id_detector_yolo_v3_mul = _graph.add_node&lt;<a class="code" href="classarm__compute_1_1graph_1_1_eltwise_layer_node.xhtml">EltwiseLayerNode</a>&gt;(</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;                                             <a class="code" href="structarm__compute_1_1graph_1_1descriptors_1_1_eltwise_layer_descriptor.xhtml">descriptors::EltwiseLayerDescriptor</a></div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;        {</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;            <a class="code" href="namespacearm__compute_1_1graph.xhtml#aa12973876c037bddff8e9ece94aca0e4a62b6d55816cf737bfc6f42e60df1a3f2">EltwiseOperation::Mul</a>,</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>() });</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;        <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> *node_detector_yolo_v3_mul = _graph.node(id_detector_yolo_v3_mul);</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;        node_detector_yolo_v3_mul-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#aeadb909ea02bec78f92ca35ff0ccbaea">set_common_node_parameters</a>(<a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>{ <span class="stringliteral">&quot;detector_yolo_v3_mul&quot;</span>, target });</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;        _graph.add_connection(id_detector_yolo_v3_add, 0, id_detector_yolo_v3_mul, 0);</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;        _graph.add_connection(id_detector_yolo_v3_mul_y, 0, id_detector_yolo_v3_mul, 1);</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;        <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> id_detector_yolo_v3_Sigmoid_1 = _graph.add_node&lt;<a class="code" href="classarm__compute_1_1graph_1_1_activation_layer_node.xhtml">ActivationLayerNode</a>&gt;(</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;                                                   <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>{ <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa72ee60fba0509af07cbbd91398d8db9d">ActivationLayerInfo::ActivationFunction::LOGISTIC</a>, 0, 0 });</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;        <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> *node_detector_yolo_v3_Sigmoid_1 = _graph.node(id_detector_yolo_v3_Sigmoid_1);</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;        node_detector_yolo_v3_Sigmoid_1-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#aeadb909ea02bec78f92ca35ff0ccbaea">set_common_node_parameters</a>(<a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>{ <span class="stringliteral">&quot;detector_yolo_v3_Sigmoid_1&quot;</span>, target });</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;        _graph.add_connection(id_detector_yolo_v3_split, 2, id_detector_yolo_v3_Sigmoid_1, 0);</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;        <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> id_detector_yolo_v3_Exp = _graph.add_node&lt;<a class="code" href="classarm__compute_1_1graph_1_1_unary_eltwise_layer_node.xhtml">UnaryEltwiseLayerNode</a>&gt;(</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;                                             <a class="code" href="structarm__compute_1_1graph_1_1descriptors_1_1_unary_eltwise_layer_descriptor.xhtml">descriptors::UnaryEltwiseLayerDescriptor</a></div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;        {</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;            <a class="code" href="namespacearm__compute_1_1graph.xhtml#a3805b9005b1d842bad30e09846e1f4e7acad39a154bffb61175f674d6eefaf6d0">UnaryEltwiseOperation::Exp</a>,</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>() });</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;        <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> *node_detector_yolo_v3_Exp = _graph.node(id_detector_yolo_v3_Exp);</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;        node_detector_yolo_v3_Exp-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#aeadb909ea02bec78f92ca35ff0ccbaea">set_common_node_parameters</a>(<a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>{ <span class="stringliteral">&quot;detector_yolo_v3_Exp&quot;</span>, target });</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;        _graph.add_connection(id_detector_yolo_v3_split, 1, id_detector_yolo_v3_Exp, 0);</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;        <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> id_detector_yolo_v3_mul_2 = _graph.add_node&lt;<a class="code" href="classarm__compute_1_1graph_1_1_eltwise_layer_node.xhtml">EltwiseLayerNode</a>&gt;(</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;                                               <a class="code" href="structarm__compute_1_1graph_1_1descriptors_1_1_eltwise_layer_descriptor.xhtml">descriptors::EltwiseLayerDescriptor</a></div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;        {</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;            <a class="code" href="namespacearm__compute_1_1graph.xhtml#aa12973876c037bddff8e9ece94aca0e4a62b6d55816cf737bfc6f42e60df1a3f2">EltwiseOperation::Mul</a>,</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>() });</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;        <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> *node_detector_yolo_v3_mul_2 = _graph.node(id_detector_yolo_v3_mul_2);</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;        node_detector_yolo_v3_mul_2-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#aeadb909ea02bec78f92ca35ff0ccbaea">set_common_node_parameters</a>(<a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>{ <span class="stringliteral">&quot;detector_yolo_v3_mul_2&quot;</span>, target });</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;        _graph.add_connection(id_detector_yolo_v3_Exp, 0, id_detector_yolo_v3_mul_2, 0);</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;        _graph.add_connection(id_detector_yolo_v3_mul_1, 0, id_detector_yolo_v3_mul_2, 1);</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;        <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> id_detector_yolo_v3_Sigmoid_2 = _graph.add_node&lt;<a class="code" href="classarm__compute_1_1graph_1_1_activation_layer_node.xhtml">ActivationLayerNode</a>&gt;(</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;                                                   <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>{ <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa72ee60fba0509af07cbbd91398d8db9d">ActivationLayerInfo::ActivationFunction::LOGISTIC</a>, 0, 0 });</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;        <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> *node_detector_yolo_v3_Sigmoid_2 = _graph.node(id_detector_yolo_v3_Sigmoid_2);</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;        node_detector_yolo_v3_Sigmoid_2-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#aeadb909ea02bec78f92ca35ff0ccbaea">set_common_node_parameters</a>(<a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>{ <span class="stringliteral">&quot;detector_yolo_v3_Sigmoid_2&quot;</span>, target });</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;        _graph.add_connection(id_detector_yolo_v3_split, 3, id_detector_yolo_v3_Sigmoid_2, 0);</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;        <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> id_detector_yolo_v3_concat_2 = _graph.add_node&lt;<a class="code" href="classarm__compute_1_1graph_1_1_concatenate_layer_node.xhtml">ConcatenateLayerNode</a>&gt;(</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;                                                  4,</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;                                                  <a class="code" href="structarm__compute_1_1graph_1_1descriptors_1_1_concat_layer_descriptor.xhtml">descriptors::ConcatLayerDescriptor</a>{ x_dim });</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;        <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> *node_detector_yolo_v3_concat_2 = _graph.node(id_detector_yolo_v3_concat_2);</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;        node_detector_yolo_v3_concat_2-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#aeadb909ea02bec78f92ca35ff0ccbaea">set_common_node_parameters</a>(<a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>{ <span class="stringliteral">&quot;detector_yolo_v3_concat_2&quot;</span>, target });</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;        _graph.add_connection(id_detector_yolo_v3_mul, 0, id_detector_yolo_v3_concat_2, 0);</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;        _graph.add_connection(id_detector_yolo_v3_mul_2, 0, id_detector_yolo_v3_concat_2, 1);</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;        _graph.add_connection(id_detector_yolo_v3_Sigmoid_1, 0, id_detector_yolo_v3_concat_2, 2);</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;        _graph.add_connection(id_detector_yolo_v3_Sigmoid_2, 0, id_detector_yolo_v3_concat_2, 3);</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;        <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> id_detector_yolo_v3_concat_9 = _graph.add_node&lt;<a class="code" href="classarm__compute_1_1graph_1_1_concatenate_layer_node.xhtml">ConcatenateLayerNode</a>&gt;(</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;                                                  3,</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;                                                  <a class="code" href="structarm__compute_1_1graph_1_1descriptors_1_1_concat_layer_descriptor.xhtml">descriptors::ConcatLayerDescriptor</a>{ y_dim });</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;        <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> *node_detector_yolo_v3_concat_9 = _graph.node(id_detector_yolo_v3_concat_9);</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;        node_detector_yolo_v3_concat_9-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#aeadb909ea02bec78f92ca35ff0ccbaea">set_common_node_parameters</a>(<a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>{ <span class="stringliteral">&quot;detector_yolo_v3_concat_9&quot;</span>, target });</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;        _graph.add_connection(id_detector_yolo_v3_concat_2, 0, id_detector_yolo_v3_concat_9, 0);</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;        _graph.add_connection(id_detector_yolo_v3_concat_5, 0, id_detector_yolo_v3_concat_9, 1);</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;        _graph.add_connection(id_detector_yolo_v3_concat_8, 0, id_detector_yolo_v3_concat_9, 2);</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;        <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> id_split = _graph.add_node&lt;<a class="code" href="classarm__compute_1_1graph_1_1_split_layer_node.xhtml">SplitLayerNode</a>&gt;(</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;                              5,</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;                              0,</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;                              std::vector&lt;int&gt; { 1, 1, 1, 1, -1 });</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;        <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> *node_split = _graph.node(id_split);</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;        node_split-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#aeadb909ea02bec78f92ca35ff0ccbaea">set_common_node_parameters</a>(<a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>{ <span class="stringliteral">&quot;split&quot;</span>, target });</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;        _graph.add_connection(id_detector_yolo_v3_concat_9, 0, id_split, 0);</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;        <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> id_truediv = _graph.add_node&lt;<a class="code" href="classarm__compute_1_1graph_1_1_eltwise_layer_node.xhtml">EltwiseLayerNode</a>&gt;(</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;                                <a class="code" href="structarm__compute_1_1graph_1_1descriptors_1_1_eltwise_layer_descriptor.xhtml">descriptors::EltwiseLayerDescriptor</a></div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;        {</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;            <a class="code" href="namespacearm__compute_1_1graph.xhtml#aa12973876c037bddff8e9ece94aca0e4a62b6d55816cf737bfc6f42e60df1a3f2">EltwiseOperation::Mul</a>,</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>() });</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;        <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> *node_truediv = _graph.node(id_truediv);</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;        node_truediv-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#aeadb909ea02bec78f92ca35ff0ccbaea">set_common_node_parameters</a>(<a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>{ <span class="stringliteral">&quot;truediv&quot;</span>, target });</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;        _graph.add_connection(id_split, 2, id_truediv, 0);</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;        _graph.add_connection(id_ConstantFolding_truediv_recip, 0, id_truediv, 1);</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;        <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> id_sub = _graph.add_node&lt;<a class="code" href="classarm__compute_1_1graph_1_1_eltwise_layer_node.xhtml">EltwiseLayerNode</a>&gt;(</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;                            <a class="code" href="structarm__compute_1_1graph_1_1descriptors_1_1_eltwise_layer_descriptor.xhtml">descriptors::EltwiseLayerDescriptor</a></div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;        {</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;            <a class="code" href="namespacearm__compute_1_1graph.xhtml#aa12973876c037bddff8e9ece94aca0e4ae80155eceb940c89e2de63ad05868db2">EltwiseOperation::Sub</a>,</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>() });</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;        <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> *node_sub = _graph.node(id_sub);</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;        node_sub-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#aeadb909ea02bec78f92ca35ff0ccbaea">set_common_node_parameters</a>(<a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>{ <span class="stringliteral">&quot;sub&quot;</span>, target });</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;        _graph.add_connection(id_split, 0, id_sub, 0);</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;        _graph.add_connection(id_truediv, 0, id_sub, 1);</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;        <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> id_add = _graph.add_node&lt;<a class="code" href="classarm__compute_1_1graph_1_1_eltwise_layer_node.xhtml">EltwiseLayerNode</a>&gt;(</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;                            <a class="code" href="structarm__compute_1_1graph_1_1descriptors_1_1_eltwise_layer_descriptor.xhtml">descriptors::EltwiseLayerDescriptor</a></div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;        {</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;            <a class="code" href="namespacearm__compute_1_1graph.xhtml#aa12973876c037bddff8e9ece94aca0e4aec211f7c20af43e742bf2570c3cb84f9">EltwiseOperation::Add</a>,</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>() });</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;        <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> *node_add = _graph.node(id_add);</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;        node_add-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#aeadb909ea02bec78f92ca35ff0ccbaea">set_common_node_parameters</a>(<a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>{ <span class="stringliteral">&quot;add&quot;</span>, target });</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;        _graph.add_connection(id_split, 0, id_add, 0);</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;        _graph.add_connection(id_truediv, 0, id_add, 1);</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;        <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> id_truediv_1 = _graph.add_node&lt;<a class="code" href="classarm__compute_1_1graph_1_1_eltwise_layer_node.xhtml">EltwiseLayerNode</a>&gt;(</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;                                  <a class="code" href="structarm__compute_1_1graph_1_1descriptors_1_1_eltwise_layer_descriptor.xhtml">descriptors::EltwiseLayerDescriptor</a></div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;        {</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;            <a class="code" href="namespacearm__compute_1_1graph.xhtml#aa12973876c037bddff8e9ece94aca0e4a62b6d55816cf737bfc6f42e60df1a3f2">EltwiseOperation::Mul</a>,</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>() });</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;        <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> *node_truediv_1 = _graph.node(id_truediv_1);</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;        node_truediv_1-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#aeadb909ea02bec78f92ca35ff0ccbaea">set_common_node_parameters</a>(<a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>{ <span class="stringliteral">&quot;truediv_1&quot;</span>, target });</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;        _graph.add_connection(id_split, 3, id_truediv_1, 0);</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;        _graph.add_connection(id_ConstantFolding_truediv_1_recip, 0, id_truediv_1, 1);</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;        <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> id_sub_1 = _graph.add_node&lt;<a class="code" href="classarm__compute_1_1graph_1_1_eltwise_layer_node.xhtml">EltwiseLayerNode</a>&gt;(</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;                              <a class="code" href="structarm__compute_1_1graph_1_1descriptors_1_1_eltwise_layer_descriptor.xhtml">descriptors::EltwiseLayerDescriptor</a></div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;        {</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;            <a class="code" href="namespacearm__compute_1_1graph.xhtml#aa12973876c037bddff8e9ece94aca0e4ae80155eceb940c89e2de63ad05868db2">EltwiseOperation::Sub</a>,</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>() });</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;        <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> *node_sub_1 = _graph.node(id_sub_1);</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;        node_sub_1-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#aeadb909ea02bec78f92ca35ff0ccbaea">set_common_node_parameters</a>(<a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>{ <span class="stringliteral">&quot;sub_1&quot;</span>, target });</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;        _graph.add_connection(id_split, 1, id_sub_1, 0);</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;        _graph.add_connection(id_truediv_1, 0, id_sub_1, 1);</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;        <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> id_add_1 = _graph.add_node&lt;<a class="code" href="classarm__compute_1_1graph_1_1_eltwise_layer_node.xhtml">EltwiseLayerNode</a>&gt;(</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;                              <a class="code" href="structarm__compute_1_1graph_1_1descriptors_1_1_eltwise_layer_descriptor.xhtml">descriptors::EltwiseLayerDescriptor</a></div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;        {</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;            <a class="code" href="namespacearm__compute_1_1graph.xhtml#aa12973876c037bddff8e9ece94aca0e4aec211f7c20af43e742bf2570c3cb84f9">EltwiseOperation::Add</a>,</div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>() });</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;        <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> *node_add_1 = _graph.node(id_add_1);</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;        node_add_1-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#aeadb909ea02bec78f92ca35ff0ccbaea">set_common_node_parameters</a>(<a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>{ <span class="stringliteral">&quot;add_1&quot;</span>, target });</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;        _graph.add_connection(id_split, 1, id_add_1, 0);</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;        _graph.add_connection(id_truediv_1, 0, id_add_1, 1);</div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;        <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> id_output_boxes = _graph.add_node&lt;<a class="code" href="classarm__compute_1_1graph_1_1_concatenate_layer_node.xhtml">ConcatenateLayerNode</a>&gt;(</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;                                     5,</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;                                     <a class="code" href="structarm__compute_1_1graph_1_1descriptors_1_1_concat_layer_descriptor.xhtml">descriptors::ConcatLayerDescriptor</a>{ x_dim });</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;        <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> *node_output_boxes = _graph.node(id_output_boxes);</div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;        node_output_boxes-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#aeadb909ea02bec78f92ca35ff0ccbaea">set_common_node_parameters</a>(<a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>{ <span class="stringliteral">&quot;output_boxes&quot;</span>, target });</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;        _graph.add_connection(id_sub, 0, id_output_boxes, 0);</div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;        _graph.add_connection(id_sub_1, 0, id_output_boxes, 1);</div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;        _graph.add_connection(id_add, 0, id_output_boxes, 2);</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;        _graph.add_connection(id_add_1, 0, id_output_boxes, 3);</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;        _graph.add_connection(id_split, 4, id_output_boxes, 4);</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;</div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;        <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> id_output_140640247016360   = _graph.add_node&lt;<a class="code" href="classarm__compute_1_1graph_1_1_output_node.xhtml">OutputNode</a>&gt;();</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;        <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> *node_output_140640247016360 = _graph.node(id_output_140640247016360);</div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;        node_output_140640247016360-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#aeadb909ea02bec78f92ca35ff0ccbaea">set_common_node_parameters</a>(<a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>{ <span class="stringliteral">&quot;output_140640247016360&quot;</span>, target });</div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;        _graph.add_connection(id_output_boxes, 0, id_output_140640247016360, 0);</div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;        node_output_140640247016360-&gt;input(0)-&gt;set_accessor(<a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a10e9c53263d766cbd37e4e37f5e8091e">get_npy_output_accessor</a>(expected_output_filename.<a class="code" href="classarm__compute_1_1utils_1_1_simple_option.xhtml#ab5d906b55180c260032ce43d6c5d4d06">value</a>(), <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(85U, 10647U), <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a>));</div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;</div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;    }</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;</div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;    <a class="code" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;graph()</div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;    {</div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;        <span class="keywordflow">return</span> _graph;</div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;    }</div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;</div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;    <a class="code" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> _graph;</div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;};</div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;<span class="keyword">class </span>GraphYoloV3OutputDetectorExample : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1utils_1_1_example.xhtml">Example</a></div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;{</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;    GraphYoloV3OutputDetectorExample()</div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;        : cmd_parser(), common_opts(cmd_parser), common_params()</div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;    {</div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;        expected_output_filename = cmd_parser.add_option&lt;<a class="code" href="classarm__compute_1_1utils_1_1_simple_option.xhtml">SimpleOption&lt;std::string&gt;</a>&gt;(<span class="stringliteral">&quot;expected-output-filename&quot;</span>, <span class="stringliteral">&quot;&quot;</span>);</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;        expected_output_filename-&gt;<a class="code" href="classarm__compute_1_1utils_1_1_option.xhtml#a48a2672f362eeed9a3e93403f4d3de37">set_help</a>(<span class="stringliteral">&quot;Name of npy file containing the expected output to validate the graph output.&quot;</span>);</div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;    }</div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;    GraphYoloV3OutputDetectorExample(<span class="keyword">const</span> GraphYoloV3OutputDetectorExample &amp;) = <span class="keyword">delete</span>;</div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;    GraphYoloV3OutputDetectorExample &amp;operator=(<span class="keyword">const</span> GraphYoloV3OutputDetectorExample &amp;) = <span class="keyword">delete</span>;</div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;</div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;    <span class="keywordtype">bool</span> do_setup(<span class="keywordtype">int</span> argc, <span class="keywordtype">char</span> **argv)<span class="keyword"> override</span></div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;        <span class="comment">// Parse arguments</span></div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;        cmd_parser.parse(argc, argv);</div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;        cmd_parser.validate();</div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;</div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;        <span class="comment">// Consume common parameters</span></div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;        common_params = <a class="code" href="namespacearm__compute_1_1utils.xhtml#a2593e1f13f425f627658900657f73dc3">consume_common_graph_parameters</a>(common_opts);</div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;</div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;        <span class="comment">// Return when help menu is requested</span></div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;        <span class="keywordflow">if</span>(common_params.<a class="code" href="structarm__compute_1_1utils_1_1_common_graph_params.xhtml#a545363392790133c5dec1fd9e2cb279d">help</a>)</div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;        {</div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;            cmd_parser.print_help(argv[0]);</div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;        }</div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;</div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;        <span class="comment">// Print parameter values</span></div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;        std::cout &lt;&lt; common_params &lt;&lt; std::endl;</div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;</div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;        model.setup(common_params, *expected_output_filename);</div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;</div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;        <a class="code" href="structarm__compute_1_1graph_1_1_graph_config.xhtml">GraphConfig</a> config;</div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;        config.<a class="code" href="structarm__compute_1_1graph_1_1_graph_config.xhtml#a08963f7335eef295237ab460863bc3d5">num_threads</a> = common_params.<a class="code" href="structarm__compute_1_1utils_1_1_common_graph_params.xhtml#a4f987a98d3e1221916748962e45399fe">threads</a>;</div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;        config.<a class="code" href="structarm__compute_1_1graph_1_1_graph_config.xhtml#a9da74af255a3e6ea61180d4a03192a48">use_tuner</a>   = common_params.<a class="code" href="structarm__compute_1_1utils_1_1_common_graph_params.xhtml#ad2e53638e2c19bbbe968b95f60256cee">enable_tuner</a>;</div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;        config.<a class="code" href="structarm__compute_1_1graph_1_1_graph_config.xhtml#a249f3f713c6ea8f564e760559cf509f4">tuner_mode</a>  = common_params.<a class="code" href="structarm__compute_1_1utils_1_1_common_graph_params.xhtml#a3ebea56a33e2632ae2a9b25b160e0705">tuner_mode</a>;</div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;        config.<a class="code" href="structarm__compute_1_1graph_1_1_graph_config.xhtml#a5cabfb35cd0014387f7ec2a0c362c20f">tuner_file</a>  = common_params.<a class="code" href="structarm__compute_1_1utils_1_1_common_graph_params.xhtml#a5cabfb35cd0014387f7ec2a0c362c20f">tuner_file</a>;</div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;</div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;        context.set_config(config);</div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;</div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;        <span class="keyword">auto</span> pass_manager = <a class="code" href="namespacearm__compute_1_1graph.xhtml#a0a2d08174e24bcb1dfdf9d8893cd9363">create_default_pass_manager</a>(common_params.<a class="code" href="structarm__compute_1_1utils_1_1_common_graph_params.xhtml#a29d9bc83bfba2fba21af47e575569dde">target</a>, config);</div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;        manager.finalize_graph(model.graph(), context, pass_manager, common_params.<a class="code" href="structarm__compute_1_1utils_1_1_common_graph_params.xhtml#a29d9bc83bfba2fba21af47e575569dde">target</a>);</div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;</div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;    }</div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;</div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;    <span class="keywordtype">void</span> do_run()<span class="keyword"> override</span></div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;        manager.execute_graph(model.graph());</div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;    }</div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;</div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;    <a class="code" href="classarm__compute_1_1utils_1_1_command_line_parser.xhtml">CommandLineParser</a>  cmd_parser;</div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;    <a class="code" href="classarm__compute_1_1utils_1_1_common_graph_options.xhtml">CommonGraphOptions</a> common_opts;</div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;    <a class="code" href="structarm__compute_1_1utils_1_1_common_graph_params.xhtml">CommonGraphParams</a>  common_params;</div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;</div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;    <a class="code" href="classarm__compute_1_1graph_1_1_graph_context.xhtml">GraphContext</a> context{};</div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;    <a class="code" href="classarm__compute_1_1graph_1_1_graph_manager.xhtml">GraphManager</a> manager{};</div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;</div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;    GraphYoloV3OutputDetector model{};</div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;</div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;    <a class="code" href="classarm__compute_1_1utils_1_1_simple_option.xhtml">SimpleOption&lt;std::string&gt;</a> *expected_output_filename{ <span class="keyword">nullptr</span> };</div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;};</div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;</div><div class="line"><a name="l00623"></a><span class="lineno"><a class="line" href="graph__yolov3__output__detector_8cpp.xhtml#a3c04138a5bfe5d72780bb7e82a18e627">  623</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="graph__yolov3__output__detector_8cpp.xhtml#a3c04138a5bfe5d72780bb7e82a18e627">main</a>(<span class="keywordtype">int</span> argc, <span class="keywordtype">char</span> **argv)</div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;{</div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;    <span class="keywordflow">return</span> run_example&lt;GraphYoloV3OutputDetectorExample&gt;(argc, argv);</div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;}</div><div class="ttc" id="structarm__compute_1_1graph_1_1_node_params_xhtml"><div class="ttname"><a href="structarm__compute_1_1graph_1_1_node_params.xhtml">arm_compute::graph::NodeParams</a></div><div class="ttdoc">Common node parameters.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00205">Types.h:205</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_split_layer_node_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_split_layer_node.xhtml">arm_compute::graph::SplitLayerNode</a></div><div class="ttdoc">Split Layer node.</div><div class="ttdef"><b>Definition:</b> <a href="_split_layer_node_8h_source.xhtml#l00036">SplitLayerNode.h:36</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_eltwise_layer_node_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_eltwise_layer_node.xhtml">arm_compute::graph::EltwiseLayerNode</a></div><div class="ttdoc">Eltwise Layer node.</div><div class="ttdef"><b>Definition:</b> <a href="_eltwise_layer_node_8h_source.xhtml#l00034">EltwiseLayerNode.h:34</a></div></div>
<div class="ttc" id="structarm__compute_1_1graph_1_1_graph_config_xhtml"><div class="ttname"><a href="structarm__compute_1_1graph_1_1_graph_config.xhtml">arm_compute::graph::GraphConfig</a></div><div class="ttdoc">Graph configuration structure Device target types.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00080">Types.h:80</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarm__compute_1_1_tensor_shape.xhtml">arm_compute::TensorShape</a></div><div class="ttdoc">Shape of a tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_shape_8h_source.xhtml#l00039">TensorShape.h:39</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_acf5f12bbab64dd614bd8220c97fe484f"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">arm_compute::test::validation::data_layout</a></div><div class="ttdeci">const DataLayout data_layout</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_o_n_2_im2_col_8cpp_source.xhtml#l00146">Im2Col.cpp:146</a></div></div>
<div class="ttc" id="_toolchain_support_8h_xhtml"><div class="ttname"><a href="_toolchain_support_8h.xhtml">ToolchainSupport.h</a></div></div>
<div class="ttc" id="structarm__compute_1_1graph_1_1_graph_config_xhtml_a249f3f713c6ea8f564e760559cf509f4"><div class="ttname"><a href="structarm__compute_1_1graph_1_1_graph_config.xhtml#a249f3f713c6ea8f564e760559cf509f4">arm_compute::graph::GraphConfig::tuner_mode</a></div><div class="ttdeci">CLTunerMode tuner_mode</div><div class="ttdoc">Tuner mode to be used by the CL tuner.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00087">Types.h:87</a></div></div>
<div class="ttc" id="structarm__compute_1_1graph_1_1_tensor_descriptor_xhtml"><div class="ttname"><a href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml">arm_compute::graph::TensorDescriptor</a></div><div class="ttdoc">Tensor metadata class.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_descriptor_8h_source.xhtml#l00039">TensorDescriptor.h:39</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a74ce3f7420453d3446218ff3b7453e02"><div class="ttname"><a href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02">arm_compute::DataLayoutDimension</a></div><div class="ttdeci">DataLayoutDimension</div><div class="ttdoc">[DataLayout enum definition]</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00129">Types.h:129</a></div></div>
<div class="ttc" id="utils_2_utils_8h_xhtml"><div class="ttname"><a href="utils_2_utils_8h.xhtml">Utils.h</a></div></div>
<div class="ttc" id="structarm__compute_1_1utils_1_1_common_graph_params_xhtml_a29d9bc83bfba2fba21af47e575569dde"><div class="ttname"><a href="structarm__compute_1_1utils_1_1_common_graph_params.xhtml#a29d9bc83bfba2fba21af47e575569dde">arm_compute::utils::CommonGraphParams::target</a></div><div class="ttdeci">arm_compute::graph::Target target</div><div class="ttdef"><b>Definition:</b> <a href="_common_graph_options_8h_source.xhtml#l00094">CommonGraphOptions.h:94</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">arm_compute::Format::F32</a></div><div class="ttdoc">1 channel, 1 F32 per channel</div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a74ce3f7420453d3446218ff3b7453e02ad770ba3ce18fa409965dfdf5e7c348e6"><div class="ttname"><a href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02ad770ba3ce18fa409965dfdf5e7c348e6">arm_compute::DataLayoutDimension::HEIGHT</a></div><div class="ttdoc">height</div></div>
<div class="ttc" id="namespacearm__compute_1_1utils_xhtml_a2593e1f13f425f627658900657f73dc3"><div class="ttname"><a href="namespacearm__compute_1_1utils.xhtml#a2593e1f13f425f627658900657f73dc3">arm_compute::utils::consume_common_graph_parameters</a></div><div class="ttdeci">void consume_common_graph_parameters(CommonGraphValidateOptions &amp;options, CommonParams &amp;common_params)</div><div class="ttdoc">Consumes the consume_common_graph_parameters graph options and creates a structure containing any inf...</div><div class="ttdef"><b>Definition:</b> <a href="graph__validate__utils_8h_source.xhtml#l00316">graph_validate_utils.h:316</a></div></div>
<div class="ttc" id="_graph_8h_xhtml"><div class="ttname"><a href="_graph_8h.xhtml">graph.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1utils_1_1_common_graph_options_xhtml"><div class="ttname"><a href="classarm__compute_1_1utils_1_1_common_graph_options.xhtml">arm_compute::utils::CommonGraphOptions</a></div><div class="ttdoc">Common command line options used to configure the graph examples.</div><div class="ttdef"><b>Definition:</b> <a href="_common_graph_options_8h_source.xhtml#l00129">CommonGraphOptions.h:129</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph__utils_xhtml_a10e9c53263d766cbd37e4e37f5e8091e"><div class="ttname"><a href="namespacearm__compute_1_1graph__utils.xhtml#a10e9c53263d766cbd37e4e37f5e8091e">arm_compute::graph_utils::get_npy_output_accessor</a></div><div class="ttdeci">std::unique_ptr&lt; graph::ITensorAccessor &gt; get_npy_output_accessor(const std::string &amp;npy_path, TensorShape shape, DataType data_type, DataLayout data_layout=DataLayout::NCHW, std::ostream &amp;output_stream=std::cout)</div><div class="ttdoc">Generates appropriate npy output accessor according to the specified npy_path.</div><div class="ttdef"><b>Definition:</b> <a href="_graph_utils_8h_source.xhtml#l00611">GraphUtils.h:611</a></div></div>
<div class="ttc" id="classarm__compute_1_1utils_1_1_command_line_parser_xhtml"><div class="ttname"><a href="classarm__compute_1_1utils_1_1_command_line_parser.xhtml">arm_compute::utils::CommandLineParser</a></div><div class="ttdoc">Class to parse command line arguments.</div><div class="ttdef"><b>Definition:</b> <a href="_command_line_parser_8h_source.xhtml#l00044">CommandLineParser.h:44</a></div></div>
<div class="ttc" id="structarm__compute_1_1utils_1_1_common_graph_params_xhtml_aa56f0562febf49bc0e29a4257551191b"><div class="ttname"><a href="structarm__compute_1_1utils_1_1_common_graph_params.xhtml#aa56f0562febf49bc0e29a4257551191b">arm_compute::utils::CommonGraphParams::data_layout</a></div><div class="ttdeci">arm_compute::DataLayout data_layout</div><div class="ttdef"><b>Definition:</b> <a href="_common_graph_options_8h_source.xhtml#l00096">CommonGraphOptions.h:96</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_graph_context_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph_context.xhtml">arm_compute::graph::GraphContext</a></div><div class="ttdoc">Graph context.</div><div class="ttdef"><b>Definition:</b> <a href="_graph_context_8h_source.xhtml#l00057">GraphContext.h:57</a></div></div>
<div class="ttc" id="structarm__compute_1_1utils_1_1_common_graph_params_xhtml_a3ebea56a33e2632ae2a9b25b160e0705"><div class="ttname"><a href="structarm__compute_1_1utils_1_1_common_graph_params.xhtml#a3ebea56a33e2632ae2a9b25b160e0705">arm_compute::utils::CommonGraphParams::tuner_mode</a></div><div class="ttdeci">arm_compute::CLTunerMode tuner_mode</div><div class="ttdef"><b>Definition:</b> <a href="_common_graph_options_8h_source.xhtml#l00099">CommonGraphOptions.h:99</a></div></div>
<div class="ttc" id="classarm__compute_1_1_activation_layer_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml">arm_compute::ActivationLayerInfo</a></div><div class="ttdoc">Activation Layer Information class.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01517">Types.h:1517</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2020 Arm Limited.</div><div class="ttdef"><b>Definition:</b> <a href="00__introduction_8dox_source.xhtml#l00024">00_introduction.dox:24</a></div></div>
<div class="ttc" id="structarm__compute_1_1graph_1_1_graph_config_xhtml_a5cabfb35cd0014387f7ec2a0c362c20f"><div class="ttname"><a href="structarm__compute_1_1graph_1_1_graph_config.xhtml#a5cabfb35cd0014387f7ec2a0c362c20f">arm_compute::graph::GraphConfig::tuner_file</a></div><div class="ttdeci">std::string tuner_file</div><div class="ttdoc">File to load/store tuning values from.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00089">Types.h:89</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_aa12973876c037bddff8e9ece94aca0e4ae80155eceb940c89e2de63ad05868db2"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#aa12973876c037bddff8e9ece94aca0e4ae80155eceb940c89e2de63ad05868db2">arm_compute::graph::EltwiseOperation::Sub</a></div><div class="ttdoc">Arithmetic subtraction.</div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_a3805b9005b1d842bad30e09846e1f4e7acad39a154bffb61175f674d6eefaf6d0"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#a3805b9005b1d842bad30e09846e1f4e7acad39a154bffb61175f674d6eefaf6d0">arm_compute::graph::UnaryEltwiseOperation::Exp</a></div><div class="ttdoc">Exp.</div></div>
<div class="ttc" id="classarm__compute_1_1_quantization_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_quantization_info.xhtml">arm_compute::QuantizationInfo</a></div><div class="ttdoc">Quantization information.</div><div class="ttdef"><b>Definition:</b> <a href="_quantization_info_8h_source.xhtml#l00070">QuantizationInfo.h:70</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_i_node_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_i_node.xhtml">arm_compute::graph::INode</a></div><div class="ttdoc">Node interface.</div><div class="ttdef"><b>Definition:</b> <a href="_i_node_8h_source.xhtml#l00045">INode.h:45</a></div></div>
<div class="ttc" id="_graph_utils_8h_xhtml"><div class="ttname"><a href="_graph_utils_8h.xhtml">GraphUtils.h</a></div></div>
<div class="ttc" id="arm__compute_2graph_2_utils_8h_xhtml"><div class="ttname"><a href="arm__compute_2graph_2_utils_8h.xhtml">Utils.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_output_node_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_output_node.xhtml">arm_compute::graph::OutputNode</a></div><div class="ttdoc">Output Layer node.</div><div class="ttdef"><b>Definition:</b> <a href="_output_node_8h_source.xhtml#l00034">OutputNode.h:34</a></div></div>
<div class="ttc" id="classarm__compute_1_1utils_1_1_example_xhtml"><div class="ttname"><a href="classarm__compute_1_1utils_1_1_example.xhtml">arm_compute::utils::Example</a></div><div class="ttdoc">Abstract Example class.</div><div class="ttdef"><b>Definition:</b> <a href="utils_2_utils_8h_source.xhtml#l00075">Utils.h:75</a></div></div>
<div class="ttc" id="structarm__compute_1_1graph_1_1descriptors_1_1_eltwise_layer_descriptor_xhtml"><div class="ttname"><a href="structarm__compute_1_1graph_1_1descriptors_1_1_eltwise_layer_descriptor.xhtml">arm_compute::graph::descriptors::EltwiseLayerDescriptor</a></div><div class="ttdoc">Elementwise layer descriptor.</div><div class="ttdef"><b>Definition:</b> <a href="_layer_descriptors_8h_source.xhtml#l00069">LayerDescriptors.h:69</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a></div><div class="ttdef"><b>Definition:</b> <a href="_topological_sort_8h_source.xhtml#l00033">TopologicalSort.h:33</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_graph_manager_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph_manager.xhtml">arm_compute::graph::GraphManager</a></div><div class="ttdoc">Graph manager class.</div><div class="ttdef"><b>Definition:</b> <a href="_graph_manager_8h_source.xhtml#l00045">GraphManager.h:45</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_aa12973876c037bddff8e9ece94aca0e4aec211f7c20af43e742bf2570c3cb84f9"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#aa12973876c037bddff8e9ece94aca0e4aec211f7c20af43e742bf2570c3cb84f9">arm_compute::graph::EltwiseOperation::Add</a></div><div class="ttdoc">Arithmetic addition.</div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_reshape_layer_node_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_reshape_layer_node.xhtml">arm_compute::graph::ReshapeLayerNode</a></div><div class="ttdoc">Reshape Layer node.</div><div class="ttdef"><b>Definition:</b> <a href="_reshape_layer_node_8h_source.xhtml#l00034">ReshapeLayerNode.h:34</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_concatenate_layer_node_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_concatenate_layer_node.xhtml">arm_compute::graph::ConcatenateLayerNode</a></div><div class="ttdoc">Concatenation Layer node.</div><div class="ttdef"><b>Definition:</b> <a href="_concatenate_layer_node_8h_source.xhtml#l00034">ConcatenateLayerNode.h:34</a></div></div>
<div class="ttc" id="structarm__compute_1_1utils_1_1_common_graph_params_xhtml_a5cabfb35cd0014387f7ec2a0c362c20f"><div class="ttname"><a href="structarm__compute_1_1utils_1_1_common_graph_params.xhtml#a5cabfb35cd0014387f7ec2a0c362c20f">arm_compute::utils::CommonGraphParams::tuner_file</a></div><div class="ttdeci">std::string tuner_file</div><div class="ttdef"><b>Definition:</b> <a href="_common_graph_options_8h_source.xhtml#l00106">CommonGraphOptions.h:106</a></div></div>
<div class="ttc" id="classarm__compute_1_1utils_1_1_simple_option_xhtml_ab5d906b55180c260032ce43d6c5d4d06"><div class="ttname"><a href="classarm__compute_1_1utils_1_1_simple_option.xhtml#ab5d906b55180c260032ce43d6c5d4d06">arm_compute::utils::SimpleOption::value</a></div><div class="ttdeci">const T &amp; value() const</div><div class="ttdoc">Get the option value.</div><div class="ttdef"><b>Definition:</b> <a href="_simple_option_8h_source.xhtml#l00112">SimpleOption.h:112</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a74ce3f7420453d3446218ff3b7453e02af52e9c50a060add65a035429b2a22229"><div class="ttname"><a href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02af52e9c50a060add65a035429b2a22229">arm_compute::DataLayoutDimension::CHANNEL</a></div><div class="ttdoc">channel</div></div>
<div class="ttc" id="graph__yolov3__output__detector_8cpp_xhtml_a3c04138a5bfe5d72780bb7e82a18e627"><div class="ttname"><a href="graph__yolov3__output__detector_8cpp.xhtml#a3c04138a5bfe5d72780bb7e82a18e627">main</a></div><div class="ttdeci">int main(int argc, char **argv)</div><div class="ttdef"><b>Definition:</b> <a href="graph__yolov3__output__detector_8cpp_source.xhtml#l00623">graph_yolov3_output_detector.cpp:623</a></div></div>
<div class="ttc" id="classarm__compute_1_1_activation_layer_info_xhtml_a56297e0f7b215eea46c818cb7528d9eaa72ee60fba0509af07cbbd91398d8db9d"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa72ee60fba0509af07cbbd91398d8db9d">arm_compute::ActivationLayerInfo::ActivationFunction::LOGISTIC</a></div><div class="ttdoc">Logistic (  )</div></div>
<div class="ttc" id="structarm__compute_1_1utils_1_1_common_graph_params_xhtml_a545363392790133c5dec1fd9e2cb279d"><div class="ttname"><a href="structarm__compute_1_1utils_1_1_common_graph_params.xhtml#a545363392790133c5dec1fd9e2cb279d">arm_compute::utils::CommonGraphParams::help</a></div><div class="ttdeci">bool help</div><div class="ttdef"><b>Definition:</b> <a href="_common_graph_options_8h_source.xhtml#l00092">CommonGraphOptions.h:92</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_a31488d29805a596498c0234ae392d35d"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35d">arm_compute::graph::Target</a></div><div class="ttdeci">Target</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00093">Types.h:93</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_i_node_xhtml_aeadb909ea02bec78f92ca35ff0ccbaea"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_i_node.xhtml#aeadb909ea02bec78f92ca35ff0ccbaea">arm_compute::graph::INode::set_common_node_parameters</a></div><div class="ttdeci">void set_common_node_parameters(NodeParams common_params)</div><div class="ttdoc">Sets common node parameters.</div><div class="ttdef"><b>Definition:</b> <a href="_i_node_8cpp_source.xhtml#l00061">INode.cpp:61</a></div></div>
<div class="ttc" id="_common_graph_options_8h_xhtml"><div class="ttname"><a href="_common_graph_options_8h.xhtml">CommonGraphOptions.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_input_node_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_input_node.xhtml">arm_compute::graph::InputNode</a></div><div class="ttdoc">Input Layer node.</div><div class="ttdef"><b>Definition:</b> <a href="_input_node_8h_source.xhtml#l00034">InputNode.h:34</a></div></div>
<div class="ttc" id="structarm__compute_1_1utils_1_1_common_graph_params_xhtml_a4f987a98d3e1221916748962e45399fe"><div class="ttname"><a href="structarm__compute_1_1utils_1_1_common_graph_params.xhtml#a4f987a98d3e1221916748962e45399fe">arm_compute::utils::CommonGraphParams::threads</a></div><div class="ttdeci">int threads</div><div class="ttdef"><b>Definition:</b> <a href="_common_graph_options_8h_source.xhtml#l00093">CommonGraphOptions.h:93</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_graph_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph.xhtml">arm_compute::graph::Graph</a></div><div class="ttdoc">Graph class.</div><div class="ttdef"><b>Definition:</b> <a href="graph_2_graph_8h_source.xhtml#l00053">Graph.h:53</a></div></div>
<div class="ttc" id="structarm__compute_1_1utils_1_1_common_graph_params_xhtml"><div class="ttname"><a href="structarm__compute_1_1utils_1_1_common_graph_params.xhtml">arm_compute::utils::CommonGraphParams</a></div><div class="ttdoc">Structure holding all the common graph parameters.</div><div class="ttdef"><b>Definition:</b> <a href="_common_graph_options_8h_source.xhtml#l00090">CommonGraphOptions.h:90</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_a56952a8591a9d8481450ae707ae355e7"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">arm_compute::graph::NodeID</a></div><div class="ttdeci">unsigned int NodeID</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00066">Types.h:66</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_activation_layer_node_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_activation_layer_node.xhtml">arm_compute::graph::ActivationLayerNode</a></div><div class="ttdoc">Activation Layer node.</div><div class="ttdef"><b>Definition:</b> <a href="_activation_layer_node_8h_source.xhtml#l00034">ActivationLayerNode.h:34</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1utils_xhtml"><div class="ttname"><a href="namespacearm__compute_1_1utils.xhtml">arm_compute::utils</a></div><div class="ttdef"><b>Definition:</b> <a href="_safe_ops_8h_source.xhtml#l00032">SafeOps.h:32</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_const_node_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_const_node.xhtml">arm_compute::graph::ConstNode</a></div><div class="ttdoc">Const node.</div><div class="ttdef"><b>Definition:</b> <a href="_const_node_8h_source.xhtml#l00034">ConstNode.h:34</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_unary_eltwise_layer_node_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_unary_eltwise_layer_node.xhtml">arm_compute::graph::UnaryEltwiseLayerNode</a></div><div class="ttdoc">Unary Eltwise Layer node.</div><div class="ttdef"><b>Definition:</b> <a href="_eltwise_layer_node_8h_source.xhtml#l00091">EltwiseLayerNode.h:91</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51"><div class="ttname"><a href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">arm_compute::DataLayout::NHWC</a></div><div class="ttdoc">Num samples, height, width, channels.</div></div>
<div class="ttc" id="structarm__compute_1_1graph_1_1_graph_config_xhtml_a9da74af255a3e6ea61180d4a03192a48"><div class="ttname"><a href="structarm__compute_1_1graph_1_1_graph_config.xhtml#a9da74af255a3e6ea61180d4a03192a48">arm_compute::graph::GraphConfig::use_tuner</a></div><div class="ttdeci">bool use_tuner</div><div class="ttdoc">Use a tuner in tunable backends.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00085">Types.h:85</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_a0a2d08174e24bcb1dfdf9d8893cd9363"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#a0a2d08174e24bcb1dfdf9d8893cd9363">arm_compute::graph::create_default_pass_manager</a></div><div class="ttdeci">PassManager create_default_pass_manager(Target target, const GraphConfig &amp;cfg)</div><div class="ttdoc">Creates a default PassManager.</div><div class="ttdef"><b>Definition:</b> <a href="src_2graph_2_utils_8cpp_source.xhtml#l00077">Utils.cpp:77</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph__utils_xhtml_a30bee0b52a919bbcb1dc48b1b6546a16"><div class="ttname"><a href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">arm_compute::graph_utils::get_weights_accessor</a></div><div class="ttdeci">std::unique_ptr&lt; graph::ITensorAccessor &gt; get_weights_accessor(const std::string &amp;path, const std::string &amp;data_file, DataLayout file_layout=DataLayout::NCHW)</div><div class="ttdoc">Generates appropriate weights accessor according to the specified path.</div><div class="ttdef"><b>Definition:</b> <a href="_graph_utils_8h_source.xhtml#l00475">GraphUtils.h:475</a></div></div>
<div class="ttc" id="structarm__compute_1_1graph_1_1_graph_config_xhtml_a08963f7335eef295237ab460863bc3d5"><div class="ttname"><a href="structarm__compute_1_1graph_1_1_graph_config.xhtml#a08963f7335eef295237ab460863bc3d5">arm_compute::graph::GraphConfig::num_threads</a></div><div class="ttdeci">int num_threads</div><div class="ttdoc">Number of threads to use (thread capable backends), if 0 the backend will auto-initialize,...</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00088">Types.h:88</a></div></div>
<div class="ttc" id="structarm__compute_1_1graph_1_1descriptors_1_1_concat_layer_descriptor_xhtml"><div class="ttname"><a href="structarm__compute_1_1graph_1_1descriptors_1_1_concat_layer_descriptor.xhtml">arm_compute::graph::descriptors::ConcatLayerDescriptor</a></div><div class="ttdoc">Concatenate layer descriptor.</div><div class="ttdef"><b>Definition:</b> <a href="_layer_descriptors_8h_source.xhtml#l00037">LayerDescriptors.h:37</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a74ce3f7420453d3446218ff3b7453e02a49da85b69bc6285eeee286ca49fa7195"><div class="ttname"><a href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02a49da85b69bc6285eeee286ca49fa7195">arm_compute::DataLayoutDimension::WIDTH</a></div><div class="ttdoc">width</div></div>
<div class="ttc" id="structarm__compute_1_1utils_1_1_common_graph_params_xhtml_ad2e53638e2c19bbbe968b95f60256cee"><div class="ttname"><a href="structarm__compute_1_1utils_1_1_common_graph_params.xhtml#ad2e53638e2c19bbbe968b95f60256cee">arm_compute::utils::CommonGraphParams::enable_tuner</a></div><div class="ttdeci">bool enable_tuner</div><div class="ttdef"><b>Definition:</b> <a href="_common_graph_options_8h_source.xhtml#l00097">CommonGraphOptions.h:97</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_aa12973876c037bddff8e9ece94aca0e4a62b6d55816cf737bfc6f42e60df1a3f2"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#aa12973876c037bddff8e9ece94aca0e4a62b6d55816cf737bfc6f42e60df1a3f2">arm_compute::graph::EltwiseOperation::Mul</a></div><div class="ttdoc">Arithmetic multiplication.</div></div>
<div class="ttc" id="structarm__compute_1_1utils_1_1_common_graph_params_xhtml_a30a81dbc66a8e9eeb693a75046b4655d"><div class="ttname"><a href="structarm__compute_1_1utils_1_1_common_graph_params.xhtml#a30a81dbc66a8e9eeb693a75046b4655d">arm_compute::utils::CommonGraphParams::data_path</a></div><div class="ttdeci">std::string data_path</div><div class="ttdef"><b>Definition:</b> <a href="_common_graph_options_8h_source.xhtml#l00101">CommonGraphOptions.h:101</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0"><div class="ttname"><a href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">arm_compute::DataLayout</a></div><div class="ttdeci">DataLayout</div><div class="ttdoc">[DataLayout enum definition]</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00120">Types.h:120</a></div></div>
<div class="ttc" id="classarm__compute_1_1utils_1_1_simple_option_xhtml"><div class="ttname"><a href="classarm__compute_1_1utils_1_1_simple_option.xhtml">arm_compute::utils::SimpleOption&lt; std::string &gt;</a></div></div>
<div class="ttc" id="classarm__compute_1_1utils_1_1_option_xhtml_a48a2672f362eeed9a3e93403f4d3de37"><div class="ttname"><a href="classarm__compute_1_1utils_1_1_option.xhtml#a48a2672f362eeed9a3e93403f4d3de37">arm_compute::utils::Option::set_help</a></div><div class="ttdeci">void set_help(std::string help)</div><div class="ttdoc">Set the help message for the option.</div><div class="ttdef"><b>Definition:</b> <a href="_option_8h_source.xhtml#l00125">Option.h:125</a></div></div>
<div class="ttc" id="structarm__compute_1_1graph_1_1descriptors_1_1_unary_eltwise_layer_descriptor_xhtml"><div class="ttname"><a href="structarm__compute_1_1graph_1_1descriptors_1_1_unary_eltwise_layer_descriptor.xhtml">arm_compute::graph::descriptors::UnaryEltwiseLayerDescriptor</a></div><div class="ttdoc">Unary Elementwise layer descriptor.</div><div class="ttdef"><b>Definition:</b> <a href="_layer_descriptors_8h_source.xhtml#l00093">LayerDescriptors.h:93</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_d28a4824dc47e487b107a5db32ef43c4.xhtml">examples</a></li><li class="navelem"><a class="el" href="graph__yolov3__output__detector_8cpp.xhtml">graph_yolov3_output_detector.cpp</a></li>
    <li class="footer">Generated on Fri Aug 21 2020 11:09:50 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
