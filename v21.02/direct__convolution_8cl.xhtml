<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/core/CL/cl_kernels/direct_convolution.cl File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">21.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('direct__convolution_8cl.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#define-members">Macros</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">direct_convolution.cl File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="gemm__helpers_8h_source.xhtml">gemm_helpers.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="helpers__asymm_8h_source.xhtml">helpers_asymm.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="repeat_8h_source.xhtml">repeat.h</a>&quot;</code><br />
</div>
<p><a href="direct__convolution_8cl_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:af6f3e915f4b9b0e76dad9ea458a17ba6"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="direct__convolution_8cl.xhtml#af6f3e915f4b9b0e76dad9ea458a17ba6">ARM_DOT1</a>(a,  b,  c)</td></tr>
<tr class="separator:af6f3e915f4b9b0e76dad9ea458a17ba6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae34a7418dab77ded3f299ad8e01dc545"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="direct__convolution_8cl.xhtml#ae34a7418dab77ded3f299ad8e01dc545">ARM_DOT2</a>(a,  b,  c)</td></tr>
<tr class="separator:ae34a7418dab77ded3f299ad8e01dc545"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa1fc470aae7d425cb48b4eddd923c1f1"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="direct__convolution_8cl.xhtml#aa1fc470aae7d425cb48b4eddd923c1f1">ARM_DOT3</a>(a,  b,  c)</td></tr>
<tr class="separator:aa1fc470aae7d425cb48b4eddd923c1f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a691532f1c550b718a64219c0bf8d1aea"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="direct__convolution_8cl.xhtml#a691532f1c550b718a64219c0bf8d1aea">ARM_DOT4</a>(a,  b,  c)</td></tr>
<tr class="separator:a691532f1c550b718a64219c0bf8d1aea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa6675b3d030e11613b7af2f591a3215f"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="direct__convolution_8cl.xhtml#aa6675b3d030e11613b7af2f591a3215f">ARM_DOT8</a>(a,  b,  c)</td></tr>
<tr class="separator:aa6675b3d030e11613b7af2f591a3215f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a82a34a6b94dcdb93e446287e1a3e630d"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="direct__convolution_8cl.xhtml#a82a34a6b94dcdb93e446287e1a3e630d">ARM_DOT16</a>(a,  b,  c)</td></tr>
<tr class="separator:a82a34a6b94dcdb93e446287e1a3e630d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a505aa06b0746ebe8a014caad8f73d4a1"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="direct__convolution_8cl.xhtml#a505aa06b0746ebe8a014caad8f73d4a1">LINEAR_2_COORDS</a>(i)</td></tr>
<tr class="separator:a505aa06b0746ebe8a014caad8f73d4a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aefa949e8d3078660fbb910ff2a43e4ab"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="direct__convolution_8cl.xhtml#aefa949e8d3078660fbb910ff2a43e4ab">MI_INIT</a>(i)</td></tr>
<tr class="separator:aefa949e8d3078660fbb910ff2a43e4ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa5c795cac11e213e8935d9b1ddac7f29"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="direct__convolution_8cl.xhtml#aa5c795cac11e213e8935d9b1ddac7f29">TENSOR_DOT</a>(K0,  i)&#160;&#160;&#160;ARM_DOT_K0XN0(K0, a##i, b, c##i);</td></tr>
<tr class="separator:aa5c795cac11e213e8935d9b1ddac7f29"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a5e8b4c7216c49d4dad36ad9e59b8cd18"><td class="memItemLeft" align="right" valign="top">__kernel void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="direct__convolution_8cl.xhtml#a5e8b4c7216c49d4dad36ad9e59b8cd18">direct_convolution_nhwc</a> (__global uchar *src_ptr, uint src_stride_x, uint src_step_x, uint src_stride_y, uint src_step_y, uint src_stride_z, uint src_step_z, uint src_offset_first_element_in_bytes, __global uchar *dst_ptr, uint dst_stride_x, uint dst_step_x, uint dst_stride_y, uint dst_step_y, uint dst_stride_z, uint dst_step_z, uint dst_offset_first_element_in_bytes, __global uchar *wei_ptr, uint wei_stride_x, uint wei_step_x, uint wei_stride_y, uint wei_step_y, uint wei_stride_z, uint wei_step_z, uint wei_offset_first_element_in_bytes, __global uchar *bia_ptr, uint bia_stride_x, uint bia_step_x, uint bia_offset_first_element_in_bytes, unsigned int wei_stride_w)</td></tr>
<tr class="memdesc:a5e8b4c7216c49d4dad36ad9e59b8cd18"><td class="mdescLeft">&#160;</td><td class="mdescRight">OpenCL kernel to compute the direct convolution.  <a href="#a5e8b4c7216c49d4dad36ad9e59b8cd18">More...</a><br /></td></tr>
<tr class="separator:a5e8b4c7216c49d4dad36ad9e59b8cd18"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Macro Definition Documentation</h2>
<a id="af6f3e915f4b9b0e76dad9ea458a17ba6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af6f3e915f4b9b0e76dad9ea458a17ba6">&#9670;&nbsp;</a></span>ARM_DOT1</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ARM_DOT1</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">a, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">b, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">c&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line">({                                            \</div><div class="line">        c += (ACC_DATA_TYPE)a * (ACC_DATA_TYPE)<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>; \</div><div class="line">    })</div><div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_aa76b4a6e74940dabc5b7fc6b2dab3545"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">arm_compute::test::validation::b</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; b</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00157">DFT.cpp:157</a></div></div>
</div><!-- fragment -->
<p class="definition">Definition at line <a class="el" href="direct__convolution_8cl_source.xhtml#l00266">266</a> of file <a class="el" href="direct__convolution_8cl_source.xhtml">direct_convolution.cl</a>.</p>

</div>
</div>
<a id="a82a34a6b94dcdb93e446287e1a3e630d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a82a34a6b94dcdb93e446287e1a3e630d">&#9670;&nbsp;</a></span>ARM_DOT16</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ARM_DOT16</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">a, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">b, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">c&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line">({                               \</div><div class="line">        ARM_DOT8((a.lo), (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>.lo), c); \</div><div class="line">        ARM_DOT8((a.hi), (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>.hi), c); \</div><div class="line">    })</div><div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_aa76b4a6e74940dabc5b7fc6b2dab3545"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">arm_compute::test::validation::b</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; b</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00157">DFT.cpp:157</a></div></div>
</div><!-- fragment -->
<p class="definition">Definition at line <a class="el" href="direct__convolution_8cl_source.xhtml#l00290">290</a> of file <a class="el" href="direct__convolution_8cl_source.xhtml">direct_convolution.cl</a>.</p>

</div>
</div>
<a id="ae34a7418dab77ded3f299ad8e01dc545"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae34a7418dab77ded3f299ad8e01dc545">&#9670;&nbsp;</a></span>ARM_DOT2</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ARM_DOT2</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">a, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">b, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">c&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line">({                                                  \</div><div class="line">        c += (ACC_DATA_TYPE)a.s0 * (ACC_DATA_TYPE)<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>.s0; \</div><div class="line">        c += (ACC_DATA_TYPE)a.s1 * (ACC_DATA_TYPE)<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>.s1; \</div><div class="line">    })</div><div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_aa76b4a6e74940dabc5b7fc6b2dab3545"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">arm_compute::test::validation::b</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; b</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00157">DFT.cpp:157</a></div></div>
</div><!-- fragment -->
<p class="definition">Definition at line <a class="el" href="direct__convolution_8cl_source.xhtml#l00270">270</a> of file <a class="el" href="direct__convolution_8cl_source.xhtml">direct_convolution.cl</a>.</p>

</div>
</div>
<a id="aa1fc470aae7d425cb48b4eddd923c1f1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa1fc470aae7d425cb48b4eddd923c1f1">&#9670;&nbsp;</a></span>ARM_DOT3</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ARM_DOT3</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">a, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">b, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">c&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line">({                                                  \</div><div class="line">        ARM_DOT2(a, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>, c);                              \</div><div class="line">        c += (ACC_DATA_TYPE)a.s2 * (ACC_DATA_TYPE)<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>.s2; \</div><div class="line">    })</div><div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_aa76b4a6e74940dabc5b7fc6b2dab3545"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">arm_compute::test::validation::b</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; b</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00157">DFT.cpp:157</a></div></div>
</div><!-- fragment -->
<p class="definition">Definition at line <a class="el" href="direct__convolution_8cl_source.xhtml#l00275">275</a> of file <a class="el" href="direct__convolution_8cl_source.xhtml">direct_convolution.cl</a>.</p>

</div>
</div>
<a id="a691532f1c550b718a64219c0bf8d1aea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a691532f1c550b718a64219c0bf8d1aea">&#9670;&nbsp;</a></span>ARM_DOT4</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ARM_DOT4</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">a, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">b, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">c&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line">({                                                  \</div><div class="line">        ARM_DOT3(a, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>, c);                              \</div><div class="line">        c += (ACC_DATA_TYPE)a.s3 * (ACC_DATA_TYPE)<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>.s3; \</div><div class="line">    })</div><div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_aa76b4a6e74940dabc5b7fc6b2dab3545"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">arm_compute::test::validation::b</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; b</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00157">DFT.cpp:157</a></div></div>
</div><!-- fragment -->
<p class="definition">Definition at line <a class="el" href="direct__convolution_8cl_source.xhtml#l00280">280</a> of file <a class="el" href="direct__convolution_8cl_source.xhtml">direct_convolution.cl</a>.</p>

</div>
</div>
<a id="aa6675b3d030e11613b7af2f591a3215f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa6675b3d030e11613b7af2f591a3215f">&#9670;&nbsp;</a></span>ARM_DOT8</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ARM_DOT8</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">a, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">b, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">c&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line">({                               \</div><div class="line">        ARM_DOT4((a.lo), (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>.lo), c); \</div><div class="line">        ARM_DOT4((a.hi), (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>.hi), c); \</div><div class="line">    })</div><div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_aa76b4a6e74940dabc5b7fc6b2dab3545"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">arm_compute::test::validation::b</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; b</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00157">DFT.cpp:157</a></div></div>
</div><!-- fragment -->
<p class="definition">Definition at line <a class="el" href="direct__convolution_8cl_source.xhtml#l00285">285</a> of file <a class="el" href="direct__convolution_8cl_source.xhtml">direct_convolution.cl</a>.</p>

</div>
</div>
<a id="a505aa06b0746ebe8a014caad8f73d4a1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a505aa06b0746ebe8a014caad8f73d4a1">&#9670;&nbsp;</a></span>LINEAR_2_COORDS</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define LINEAR_2_COORDS</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">i</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line">xi##i = ((mout * M0 + i) % DST_WIDTH) * STRIDE_X; \</div><div class="line">    yi##i = ((mout * M0 + i) / DST_WIDTH) * STRIDE_Y; \</div><div class="line">    xi##i -= PAD_LEFT;                                \</div><div class="line">    yi##i -= PAD_TOP;</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="direct__convolution_8cl_source.xhtml#l00459">direct_convolution_nhwc()</a>.</p>

</div>
</div>
<a id="aefa949e8d3078660fbb910ff2a43e4ab"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aefa949e8d3078660fbb910ff2a43e4ab">&#9670;&nbsp;</a></span>MI_INIT</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define MI_INIT</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">i</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line">mi_valid_row##i = max(min(xi##i + xk, SRC_WIDTH - 1), 0) + max(min(yi##i + yk, SRC_HEIGHT - 1), 0) * SRC_WIDTH; \</div><div class="line">    mi_mask##i      = (xi##i + xk) &gt;= 0 &amp;&amp; (xi##i + xk) &lt; SRC_WIDTH &amp;&amp; (yi##i + yk) &gt;= 0 &amp;&amp; (yi##i + yk) &lt; SRC_HEIGHT;</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="direct__convolution_8cl_source.xhtml#l00459">direct_convolution_nhwc()</a>.</p>

</div>
</div>
<a id="aa5c795cac11e213e8935d9b1ddac7f29"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa5c795cac11e213e8935d9b1ddac7f29">&#9670;&nbsp;</a></span>TENSOR_DOT</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define TENSOR_DOT</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">K0, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">i&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;ARM_DOT_K0XN0(K0, a##i, b, c##i);</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="reference">Referenced by <a class="el" href="direct__convolution_8cl_source.xhtml#l00459">direct_convolution_nhwc()</a>.</p>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="a5e8b4c7216c49d4dad36ad9e59b8cd18"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5e8b4c7216c49d4dad36ad9e59b8cd18">&#9670;&nbsp;</a></span>direct_convolution_nhwc()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__kernel void direct_convolution_nhwc </td>
          <td>(</td>
          <td class="paramtype">__global uchar *&#160;</td>
          <td class="paramname"><em>src_ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>src_stride_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>src_step_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>src_stride_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>src_step_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>src_stride_z</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>src_step_z</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>src_offset_first_element_in_bytes</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">__global uchar *&#160;</td>
          <td class="paramname"><em>dst_ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_stride_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_step_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_stride_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_step_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_stride_z</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_step_z</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_offset_first_element_in_bytes</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">__global uchar *&#160;</td>
          <td class="paramname"><em>wei_ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>wei_stride_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>wei_step_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>wei_stride_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>wei_step_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>wei_stride_z</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>wei_step_z</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>wei_offset_first_element_in_bytes</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">__global uchar *&#160;</td>
          <td class="paramname"><em>bia_ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>bia_stride_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>bia_step_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>bia_offset_first_element_in_bytes</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>wei_stride_w</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>OpenCL kernel to compute the direct convolution. </p>
<dl class="section note"><dt>Note</dt><dd>Data layout supported: NHWC </dd>
<dd>
Data type supported: F32/F16/QASYMM8/QASYMM8_SIGNED </dd>
<dd>
The data type must be passed at compile time using -DDATA_TYPE (e.g. -DDATA_TYPE=half) </dd>
<dd>
The accumulation data type must be passed at compile time using -DACC_DATA_TYPE (e.g. -DDATA_TYPE_PROMOTED=half) </dd>
<dd>
The convolution padding (left and top) must be passed at compile time using -DPAD_LEFT and -DPAD_TOP (e.g. -DPAD_LEFT=2, -DPAD_TOP=2) </dd>
<dd>
The convolution strides must be passed at compile time using -DSTRIDE and -DPAD_TOP (e.g. -DPAD_LEFT=2, -DPAD_TOP=2) </dd>
<dd>
The spatial dimensions of the weights must be passed at compile time using -DWEI_WIDTH and -DWEI_HEIGHT (e.g. -DWEI_WIDTH=9, -DWEI_HEIGHT=9) </dd>
<dd>
The spatial dimensions of the source tensor must be passed at compile time using -DSRC_WIDTH and -DSRC_HEIGHT (e.g. -DSRC_WIDTH=96, -DSRC_HEIGHT=64) </dd>
<dd>
The spatial dimensions of the destination tensor must be passed at compile time using -DDST_WIDTH and -DDST_HEIGHT (e.g. -DDST_WIDTH=96, -DDST_HEIGHT=64) </dd>
<dd>
The channels of the source tensor must be passed at compile time using -DSRC_CHANNELS (e.g. -DSRC_CHANNELS=64) </dd>
<dd>
The channels of the destination tensor must be passed at compile time using -DDST_CHANNELS (e.g. -DDDST_CHANNELS=64) </dd>
<dd>
The data type of the source tensor must be passed at compile time using -DSRC_DATA_TYPE (e.g. -DSRC_DATA_TYPE=float) </dd>
<dd>
The data type of the weights tensor must be passed at compile time using -DWEI_DATA_TYPE (e.g. -DWEI_DATA_TYPE=float) </dd>
<dd>
The data type of the destination tensor must be passed at compile time using -DDST_DATA_TYPE (e.g. -DDST_DATA_TYPE=float) </dd>
<dd>
The data type of the accumulators must be passed at compile time using -DACC_DATA_TYPE (e.g. -DACC_DATA_TYPE=float) </dd>
<dd>
The number of M0 rows (width*height) to process must be passed at compile time using -DM0 (e.g. -DM0=2) </dd>
<dd>
The number of N0 output channels to process must be passed at compile time using -DN0 (e.g. -DN0=2) </dd>
<dd>
The number of K0 inner accumulations must be passed at compile time using -DK0 (e.g. -DK0=2) </dd>
<dd>
The size of the partial store block in y must be passed at compile time using -DPARTIAL_STORE_M0 (e.g. -DPARTIAL_STORE_M0=1) </dd>
<dd>
The size of the partial store block in x must be passed at compile time using -DPARTIAL_STORE_N0 (e.g. -DPARTIAL_STORE_N0=1) </dd>
<dd>
Only the following configurations of M0, N0 and K0 are currently supported:<ul>
<li>M0 = 1</li>
<li>N0 = 2, 3, 4, 8, 16</li>
<li>K0 = 2, 3, 4, 8, 16</li>
</ul>
</dd>
<dd>
In case of QASYMM8/QASYMM8_SIGNED, the following extra information must be passed at compile time:<ul>
<li>-DIS_QUANTIZED</li>
<li>The destination quantization multiplier e.g. -DDST_MULTIPLIER=1234</li>
<li>The destination quantization shift e.g. -DDST_SHIFT=4</li>
<li>The destination offset e.g. -DDST_OFFSET=4</li>
<li>The source offset e.g. -DSRC_OFFSET=4</li>
<li>The weights offset e.g. -DWEI_OFFSET=4</li>
<li>The quantized zero value e.g. -DZERO_VALUE=4</li>
</ul>
</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">src_ptr</td><td>Pointer to the source tensor. Supported data type: F16/F32 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src_stride_x</td><td>Stride of the source tensor in X dimension (in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src_step_x</td><td>src_stride_x * number of elements along X processed per workitem(in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src_stride_y</td><td>Stride of the source tensor in Y dimension (in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src_step_y</td><td>src_stride_y * number of elements along Y processed per workitem(in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src_stride_z</td><td>Stride of the source tensor in Z dimension (in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src_step_z</td><td>src_stride_z * number of elements along Z processed per workitem(in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src_offset_first_element_in_bytes</td><td>The offset of the first element in the source tensor </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">dst_ptr</td><td>Pointer to the destination tensor. Supported data type: same as <code>src_ptr</code> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_stride_x</td><td>Stride of the destination tensor in X dimension (in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_step_x</td><td>dst_stride_x * number of elements along X processed per workitem(in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_stride_y</td><td>Stride of the destination tensor in Y dimension (in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_step_y</td><td>dst_stride_y * number of elements along Y processed per workitem(in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_stride_z</td><td>Stride of the destination tensor in Z dimension (in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_step_z</td><td>dst_stride_z * number of elements along Z processed per workitem(in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_offset_first_element_in_bytes</td><td>The offset of the first element in the destination tensor </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">wei_ptr</td><td>Pointer to the weights tensor. Supported data type: same as <code>src_ptr</code> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">wei_stride_x</td><td>Stride of the weights tensor in X dimension (in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">wei_step_x</td><td>wei_stride_x * number of elements along X processed per workitem(in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">wei_stride_y</td><td>Stride of the weights tensor in Y dimension (in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">wei_step_y</td><td>wei_stride_y * number of elements along Y processed per workitem(in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">wei_stride_z</td><td>Stride of the weights tensor in Z dimension (in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">wei_step_z</td><td>wei_stride_z * number of elements along Z processed per workitem(in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">wei_offset_first_element_in_bytes</td><td>The offset of the first element in the bias matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">bia_ptr</td><td>(Optional) Pointer to the bias tensor Supported data type: same as <code>src_ptr</code> (if F32/F16) or S32 (if QASYMM8/QASYMM8_SIGNED) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">bia_stride_x</td><td>(Optional) Stride of the bias tensor in X dimension (in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">bia_step_x</td><td>(Optional) bia_stride_x * number of elements along X processed per workitem(in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">bia_offset_first_element_in_bytes</td><td>(Optional) The offset of the first element in the bias matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">wei_stride_w</td><td>Stride of the weights tensor in W dimension (in bytes) </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="direct__convolution_8cl_source.xhtml#l00459">459</a> of file <a class="el" href="direct__convolution_8cl_source.xhtml">direct_convolution.cl</a>.</p>

<p class="reference">References <a class="el" href="gemm__helpers_8h_source.xhtml#l01276">ADD_BLOCK_BROADCAST</a>, <a class="el" href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00157">arm_compute::test::validation::b</a>, <a class="el" href="direct__convolution_8cl.xhtml#a505aa06b0746ebe8a014caad8f73d4a1">LINEAR_2_COORDS</a>, <a class="el" href="gemm__helpers_8h_source.xhtml#l00398">LOAD_BLOCK</a>, <a class="el" href="gemm__helpers_8h_source.xhtml#l00677">LOAD_BLOCK_INDIRECT</a>, <a class="el" href="direct__convolution_8cl.xhtml#aefa949e8d3078660fbb910ff2a43e4ab">MI_INIT</a>, <a class="el" href="transpose_8cl_source.xhtml#l00025">PARTIAL_STORE_N0</a>, <a class="el" href="helpers__asymm_8h_source.xhtml#l00389">QUANTIZE</a>, <a class="el" href="repeat_8h_source.xhtml#l00134">REPEAT_VAR_INIT_TO_CONST</a>, <a class="el" href="load__store__utility_8h_source.xhtml#l00584">STORE_VECTOR_SELECT</a>, <a class="el" href="direct__convolution_8cl.xhtml#aa5c795cac11e213e8935d9b1ddac7f29">TENSOR_DOT</a>, and <a class="el" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00514">VEC_DATA_TYPE</a>.</p>
<div class="fragment"><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;{</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;<span class="preprocessor">#if M0 != 1</span></div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;<span class="preprocessor">#error &quot;M0: Only supported 1&quot;</span></div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;<span class="preprocessor">#endif // M0 != 1</span></div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> cout = max((<span class="keywordtype">int</span>)(get_global_id(0) * N0 - (N0 - <a class="code" href="transpose_8cl.xhtml#a384384e4aff4a5ab95d1e0f9e3808924">PARTIAL_STORE_N0</a>) % N0), 0); <span class="comment">// input channels</span></div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> mout = get_global_id(1);                                                    <span class="comment">// width x height</span></div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> zout = get_global_id(2);                                                    <span class="comment">// batch size index</span></div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;    <a class="code" href="repeat_8h.xhtml#a4a61a8df72f9bc1b1dcc4cc4ec6ac3b9">REPEAT_VAR_INIT_TO_CONST</a>(16, <span class="keywordtype">int</span>, zero, 0);</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;    <a class="code" href="repeat_8h.xhtml#a4a61a8df72f9bc1b1dcc4cc4ec6ac3b9">REPEAT_VAR_INIT_TO_CONST</a>(M0, <span class="keywordtype">int</span>, xi, 0);</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;    <a class="code" href="repeat_8h.xhtml#a4a61a8df72f9bc1b1dcc4cc4ec6ac3b9">REPEAT_VAR_INIT_TO_CONST</a>(M0, <span class="keywordtype">int</span>, yi, 0);</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;<span class="preprocessor">#define LINEAR_2_COORDS(i)                            \</span></div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;<span class="preprocessor">    xi##i = ((mout * M0 + i) % DST_WIDTH) * STRIDE_X; \</span></div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;<span class="preprocessor">    yi##i = ((mout * M0 + i) / DST_WIDTH) * STRIDE_Y; \</span></div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;<span class="preprocessor">    xi##i -= PAD_LEFT;                                \</span></div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;<span class="preprocessor">    yi##i -= PAD_TOP;</span></div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;    <span class="comment">// Convert the linear index to coordinate</span></div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;    <a class="code" href="direct__convolution_8cl.xhtml#a505aa06b0746ebe8a014caad8f73d4a1">LINEAR_2_COORDS</a>(0);</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;<span class="preprocessor">#undef LINEAR_2_COORDS</span></div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;    uint src_offset = src_offset_first_element_in_bytes + zout * src_stride_y * (SRC_WIDTH * SRC_HEIGHT);</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;    uint wei_offset = wei_offset_first_element_in_bytes + cout * wei_stride_w;</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;    <span class="comment">// Initialize the accumulators</span></div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;    <a class="code" href="repeat_8h.xhtml#a4a61a8df72f9bc1b1dcc4cc4ec6ac3b9">REPEAT_VAR_INIT_TO_CONST</a>(M0, <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(ACC_DATA_TYPE, N0), c, 0);</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;    <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i = 0; i &lt; (WEI_WIDTH * WEI_HEIGHT); ++i)</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;    {</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;        <span class="keywordtype">int</span> xk = i % WEI_WIDTH;</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;        <span class="keywordtype">int</span> yk = i / WEI_WIDTH;</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;        <a class="code" href="repeat_8h.xhtml#a4a61a8df72f9bc1b1dcc4cc4ec6ac3b9">REPEAT_VAR_INIT_TO_CONST</a>(M0, <span class="keywordtype">int</span>, mi_valid_row, 0);</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;        <a class="code" href="repeat_8h.xhtml#a4a61a8df72f9bc1b1dcc4cc4ec6ac3b9">REPEAT_VAR_INIT_TO_CONST</a>(M0, <span class="keywordtype">int</span>, mi_mask, 0);</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;        <span class="comment">// Calculate the input row to read from source tensor</span></div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;<span class="preprocessor">#define MI_INIT(i)                                                                                                  \</span></div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;<span class="preprocessor">    mi_valid_row##i = max(min(xi##i + xk, SRC_WIDTH - 1), 0) + max(min(yi##i + yk, SRC_HEIGHT - 1), 0) * SRC_WIDTH; \</span></div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;<span class="preprocessor">    mi_mask##i      = (xi##i + xk) &gt;= 0 &amp;&amp; (xi##i + xk) &lt; SRC_WIDTH &amp;&amp; (yi##i + yk) &gt;= 0 &amp;&amp; (yi##i + yk) &lt; SRC_HEIGHT;</span></div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;        <a class="code" href="direct__convolution_8cl.xhtml#aefa949e8d3078660fbb910ff2a43e4ab">MI_INIT</a>(0);</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;<span class="preprocessor">#undef MI_INIT</span></div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;        <span class="keywordtype">int</span> k = 0;</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;        <span class="keywordflow">for</span>(; k &lt;= (SRC_CHANNELS - K0); k += K0)</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;        {</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;            <span class="comment">// Load values from src tensor</span></div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;            <a class="code" href="gemm__helpers_8h.xhtml#ae5bc56f36d4a5e80033a4c6d440a3284">LOAD_BLOCK_INDIRECT</a>(M0, K0, SRC_DATA_TYPE, a, src_ptr, src_offset + k * <span class="keyword">sizeof</span>(SRC_DATA_TYPE), src_stride_y, mi_valid_row, mi_mask);</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;            <span class="comment">// Load values from weights tensor</span></div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;            <a class="code" href="gemm__helpers_8h.xhtml#a9fe7ded27e552f48fa285d34fb00427d">LOAD_BLOCK</a>(N0, K0, WEI_DATA_TYPE, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>, wei_ptr, wei_offset, wei_stride_w, zero);</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;<span class="preprocessor">#if defined(IS_QUANTIZED)</span></div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;<span class="preprocessor">#define TENSOR_DOT(K0, i)                                                                                      \</span></div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;<span class="preprocessor">    if(mi_mask##i != 0)                                                                                        \</span></div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;<span class="preprocessor">    {                                                                                                          \</span></div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;<span class="preprocessor">        ARM_DOT_K0XN0(K0, a##i, b, c##i);                                                                      \</span></div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;<span class="preprocessor">        ARM_OFFSET_K0XN0(K0, a##i, b, SRC_OFFSET, WEI_OFFSET, c##i);                                           \</span></div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;<span class="preprocessor">    }                                                                                                          \</span></div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;<span class="preprocessor">    else                                                                                                       \</span></div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;<span class="preprocessor">    {                                                                                                          \</span></div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;<span class="preprocessor">        ARM_DOT_K0XN0(K0, ((VEC_DATA_TYPE(SRC_DATA_TYPE, K0))ZERO_VALUE), b, c##i);                            \</span></div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;<span class="preprocessor">        ARM_OFFSET_K0XN0(K0, ((VEC_DATA_TYPE(SRC_DATA_TYPE, K0))ZERO_VALUE), b, SRC_OFFSET, WEI_OFFSET, c##i); \</span></div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;<span class="preprocessor">    }</span></div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;<span class="preprocessor">#else // defined(IS_QUANTIZED)</span></div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;<span class="preprocessor">#define TENSOR_DOT(K0, i) \</span></div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;<span class="preprocessor">    ARM_DOT_K0XN0(K0, a##i, b, c##i);</span></div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;<span class="preprocessor">#endif // defined(IS_QUANTIZED)</span></div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;            <a class="code" href="direct__convolution_8cl.xhtml#aa5c795cac11e213e8935d9b1ddac7f29">TENSOR_DOT</a>(K0, 0);</div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;            wei_offset += K0 * <span class="keyword">sizeof</span>(WEI_DATA_TYPE);</div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;        }</div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;</div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;<span class="preprocessor">#if(SRC_CHANNELS % K0) != 0</span></div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;        <span class="comment">// Left-over accumulations</span></div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;        <span class="keywordflow">for</span>(; k &lt; SRC_CHANNELS; ++k)</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;        {</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;            <span class="comment">// Load values from src tensor</span></div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;            <a class="code" href="gemm__helpers_8h.xhtml#ae5bc56f36d4a5e80033a4c6d440a3284">LOAD_BLOCK_INDIRECT</a>(M0, 1, SRC_DATA_TYPE, a, src_ptr, src_offset + k * <span class="keyword">sizeof</span>(SRC_DATA_TYPE), src_stride_y, mi_valid_row, mi_mask);</div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;</div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;            <span class="comment">// Load values from weights tensor</span></div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;            <a class="code" href="gemm__helpers_8h.xhtml#a9fe7ded27e552f48fa285d34fb00427d">LOAD_BLOCK</a>(N0, 1, WEI_DATA_TYPE, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>, wei_ptr, wei_offset, wei_stride_w, zero);</div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;</div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;            <a class="code" href="direct__convolution_8cl.xhtml#aa5c795cac11e213e8935d9b1ddac7f29">TENSOR_DOT</a>(1, 0);</div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;</div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;<span class="preprocessor">#undef TENSOR_DOT</span></div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;</div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;            wei_offset += <span class="keyword">sizeof</span>(WEI_DATA_TYPE);</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;        }</div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;<span class="preprocessor">#endif // (SRC_CHANNELS % K0) != 0</span></div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;</div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;        c0 += (SRC_CHANNELS * SRC_OFFSET * WEI_OFFSET);</div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;    }</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;</div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;    __global uchar *dst_addr = dst_ptr + dst_offset_first_element_in_bytes + (cout * <span class="keyword">sizeof</span>(DST_DATA_TYPE)) + (mout * M0 * dst_stride_y);</div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;</div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;    <span class="comment">// Batched direct convolution</span></div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;    dst_addr += zout * dst_stride_y * (DST_WIDTH * DST_HEIGHT);</div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;</div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;<span class="preprocessor">#if defined(HAS_BIAS)</span></div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;    __global uchar *bias_addr = bia_ptr + bia_offset_first_element_in_bytes + (cout * <span class="keyword">sizeof</span>(BIA_DATA_TYPE));</div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;</div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;    <a class="code" href="gemm__helpers_8h.xhtml#a9fe7ded27e552f48fa285d34fb00427d">LOAD_BLOCK</a>(1, N0, BIA_DATA_TYPE, bias, bias_addr, 0, zero0, zero);</div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;</div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;    <span class="comment">// c = c + bias[broadcasted]</span></div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;    <a class="code" href="gemm__helpers_8h.xhtml#a055f3dc1bfec3462a3c48de0203a2c80">ADD_BLOCK_BROADCAST</a>(M0, c, bias0);</div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;<span class="preprocessor">#endif // HAS_BIAS</span></div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;</div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;<span class="preprocessor">#if defined(IS_QUANTIZED)</span></div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;</div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;    <a class="code" href="repeat_8h.xhtml#a4a61a8df72f9bc1b1dcc4cc4ec6ac3b9">REPEAT_VAR_INIT_TO_CONST</a>(M0, <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(DST_DATA_TYPE, N0), cq, 0);</div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;</div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;<span class="preprocessor">#if DST_SHIFT &lt; 0</span></div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;<span class="preprocessor">#define QUANTIZE(i)                                                                               \</span></div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;<span class="preprocessor">    c##i  = ASYMM_MULT_BY_QUANT_MULTIPLIER_GREATER_THAN_ONE(c##i, DST_MULTIPLIER, DST_SHIFT, N0); \</span></div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;<span class="preprocessor">    c##i  = c##i + DST_OFFSET;                                                                    \</span></div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;<span class="preprocessor">    cq##i = CONVERT_SAT(c##i, VEC_DATA_TYPE(DST_DATA_TYPE, N0));</span></div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;<span class="preprocessor">#else // OUTPUT_SHIFT &lt; 0</span></div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;<span class="preprocessor">#define QUANTIZE(i)                                                                            \</span></div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;<span class="preprocessor">    c##i  = ASYMM_MULT_BY_QUANT_MULTIPLIER_LESS_THAN_ONE(c##i, DST_MULTIPLIER, DST_SHIFT, N0); \</span></div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;<span class="preprocessor">    c##i  = c##i + DST_OFFSET;                                                                 \</span></div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;<span class="preprocessor">    cq##i = CONVERT_SAT(c##i, VEC_DATA_TYPE(DST_DATA_TYPE, N0));</span></div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;<span class="preprocessor">#endif // OUTPUT_SHIFT &lt; 0</span></div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;</div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;    <a class="code" href="helpers__asymm_8h.xhtml#a85ca50207e80cca8c76b5d3da85e4a9f">QUANTIZE</a>(0);</div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;</div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;<span class="preprocessor">#undef QUANTIZE</span></div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;</div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;    <a class="code" href="load__store__utility_8h.xhtml#a270acb3e45f182ebb6526f3e85eadd14">STORE_VECTOR_SELECT</a>(cq, DST_DATA_TYPE, dst_addr, N0, <a class="code" href="transpose_8cl.xhtml#a384384e4aff4a5ab95d1e0f9e3808924">PARTIAL_STORE_N0</a>, <a class="code" href="transpose_8cl.xhtml#a384384e4aff4a5ab95d1e0f9e3808924">PARTIAL_STORE_N0</a> != 0 &amp;&amp; get_global_id(0) == 0);</div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;<span class="preprocessor">#else  // defined(IS_QUANTIZED)</span></div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;    <a class="code" href="load__store__utility_8h.xhtml#a270acb3e45f182ebb6526f3e85eadd14">STORE_VECTOR_SELECT</a>(c, DST_DATA_TYPE, dst_addr, N0, <a class="code" href="transpose_8cl.xhtml#a384384e4aff4a5ab95d1e0f9e3808924">PARTIAL_STORE_N0</a>, <a class="code" href="transpose_8cl.xhtml#a384384e4aff4a5ab95d1e0f9e3808924">PARTIAL_STORE_N0</a> != 0 &amp;&amp; get_global_id(0) == 0);</div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;<span class="preprocessor">#endif // defined(IS_QUANTIZED)</span></div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;}</div><div class="ttc" id="repeat_8h_xhtml_a4a61a8df72f9bc1b1dcc4cc4ec6ac3b9"><div class="ttname"><a href="repeat_8h.xhtml#a4a61a8df72f9bc1b1dcc4cc4ec6ac3b9">REPEAT_VAR_INIT_TO_CONST</a></div><div class="ttdeci">#define REPEAT_VAR_INIT_TO_CONST(N, TYPE, VAR, VAL)</div><div class="ttdef"><b>Definition:</b> <a href="repeat_8h_source.xhtml#l00134">repeat.h:134</a></div></div>
<div class="ttc" id="direct__convolution_8cl_xhtml_aefa949e8d3078660fbb910ff2a43e4ab"><div class="ttname"><a href="direct__convolution_8cl.xhtml#aefa949e8d3078660fbb910ff2a43e4ab">MI_INIT</a></div><div class="ttdeci">#define MI_INIT(i)</div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_aa76b4a6e74940dabc5b7fc6b2dab3545"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">arm_compute::test::validation::b</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; b</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00157">DFT.cpp:157</a></div></div>
<div class="ttc" id="gemm__helpers_8h_xhtml_a055f3dc1bfec3462a3c48de0203a2c80"><div class="ttname"><a href="gemm__helpers_8h.xhtml#a055f3dc1bfec3462a3c48de0203a2c80">ADD_BLOCK_BROADCAST</a></div><div class="ttdeci">#define ADD_BLOCK_BROADCAST(N, BASENAME, BIAS)</div><div class="ttdef"><b>Definition:</b> <a href="gemm__helpers_8h_source.xhtml#l01276">gemm_helpers.h:1276</a></div></div>
<div class="ttc" id="direct__convolution_8cl_xhtml_a505aa06b0746ebe8a014caad8f73d4a1"><div class="ttname"><a href="direct__convolution_8cl.xhtml#a505aa06b0746ebe8a014caad8f73d4a1">LINEAR_2_COORDS</a></div><div class="ttdeci">#define LINEAR_2_COORDS(i)</div></div>
<div class="ttc" id="gemm__helpers_8h_xhtml_a9fe7ded27e552f48fa285d34fb00427d"><div class="ttname"><a href="gemm__helpers_8h.xhtml#a9fe7ded27e552f48fa285d34fb00427d">LOAD_BLOCK</a></div><div class="ttdeci">#define LOAD_BLOCK(M0, N0, DATA_TYPE, BASENAME, PTR, OFFSET, STRIDE_Y, Z)</div><div class="ttdef"><b>Definition:</b> <a href="gemm__helpers_8h_source.xhtml#l00398">gemm_helpers.h:398</a></div></div>
<div class="ttc" id="load__store__utility_8h_xhtml_a270acb3e45f182ebb6526f3e85eadd14"><div class="ttname"><a href="load__store__utility_8h.xhtml#a270acb3e45f182ebb6526f3e85eadd14">STORE_VECTOR_SELECT</a></div><div class="ttdeci">#define STORE_VECTOR_SELECT(basename, data_type, ptr, vec_size, leftover, cond)</div><div class="ttdoc">Store a vector that can only be partial in x. </div><div class="ttdef"><b>Definition:</b> <a href="load__store__utility_8h_source.xhtml#l00584">load_store_utility.h:584</a></div></div>
<div class="ttc" id="transpose_8cl_xhtml_a384384e4aff4a5ab95d1e0f9e3808924"><div class="ttname"><a href="transpose_8cl.xhtml#a384384e4aff4a5ab95d1e0f9e3808924">PARTIAL_STORE_N0</a></div><div class="ttdeci">#define PARTIAL_STORE_N0</div><div class="ttdef"><b>Definition:</b> <a href="transpose_8cl_source.xhtml#l00025">transpose.cl:25</a></div></div>
<div class="ttc" id="helpers__asymm_8h_xhtml_a85ca50207e80cca8c76b5d3da85e4a9f"><div class="ttname"><a href="helpers__asymm_8h.xhtml#a85ca50207e80cca8c76b5d3da85e4a9f">QUANTIZE</a></div><div class="ttdeci">#define QUANTIZE(input, offset, scale, type, size)</div><div class="ttdef"><b>Definition:</b> <a href="helpers__asymm_8h_source.xhtml#l00389">helpers_asymm.h:389</a></div></div>
<div class="ttc" id="gemm__helpers_8h_xhtml_ae5bc56f36d4a5e80033a4c6d440a3284"><div class="ttname"><a href="gemm__helpers_8h.xhtml#ae5bc56f36d4a5e80033a4c6d440a3284">LOAD_BLOCK_INDIRECT</a></div><div class="ttdeci">#define LOAD_BLOCK_INDIRECT(M0, N0, DATA_TYPE, BASENAME, PTR, OFFSET, STRIDE_Y, Y, Y_MASK)</div><div class="ttdef"><b>Definition:</b> <a href="gemm__helpers_8h_source.xhtml#l00677">gemm_helpers.h:677</a></div></div>
<div class="ttc" id="direct__convolution_8cl_xhtml_aa5c795cac11e213e8935d9b1ddac7f29"><div class="ttname"><a href="direct__convolution_8cl.xhtml#aa5c795cac11e213e8935d9b1ddac7f29">TENSOR_DOT</a></div><div class="ttdeci">#define TENSOR_DOT(K0, i)</div></div>
<div class="ttc" id="src_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml_a36f754c05b6fddf6df0d8d0a74f8159f"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a></div><div class="ttdeci">#define VEC_DATA_TYPE(type, size)</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00514">helpers.h:514</a></div></div>
</div><!-- fragment -->
</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_aebb8dcc11953d78e620bbef0b9e2183.xhtml">core</a></li><li class="navelem"><a class="el" href="dir_8c278f79c760e5c5fbd911f9870614c1.xhtml">CL</a></li><li class="navelem"><a class="el" href="dir_25885286e9dad4fa105b7b25a8031bbf.xhtml">cl_kernels</a></li><li class="navelem"><a class="el" href="direct__convolution_8cl.xhtml">direct_convolution.cl</a></li>
    <li class="footer">Generated on Thu Feb 25 2021 17:17:42 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
