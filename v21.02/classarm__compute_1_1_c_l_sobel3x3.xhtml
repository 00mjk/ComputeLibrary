<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: CLSobel3x3 Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">21.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarm__compute_1_1_c_l_sobel3x3.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">CLSobel3x3 Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Basic function to execute sobel 3x3 filter.  
 <a href="classarm__compute_1_1_c_l_sobel3x3.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_c_l_sobel3x3_8h_source.xhtml">CLSobel3x3.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for CLSobel3x3:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classarm__compute_1_1_c_l_sobel3x3__coll__graph.svg" width="144" height="187"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a6aac5007d7117252aa4a9dcb8b0029dc"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_sobel3x3.xhtml#a6aac5007d7117252aa4a9dcb8b0029dc">CLSobel3x3</a> ()=default</td></tr>
<tr class="memdesc:a6aac5007d7117252aa4a9dcb8b0029dc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default Constructor.  <a href="#a6aac5007d7117252aa4a9dcb8b0029dc">More...</a><br /></td></tr>
<tr class="separator:a6aac5007d7117252aa4a9dcb8b0029dc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae387183871801e93045a81a477bc7e81"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_sobel3x3.xhtml#ae387183871801e93045a81a477bc7e81">CLSobel3x3</a> (const <a class="el" href="classarm__compute_1_1_c_l_sobel3x3.xhtml">CLSobel3x3</a> &amp;)=delete</td></tr>
<tr class="memdesc:ae387183871801e93045a81a477bc7e81"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied.  <a href="#ae387183871801e93045a81a477bc7e81">More...</a><br /></td></tr>
<tr class="separator:ae387183871801e93045a81a477bc7e81"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc9007238340b3e6c0641e85551f9123"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_c_l_sobel3x3.xhtml">CLSobel3x3</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_sobel3x3.xhtml#acc9007238340b3e6c0641e85551f9123">operator=</a> (const <a class="el" href="classarm__compute_1_1_c_l_sobel3x3.xhtml">CLSobel3x3</a> &amp;)=delete</td></tr>
<tr class="memdesc:acc9007238340b3e6c0641e85551f9123"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied.  <a href="#acc9007238340b3e6c0641e85551f9123">More...</a><br /></td></tr>
<tr class="separator:acc9007238340b3e6c0641e85551f9123"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a13b5ea62e9e4438f2ac402d74829a08d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_sobel3x3.xhtml#a13b5ea62e9e4438f2ac402d74829a08d">~CLSobel3x3</a> ()</td></tr>
<tr class="memdesc:a13b5ea62e9e4438f2ac402d74829a08d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default destructor.  <a href="#a13b5ea62e9e4438f2ac402d74829a08d">More...</a><br /></td></tr>
<tr class="separator:a13b5ea62e9e4438f2ac402d74829a08d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a62d1b655e7211f3ab44ed1a9c81a1336"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_sobel3x3.xhtml#a62d1b655e7211f3ab44ed1a9c81a1336">configure</a> (<a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *input, <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *output_x, <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *output_y, <a class="el" href="namespacearm__compute.xhtml#a15a05537a472ee742404821851529327">BorderMode</a> border_mode, uint8_t constant_border_value=0)</td></tr>
<tr class="memdesc:a62d1b655e7211f3ab44ed1a9c81a1336"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialise the function's source, destinations and border mode.  <a href="#a62d1b655e7211f3ab44ed1a9c81a1336">More...</a><br /></td></tr>
<tr class="separator:a62d1b655e7211f3ab44ed1a9c81a1336"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a103f7c6e53243bbee447429328c0152d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_sobel3x3.xhtml#a103f7c6e53243bbee447429328c0152d">configure</a> (const <a class="el" href="classarm__compute_1_1_c_l_compile_context.xhtml">CLCompileContext</a> &amp;compile_context, <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *input, <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *output_x, <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *output_y, <a class="el" href="namespacearm__compute.xhtml#a15a05537a472ee742404821851529327">BorderMode</a> border_mode, uint8_t constant_border_value=0)</td></tr>
<tr class="memdesc:a103f7c6e53243bbee447429328c0152d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialise the function's source, destinations and border mode.  <a href="#a103f7c6e53243bbee447429328c0152d">More...</a><br /></td></tr>
<tr class="separator:a103f7c6e53243bbee447429328c0152d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1_i_c_l_simple_function"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1_i_c_l_simple_function')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1_i_c_l_simple_function.xhtml">ICLSimpleFunction</a></td></tr>
<tr class="memitem:aeb64c2dd56b7b5921efe107513effaa9 inherit pub_methods_classarm__compute_1_1_i_c_l_simple_function"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_simple_function.xhtml#aeb64c2dd56b7b5921efe107513effaa9">ICLSimpleFunction</a> (<a class="el" href="classarm__compute_1_1_c_l_runtime_context.xhtml">CLRuntimeContext</a> *ctx=nullptr)</td></tr>
<tr class="memdesc:aeb64c2dd56b7b5921efe107513effaa9 inherit pub_methods_classarm__compute_1_1_i_c_l_simple_function"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="classarm__compute_1_1_i_c_l_simple_function.xhtml#aeb64c2dd56b7b5921efe107513effaa9">More...</a><br /></td></tr>
<tr class="separator:aeb64c2dd56b7b5921efe107513effaa9 inherit pub_methods_classarm__compute_1_1_i_c_l_simple_function"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac2ab9812ab0ef822035d5b33eefd8e75 inherit pub_methods_classarm__compute_1_1_i_c_l_simple_function"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_simple_function.xhtml#ac2ab9812ab0ef822035d5b33eefd8e75">ICLSimpleFunction</a> (const <a class="el" href="classarm__compute_1_1_i_c_l_simple_function.xhtml">ICLSimpleFunction</a> &amp;)=delete</td></tr>
<tr class="memdesc:ac2ab9812ab0ef822035d5b33eefd8e75 inherit pub_methods_classarm__compute_1_1_i_c_l_simple_function"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="classarm__compute_1_1_i_c_l_simple_function.xhtml#ac2ab9812ab0ef822035d5b33eefd8e75">More...</a><br /></td></tr>
<tr class="separator:ac2ab9812ab0ef822035d5b33eefd8e75 inherit pub_methods_classarm__compute_1_1_i_c_l_simple_function"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4124c4eace6e9141a702a13338fdc614 inherit pub_methods_classarm__compute_1_1_i_c_l_simple_function"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_simple_function.xhtml#a4124c4eace6e9141a702a13338fdc614">ICLSimpleFunction</a> (<a class="el" href="classarm__compute_1_1_i_c_l_simple_function.xhtml">ICLSimpleFunction</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:a4124c4eace6e9141a702a13338fdc614 inherit pub_methods_classarm__compute_1_1_i_c_l_simple_function"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default move constructor.  <a href="classarm__compute_1_1_i_c_l_simple_function.xhtml#a4124c4eace6e9141a702a13338fdc614">More...</a><br /></td></tr>
<tr class="separator:a4124c4eace6e9141a702a13338fdc614 inherit pub_methods_classarm__compute_1_1_i_c_l_simple_function"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab1b50b6d8c633c9f858260b5960747b7 inherit pub_methods_classarm__compute_1_1_i_c_l_simple_function"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_c_l_simple_function.xhtml">ICLSimpleFunction</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_simple_function.xhtml#ab1b50b6d8c633c9f858260b5960747b7">operator=</a> (const <a class="el" href="classarm__compute_1_1_i_c_l_simple_function.xhtml">ICLSimpleFunction</a> &amp;)=delete</td></tr>
<tr class="memdesc:ab1b50b6d8c633c9f858260b5960747b7 inherit pub_methods_classarm__compute_1_1_i_c_l_simple_function"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="classarm__compute_1_1_i_c_l_simple_function.xhtml#ab1b50b6d8c633c9f858260b5960747b7">More...</a><br /></td></tr>
<tr class="separator:ab1b50b6d8c633c9f858260b5960747b7 inherit pub_methods_classarm__compute_1_1_i_c_l_simple_function"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5eb941d1c73752cccece9fb065925e81 inherit pub_methods_classarm__compute_1_1_i_c_l_simple_function"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_c_l_simple_function.xhtml">ICLSimpleFunction</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_simple_function.xhtml#a5eb941d1c73752cccece9fb065925e81">operator=</a> (<a class="el" href="classarm__compute_1_1_i_c_l_simple_function.xhtml">ICLSimpleFunction</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:a5eb941d1c73752cccece9fb065925e81 inherit pub_methods_classarm__compute_1_1_i_c_l_simple_function"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default move assignment operator.  <a href="classarm__compute_1_1_i_c_l_simple_function.xhtml#a5eb941d1c73752cccece9fb065925e81">More...</a><br /></td></tr>
<tr class="separator:a5eb941d1c73752cccece9fb065925e81 inherit pub_methods_classarm__compute_1_1_i_c_l_simple_function"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a28572a8222c1b20763f2f227b1f49cc6 inherit pub_methods_classarm__compute_1_1_i_c_l_simple_function"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_simple_function.xhtml#a28572a8222c1b20763f2f227b1f49cc6">~ICLSimpleFunction</a> ()</td></tr>
<tr class="memdesc:a28572a8222c1b20763f2f227b1f49cc6 inherit pub_methods_classarm__compute_1_1_i_c_l_simple_function"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default destructor.  <a href="classarm__compute_1_1_i_c_l_simple_function.xhtml#a28572a8222c1b20763f2f227b1f49cc6">More...</a><br /></td></tr>
<tr class="separator:a28572a8222c1b20763f2f227b1f49cc6 inherit pub_methods_classarm__compute_1_1_i_c_l_simple_function"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a92fe532c342ae2b07956a65520c05362 inherit pub_methods_classarm__compute_1_1_i_c_l_simple_function"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_simple_function.xhtml#a92fe532c342ae2b07956a65520c05362">run</a> () override final</td></tr>
<tr class="memdesc:a92fe532c342ae2b07956a65520c05362 inherit pub_methods_classarm__compute_1_1_i_c_l_simple_function"><td class="mdescLeft">&#160;</td><td class="mdescRight">Run the kernels contained in the function.  <a href="classarm__compute_1_1_i_c_l_simple_function.xhtml#a92fe532c342ae2b07956a65520c05362">More...</a><br /></td></tr>
<tr class="separator:a92fe532c342ae2b07956a65520c05362 inherit pub_methods_classarm__compute_1_1_i_c_l_simple_function"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1_i_function"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1_i_function')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1_i_function.xhtml">IFunction</a></td></tr>
<tr class="memitem:ab921ecc3f3f6ae2b4bd61f3e1998d8c4 inherit pub_methods_classarm__compute_1_1_i_function"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_function.xhtml#ab921ecc3f3f6ae2b4bd61f3e1998d8c4">~IFunction</a> ()=default</td></tr>
<tr class="memdesc:ab921ecc3f3f6ae2b4bd61f3e1998d8c4 inherit pub_methods_classarm__compute_1_1_i_function"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="classarm__compute_1_1_i_function.xhtml#ab921ecc3f3f6ae2b4bd61f3e1998d8c4">More...</a><br /></td></tr>
<tr class="separator:ab921ecc3f3f6ae2b4bd61f3e1998d8c4 inherit pub_methods_classarm__compute_1_1_i_function"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a820f7291c24155a2980512fae45aac26 inherit pub_methods_classarm__compute_1_1_i_function"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_function.xhtml#a820f7291c24155a2980512fae45aac26">prepare</a> ()</td></tr>
<tr class="memdesc:a820f7291c24155a2980512fae45aac26 inherit pub_methods_classarm__compute_1_1_i_function"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prepare the function for executing.  <a href="classarm__compute_1_1_i_function.xhtml#a820f7291c24155a2980512fae45aac26">More...</a><br /></td></tr>
<tr class="separator:a820f7291c24155a2980512fae45aac26 inherit pub_methods_classarm__compute_1_1_i_function"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Basic function to execute sobel 3x3 filter. </p>
<p>This function calls the following OpenCL kernels:</p>
<ol type="1">
<li><a class="el" href="classarm__compute_1_1_c_l_fill_border_kernel.xhtml">CLFillBorderKernel</a> (executed if border_mode == CONSTANT or border_mode == REPLICATE)</li>
<li><a class="el" href="classarm__compute_1_1_c_l_sobel3x3_kernel.xhtml">CLSobel3x3Kernel</a></li>
</ol>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.xhtml#_deprecated000043">Deprecated:</a></b></dt><dd>This function is deprecated and is intended to be removed in 21.05 release</dd></dl>

<p class="definition">Definition at line <a class="el" href="_c_l_sobel3x3_8h_source.xhtml#l00045">45</a> of file <a class="el" href="_c_l_sobel3x3_8h_source.xhtml">CLSobel3x3.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a6aac5007d7117252aa4a9dcb8b0029dc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6aac5007d7117252aa4a9dcb8b0029dc">&#9670;&nbsp;</a></span>CLSobel3x3() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_sobel3x3.xhtml">CLSobel3x3</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default Constructor. </p>

</div>
</div>
<a id="ae387183871801e93045a81a477bc7e81"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae387183871801e93045a81a477bc7e81">&#9670;&nbsp;</a></span>CLSobel3x3() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_sobel3x3.xhtml">CLSobel3x3</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_c_l_sobel3x3.xhtml">CLSobel3x3</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copied. </p>

</div>
</div>
<a id="a13b5ea62e9e4438f2ac402d74829a08d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a13b5ea62e9e4438f2ac402d74829a08d">&#9670;&nbsp;</a></span>~CLSobel3x3()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classarm__compute_1_1_c_l_sobel3x3.xhtml">CLSobel3x3</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default destructor. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a62d1b655e7211f3ab44ed1a9c81a1336"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a62d1b655e7211f3ab44ed1a9c81a1336">&#9670;&nbsp;</a></span>configure() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void configure </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td>
          <td class="paramname"><em>output_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td>
          <td class="paramname"><em>output_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute.xhtml#a15a05537a472ee742404821851529327">BorderMode</a>&#160;</td>
          <td class="paramname"><em>border_mode</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>constant_border_value</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialise the function's source, destinations and border mode. </p>
<dl class="section note"><dt>Note</dt><dd>At least one of output_x or output_y must be not NULL.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">input</td><td>Source tensor. Data types supported: U8. (Written to only for <code>border_mode</code> != UNDEFINED) </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">output_x</td><td>(optional) Destination for the Sobel 3x3 convolution along the X axis. Data types supported: S16. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">output_y</td><td>(optional) Destination for the Sobel 3x3 convolution along the Y axis. Data types supported: S16. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">border_mode</td><td>Border mode to use for the convolution. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">constant_border_value</td><td>(Optional) Constant value to use for borders if border_mode is set to CONSTANT. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_c_l_sobel3x3_8cpp_source.xhtml#l00036">36</a> of file <a class="el" href="_c_l_sobel3x3_8cpp_source.xhtml">CLSobel3x3.cpp</a>.</p>

<p class="reference">References <a class="el" href="_c_l_kernel_library_8cpp_source.xhtml#l01119">CLKernelLibrary::get()</a>.</p>
<div class="fragment"><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_sobel3x3.xhtml#a62d1b655e7211f3ab44ed1a9c81a1336">configure</a>(<a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#acba005f5ce2c62cbf3f94d074d9007aa">CLKernelLibrary::get</a>().get_compile_context(), input, output_x, output_y, border_mode, constant_border_value);</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1_c_l_kernel_library_xhtml_acba005f5ce2c62cbf3f94d074d9007aa"><div class="ttname"><a href="classarm__compute_1_1_c_l_kernel_library.xhtml#acba005f5ce2c62cbf3f94d074d9007aa">arm_compute::CLKernelLibrary::get</a></div><div class="ttdeci">static CLKernelLibrary &amp; get()</div><div class="ttdoc">Access the KernelLibrary singleton. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_kernel_library_8cpp_source.xhtml#l01119">CLKernelLibrary.cpp:1119</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_sobel3x3_xhtml_a62d1b655e7211f3ab44ed1a9c81a1336"><div class="ttname"><a href="classarm__compute_1_1_c_l_sobel3x3.xhtml#a62d1b655e7211f3ab44ed1a9c81a1336">arm_compute::CLSobel3x3::configure</a></div><div class="ttdeci">void configure(ICLTensor *input, ICLTensor *output_x, ICLTensor *output_y, BorderMode border_mode, uint8_t constant_border_value=0)</div><div class="ttdoc">Initialise the function&amp;#39;s source, destinations and border mode. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_sobel3x3_8cpp_source.xhtml#l00036">CLSobel3x3.cpp:36</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a103f7c6e53243bbee447429328c0152d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a103f7c6e53243bbee447429328c0152d">&#9670;&nbsp;</a></span>configure() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void configure </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_c_l_compile_context.xhtml">CLCompileContext</a> &amp;&#160;</td>
          <td class="paramname"><em>compile_context</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td>
          <td class="paramname"><em>output_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td>
          <td class="paramname"><em>output_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute.xhtml#a15a05537a472ee742404821851529327">BorderMode</a>&#160;</td>
          <td class="paramname"><em>border_mode</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>constant_border_value</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialise the function's source, destinations and border mode. </p>
<dl class="section note"><dt>Note</dt><dd>At least one of output_x or output_y must be not NULL.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">compile_context</td><td>The compile context to be used. </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">input</td><td>Source tensor. Data types supported: U8. (Written to only for <code>border_mode</code> != UNDEFINED) </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">output_x</td><td>(optional) Destination for the Sobel 3x3 convolution along the X axis. Data types supported: S16. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">output_y</td><td>(optional) Destination for the Sobel 3x3 convolution along the Y axis. Data types supported: S16. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">border_mode</td><td>Border mode to use for the convolution. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">constant_border_value</td><td>(Optional) Constant value to use for borders if border_mode is set to CONSTANT. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_c_l_sobel3x3_8cpp_source.xhtml#l00041">41</a> of file <a class="el" href="_c_l_sobel3x3_8cpp_source.xhtml">CLSobel3x3.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearm__compute.xhtml#a15a05537a472ee742404821851529327a0db45d2a4141101bdfe48e3314cfbca3">arm_compute::UNDEFINED</a>.</p>
<div class="fragment"><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;{</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <span class="keyword">auto</span> k = std::make_unique&lt;CLSobel3x3Kernel&gt;();</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    k-&gt;configure(compile_context, input, output_x, output_y, border_mode == <a class="code" href="namespacearm__compute.xhtml#a15a05537a472ee742404821851529327a0db45d2a4141101bdfe48e3314cfbca3">BorderMode::UNDEFINED</a>);</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    _kernel = std::move(k);</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    _border_handler-&gt;configure(compile_context, input, _kernel-&gt;border_size(), border_mode, <a class="code" href="classarm__compute_1_1_pixel_value.xhtml">PixelValue</a>(constant_border_value));</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1_pixel_value_xhtml"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml">arm_compute::PixelValue</a></div><div class="ttdoc">Class describing the value of a pixel for any image format. </div><div class="ttdef"><b>Definition:</b> <a href="_pixel_value_8h_source.xhtml#l00034">PixelValue.h:34</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a15a05537a472ee742404821851529327a0db45d2a4141101bdfe48e3314cfbca3"><div class="ttname"><a href="namespacearm__compute.xhtml#a15a05537a472ee742404821851529327a0db45d2a4141101bdfe48e3314cfbca3">arm_compute::BorderMode::UNDEFINED</a></div><div class="ttdoc">Borders are left undefined. </div></div>
</div><!-- fragment -->
</div>
</div>
<a id="acc9007238340b3e6c0641e85551f9123"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acc9007238340b3e6c0641e85551f9123">&#9670;&nbsp;</a></span>operator=()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_sobel3x3.xhtml">CLSobel3x3</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_c_l_sobel3x3.xhtml">CLSobel3x3</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copied. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>arm_compute/runtime/CL/functions/<a class="el" href="_c_l_sobel3x3_8h_source.xhtml">CLSobel3x3.h</a></li>
<li>src/runtime/CL/functions/<a class="el" href="_c_l_sobel3x3_8cpp_source.xhtml">CLSobel3x3.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_c_l_sobel3x3.xhtml">CLSobel3x3</a></li>
    <li class="footer">Generated on Thu Feb 25 2021 17:17:47 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
