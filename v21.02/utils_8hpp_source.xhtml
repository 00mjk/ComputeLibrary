<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/core/NEON/kernels/arm_gemm/utils.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">21.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('utils_8hpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">utils.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="utils_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2017 Arm Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#pragma once</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;arm_gemm.hpp&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &lt;cstddef&gt;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="comment">// Macro for unreachable code (e.g. impossible default cases on switch)</span></div><div class="line"><a name="l00032"></a><span class="lineno"><a class="line" href="utils_8hpp.xhtml#aa468b37bb9d2901433139d01b79036b0">   32</a></span>&#160;<span class="preprocessor">#define UNREACHABLE(why)  __builtin_unreachable()</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="comment">// Paranoid option for the above with assert</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment">// #define UNREACHABLE(why)   assert(0 &amp;&amp; why)</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__gemm.xhtml">arm_gemm</a> {</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00040"></a><span class="lineno"><a class="line" href="namespacearm__gemm.xhtml#aed0e2852860309af99fad49a8c3ef315">   40</a></span>&#160;<span class="keyword">inline</span> T <a class="code" href="namespacearm__gemm.xhtml#aed0e2852860309af99fad49a8c3ef315">iceildiv</a>(<span class="keyword">const</span> T a, <span class="keyword">const</span> T <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>) {</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <span class="keywordflow">return</span> (a + b - 1) / <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;}</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00045"></a><span class="lineno"><a class="line" href="namespacearm__gemm.xhtml#a2cfd518808ae94de30b3d1a3ba7c7890">   45</a></span>&#160;<span class="keyword">inline</span> T <a class="code" href="namespacearm__gemm.xhtml#a2cfd518808ae94de30b3d1a3ba7c7890">roundup</a>(<span class="keyword">const</span> T a, <span class="keyword">const</span> T <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>) {</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    T rem = a % <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <span class="keywordflow">if</span> (rem) {</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        <span class="keywordflow">return</span> a + b - rem;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        <span class="keywordflow">return</span> a;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    }</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;}</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="namespacearm__gemm.xhtml#a764ff3bbe137fc7792aee26f022aa29d">   55</a></span>&#160;<span class="keyword">enum class</span> <a class="code" href="namespacearm__gemm.xhtml#a764ff3bbe137fc7792aee26f022aa29d">VLType</a> {</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <a class="code" href="namespacearm__gemm.xhtml#a764ff3bbe137fc7792aee26f022aa29da6adf97f83acf6453d4a6a4b1070f3754">None</a>,</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <a class="code" href="namespacearm__gemm.xhtml#a764ff3bbe137fc7792aee26f022aa29da8a880ec3350518f78cffab1bd18e97ba">SVE</a>,</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;};</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00061"></a><span class="lineno"><a class="line" href="structarm__gemm_1_1_indirect_output_arg.xhtml">   61</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__gemm_1_1_indirect_output_arg.xhtml">IndirectOutputArg</a> {</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <span class="keyword">struct </span>{</div><div class="line"><a name="l00063"></a><span class="lineno"><a class="line" href="structarm__gemm_1_1_indirect_output_arg.xhtml#ac359102579ddb360e15be918427f6c0d">   63</a></span>&#160;        T       *<a class="code" href="structarm__gemm_1_1_indirect_output_arg.xhtml#ac359102579ddb360e15be918427f6c0d">base</a>;</div><div class="line"><a name="l00064"></a><span class="lineno"><a class="line" href="structarm__gemm_1_1_indirect_output_arg.xhtml#a3f19cd85df5258a38e4618a89bd5ff46">   64</a></span>&#160;        <span class="keywordtype">size_t</span>   <a class="code" href="structarm__gemm_1_1_indirect_output_arg.xhtml#a3f19cd85df5258a38e4618a89bd5ff46">stride</a>;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    } direct = {};</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="keyword">struct </span>{</div><div class="line"><a name="l00067"></a><span class="lineno"><a class="line" href="structarm__gemm_1_1_indirect_output_arg.xhtml#a7a4001eab4bbbf5c56552bd55c390d58">   67</a></span>&#160;        T * <span class="keyword">const</span> *<a class="code" href="structarm__gemm_1_1_indirect_output_arg.xhtml#a7a4001eab4bbbf5c56552bd55c390d58">ptr</a>;</div><div class="line"><a name="l00068"></a><span class="lineno"><a class="line" href="structarm__gemm_1_1_indirect_output_arg.xhtml#aadb6d6eb83e646653a1402032e45dcab">   68</a></span>&#160;        <span class="keywordtype">size_t</span>     <a class="code" href="structarm__gemm_1_1_indirect_output_arg.xhtml#aadb6d6eb83e646653a1402032e45dcab">offset</a>;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    } <a class="code" href="_n_e_g_e_m_m_assembly_dispatch_8cpp.xhtml#a9a5250a0c844eba2b009bc5e35978614">indirect</a> = {};</div><div class="line"><a name="l00070"></a><span class="lineno"><a class="line" href="structarm__gemm_1_1_indirect_output_arg.xhtml#afbd0d77e988f1aebac8264e7bb8cc396">   70</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="structarm__gemm_1_1_indirect_output_arg.xhtml#afbd0d77e988f1aebac8264e7bb8cc396">is_indirect</a>;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="comment">// Direct</span></div><div class="line"><a name="l00073"></a><span class="lineno"><a class="line" href="structarm__gemm_1_1_indirect_output_arg.xhtml#a20e89b5af7d1120ed0672d392ba4b912">   73</a></span>&#160;    <a class="code" href="structarm__gemm_1_1_indirect_output_arg.xhtml#a20e89b5af7d1120ed0672d392ba4b912">IndirectOutputArg</a>(T *base, <span class="keywordtype">size_t</span> stride) : is_indirect(false) {</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        direct.base = base;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        direct.stride = stride;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    }</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="comment">// Indirect</span></div><div class="line"><a name="l00079"></a><span class="lineno"><a class="line" href="structarm__gemm_1_1_indirect_output_arg.xhtml#abbb57fb8b939cc200dcdb5cc316c9252">   79</a></span>&#160;    <a class="code" href="structarm__gemm_1_1_indirect_output_arg.xhtml#abbb57fb8b939cc200dcdb5cc316c9252">IndirectOutputArg</a>(T * <span class="keyword">const</span> * ptr, <span class="keywordtype">size_t</span> <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>) : is_indirect(true) {</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        <a class="code" href="_n_e_g_e_m_m_assembly_dispatch_8cpp.xhtml#a9a5250a0c844eba2b009bc5e35978614">indirect</a>.ptr = ptr;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        <a class="code" href="_n_e_g_e_m_m_assembly_dispatch_8cpp.xhtml#a9a5250a0c844eba2b009bc5e35978614">indirect</a>.offset = <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    }</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno"><a class="line" href="structarm__gemm_1_1_indirect_output_arg.xhtml#acd49e25ac9b342ae1c6ed487c1bd2cdf">   84</a></span>&#160;    <a class="code" href="structarm__gemm_1_1_indirect_output_arg.xhtml#acd49e25ac9b342ae1c6ed487c1bd2cdf">IndirectOutputArg</a>() : is_indirect(false) {</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        direct.base = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        direct.stride = 0;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    }</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;};</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="comment">// Check that the provided Requantize32 doesn&#39;t have a left shift.</span></div><div class="line"><a name="l00091"></a><span class="lineno"><a class="line" href="namespacearm__gemm.xhtml#a99538cb7b81a0b0e703dfa15d2947e77">   91</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code" href="namespacearm__gemm.xhtml#a99538cb7b81a0b0e703dfa15d2947e77">quant_no_left_shift</a>(<span class="keyword">const</span> Requantize32 &amp;qp) {</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <span class="keywordflow">if</span> (qp.per_channel_requant) {</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        <span class="keywordflow">return</span> (qp.per_channel_left_shifts == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        <span class="keywordflow">return</span> (qp.per_layer_left_shift == 0);</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    }</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;}</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="comment">// Check that the provided Requantize32 is compatible with the &quot;symmetric&quot; hybrid kernels.  These don&#39;t include row</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="comment">// sums, so the &#39;b_offset&#39; has to be zero.</span></div><div class="line"><a name="l00101"></a><span class="lineno"><a class="line" href="namespacearm__gemm.xhtml#ae6d96fa7911828f72031f52155b14720">  101</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code" href="namespacearm__gemm.xhtml#ae6d96fa7911828f72031f52155b14720">quant_hybrid_symmetric</a>(<span class="keyword">const</span> Requantize32 &amp;qp) {</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearm__gemm.xhtml#a99538cb7b81a0b0e703dfa15d2947e77">quant_no_left_shift</a>(qp) &amp;&amp; qp.b_offset == 0;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;}</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment">// Check that the provided Requantize32 is compatible with the &quot;asymmetric&quot; hybrid kernels.  These don&#39;t support per</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment">// channel quantization.  Technically b_offset==0 cases would work, but it is a waste to sum and then multiply by 0...</span></div><div class="line"><a name="l00107"></a><span class="lineno"><a class="line" href="namespacearm__gemm.xhtml#a0b11b3301c500a110864663ae9e6687c">  107</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code" href="namespacearm__gemm.xhtml#a0b11b3301c500a110864663ae9e6687c">quant_hybrid_asymmetric</a>(<span class="keyword">const</span> Requantize32 &amp;qp) {</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearm__gemm.xhtml#a99538cb7b81a0b0e703dfa15d2947e77">quant_no_left_shift</a>(qp) <span class="comment">/*  &amp;&amp; qp.b_offset != 0 */</span> &amp;&amp; qp.per_channel_requant==<span class="keyword">false</span>;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;}</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00112"></a><span class="lineno"><a class="line" href="structarm__gemm_1_1_indirect_input_arg.xhtml">  112</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__gemm_1_1_indirect_input_arg.xhtml">IndirectInputArg</a> {</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <span class="keyword">struct </span>{</div><div class="line"><a name="l00114"></a><span class="lineno"><a class="line" href="structarm__gemm_1_1_indirect_input_arg.xhtml#a25f89427a5d0ee65d764cf42724f79a9">  114</a></span>&#160;        <span class="keyword">const</span> T *<a class="code" href="structarm__gemm_1_1_indirect_input_arg.xhtml#a25f89427a5d0ee65d764cf42724f79a9">base</a>;</div><div class="line"><a name="l00115"></a><span class="lineno"><a class="line" href="structarm__gemm_1_1_indirect_input_arg.xhtml#a3f19cd85df5258a38e4618a89bd5ff46">  115</a></span>&#160;        <span class="keywordtype">size_t</span>   <a class="code" href="structarm__gemm_1_1_indirect_input_arg.xhtml#a3f19cd85df5258a38e4618a89bd5ff46">stride</a>;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    } direct = {};</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <span class="keyword">struct </span>{</div><div class="line"><a name="l00118"></a><span class="lineno"><a class="line" href="structarm__gemm_1_1_indirect_input_arg.xhtml#a949ce6ba30d08ba767b6544d146743b7">  118</a></span>&#160;        <span class="keyword">const</span> T * <span class="keyword">const</span> * <span class="keyword">const</span> * <a class="code" href="structarm__gemm_1_1_indirect_input_arg.xhtml#a949ce6ba30d08ba767b6544d146743b7">ptr</a>;</div><div class="line"><a name="l00119"></a><span class="lineno"><a class="line" href="structarm__gemm_1_1_indirect_input_arg.xhtml#ad87c434e4a2adc7bfb69f255533d0039">  119</a></span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="structarm__gemm_1_1_indirect_input_arg.xhtml#ad87c434e4a2adc7bfb69f255533d0039">start_row</a>;</div><div class="line"><a name="l00120"></a><span class="lineno"><a class="line" href="structarm__gemm_1_1_indirect_input_arg.xhtml#a69c83b15fb4ffb3b9b689dc1e606b125">  120</a></span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="structarm__gemm_1_1_indirect_input_arg.xhtml#a69c83b15fb4ffb3b9b689dc1e606b125">start_col</a>;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    } <a class="code" href="_n_e_g_e_m_m_assembly_dispatch_8cpp.xhtml#a9a5250a0c844eba2b009bc5e35978614">indirect</a> = {};</div><div class="line"><a name="l00122"></a><span class="lineno"><a class="line" href="structarm__gemm_1_1_indirect_input_arg.xhtml#afbd0d77e988f1aebac8264e7bb8cc396">  122</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="structarm__gemm_1_1_indirect_input_arg.xhtml#afbd0d77e988f1aebac8264e7bb8cc396">is_indirect</a>;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <span class="comment">// Direct</span></div><div class="line"><a name="l00125"></a><span class="lineno"><a class="line" href="structarm__gemm_1_1_indirect_input_arg.xhtml#ac0d3d791f60106940c82aa0138d88e08">  125</a></span>&#160;    <a class="code" href="structarm__gemm_1_1_indirect_input_arg.xhtml#ac0d3d791f60106940c82aa0138d88e08">IndirectInputArg</a>(<span class="keyword">const</span> T *base, <span class="keywordtype">size_t</span> stride) : is_indirect(false) {</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        direct.base = base;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        direct.stride = stride;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    }</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <span class="comment">// Indirect</span></div><div class="line"><a name="l00131"></a><span class="lineno"><a class="line" href="structarm__gemm_1_1_indirect_input_arg.xhtml#a0ce5e7f6778292bbd9930a1883da242c">  131</a></span>&#160;    <a class="code" href="structarm__gemm_1_1_indirect_input_arg.xhtml#a0ce5e7f6778292bbd9930a1883da242c">IndirectInputArg</a>(<span class="keyword">const</span> T * <span class="keyword">const</span> * <span class="keyword">const</span> *ptr, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> start_row, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> start_col) : is_indirect(true) {</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        <a class="code" href="_n_e_g_e_m_m_assembly_dispatch_8cpp.xhtml#a9a5250a0c844eba2b009bc5e35978614">indirect</a>.ptr = ptr;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        <a class="code" href="_n_e_g_e_m_m_assembly_dispatch_8cpp.xhtml#a9a5250a0c844eba2b009bc5e35978614">indirect</a>.start_row = start_row;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        <a class="code" href="_n_e_g_e_m_m_assembly_dispatch_8cpp.xhtml#a9a5250a0c844eba2b009bc5e35978614">indirect</a>.start_col = start_col;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    }</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div><div class="line"><a name="l00137"></a><span class="lineno"><a class="line" href="structarm__gemm_1_1_indirect_input_arg.xhtml#aac8e1e4c014af8dc80fa6c97a13463fa">  137</a></span>&#160;    <a class="code" href="structarm__gemm_1_1_indirect_input_arg.xhtml#aac8e1e4c014af8dc80fa6c97a13463fa">IndirectInputArg</a>() : is_indirect(false) {</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        direct.base = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        direct.stride = 0;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    }</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;};</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div><div class="line"><a name="l00143"></a><span class="lineno"><a class="line" href="namespacearm__gemm_1_1utils.xhtml">  143</a></span>&#160;<span class="keyword">namespace </span>utils {</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="keyword">namespace </span>{</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="preprocessor">#ifdef __ARM_FEATURE_SVE</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="keyword">template</span>&lt;<span class="keywordtype">size_t</span> sz&gt;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="keyword">inline</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> get_vector_length_sz() {</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> v;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    __asm (</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        <span class="stringliteral">&quot;cntb   %0&quot;</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        : <span class="stringliteral">&quot;=r&quot;</span> (v)</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    );</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    <span class="keywordflow">return</span> v / sz;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;}</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="preprocessor">#define VEC_LEN_SPEC(sz, opcode) template &lt;&gt; inline unsigned long get_vector_length_sz&lt;sz&gt;() { unsigned long v; __asm ( opcode &quot; %0&quot; : &quot;=r&quot; (v)); return v; }</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;VEC_LEN_SPEC(8, <span class="stringliteral">&quot;cntd&quot;</span>)</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;VEC_LEN_SPEC(4, <span class="stringliteral">&quot;cntw&quot;</span>)</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;VEC_LEN_SPEC(2, <span class="stringliteral">&quot;cnth&quot;</span>)</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;VEC_LEN_SPEC(1, <span class="stringliteral">&quot;cntb&quot;</span>)</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;} <span class="comment">// anonymous namespace</span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00170"></a><span class="lineno"><a class="line" href="namespacearm__gemm_1_1utils.xhtml#aa7ef5562f876812256212715f49ef569">  170</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <a class="code" href="namespacearm__gemm_1_1utils.xhtml#aa7ef5562f876812256212715f49ef569">get_vector_length</a>() {</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="preprocessor">#ifdef __ARM_FEATURE_SVE</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    <span class="keywordflow">return</span> get_vector_length_sz&lt;sizeof(T)&gt;();</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <span class="keywordflow">return</span> 16 / <span class="keyword">sizeof</span>(T);</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;}</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;} <span class="comment">// utils namespace</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;} <span class="comment">// arm_gemm namespace</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacearm__gemm_1_1utils.xhtml">arm_gemm::utils</a>;</div><div class="ttc" id="namespacearm__gemm_xhtml_a2cfd518808ae94de30b3d1a3ba7c7890"><div class="ttname"><a href="namespacearm__gemm.xhtml#a2cfd518808ae94de30b3d1a3ba7c7890">arm_gemm::roundup</a></div><div class="ttdeci">T roundup(const T a, const T b)</div><div class="ttdef"><b>Definition:</b> <a href="utils_8hpp_source.xhtml#l00045">utils.hpp:45</a></div></div>
<div class="ttc" id="structarm__gemm_1_1_indirect_output_arg_xhtml_abbb57fb8b939cc200dcdb5cc316c9252"><div class="ttname"><a href="structarm__gemm_1_1_indirect_output_arg.xhtml#abbb57fb8b939cc200dcdb5cc316c9252">arm_gemm::IndirectOutputArg::IndirectOutputArg</a></div><div class="ttdeci">IndirectOutputArg(T *const *ptr, size_t offset)</div><div class="ttdef"><b>Definition:</b> <a href="utils_8hpp_source.xhtml#l00079">utils.hpp:79</a></div></div>
<div class="ttc" id="structarm__gemm_1_1_indirect_input_arg_xhtml_a949ce6ba30d08ba767b6544d146743b7"><div class="ttname"><a href="structarm__gemm_1_1_indirect_input_arg.xhtml#a949ce6ba30d08ba767b6544d146743b7">arm_gemm::IndirectInputArg::ptr</a></div><div class="ttdeci">const T *const  *const  * ptr</div><div class="ttdef"><b>Definition:</b> <a href="utils_8hpp_source.xhtml#l00118">utils.hpp:118</a></div></div>
<div class="ttc" id="src_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml_a009469e4d9b8fce3b6d5e97d2077827d"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a></div><div class="ttdeci">__global uchar * offset(const Image *img, int x, int y)</div><div class="ttdoc">Get the pointer position of a Image. </div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00846">helpers.h:846</a></div></div>
<div class="ttc" id="structarm__gemm_1_1_indirect_output_arg_xhtml_ac359102579ddb360e15be918427f6c0d"><div class="ttname"><a href="structarm__gemm_1_1_indirect_output_arg.xhtml#ac359102579ddb360e15be918427f6c0d">arm_gemm::IndirectOutputArg::base</a></div><div class="ttdeci">T * base</div><div class="ttdef"><b>Definition:</b> <a href="utils_8hpp_source.xhtml#l00063">utils.hpp:63</a></div></div>
<div class="ttc" id="namespacearm__gemm_xhtml_a764ff3bbe137fc7792aee26f022aa29da6adf97f83acf6453d4a6a4b1070f3754"><div class="ttname"><a href="namespacearm__gemm.xhtml#a764ff3bbe137fc7792aee26f022aa29da6adf97f83acf6453d4a6a4b1070f3754">arm_gemm::VLType::None</a></div></div>
<div class="ttc" id="structarm__gemm_1_1_indirect_output_arg_xhtml"><div class="ttname"><a href="structarm__gemm_1_1_indirect_output_arg.xhtml">arm_gemm::IndirectOutputArg</a></div><div class="ttdef"><b>Definition:</b> <a href="utils_8hpp_source.xhtml#l00061">utils.hpp:61</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_aa76b4a6e74940dabc5b7fc6b2dab3545"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">arm_compute::test::validation::b</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; b</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00157">DFT.cpp:157</a></div></div>
<div class="ttc" id="namespacearm__gemm_xhtml_ae6d96fa7911828f72031f52155b14720"><div class="ttname"><a href="namespacearm__gemm.xhtml#ae6d96fa7911828f72031f52155b14720">arm_gemm::quant_hybrid_symmetric</a></div><div class="ttdeci">bool quant_hybrid_symmetric(const Requantize32 &amp;qp)</div><div class="ttdef"><b>Definition:</b> <a href="utils_8hpp_source.xhtml#l00101">utils.hpp:101</a></div></div>
<div class="ttc" id="namespacearm__gemm_xhtml_aed0e2852860309af99fad49a8c3ef315"><div class="ttname"><a href="namespacearm__gemm.xhtml#aed0e2852860309af99fad49a8c3ef315">arm_gemm::iceildiv</a></div><div class="ttdeci">T iceildiv(const T a, const T b)</div><div class="ttdef"><b>Definition:</b> <a href="utils_8hpp_source.xhtml#l00040">utils.hpp:40</a></div></div>
<div class="ttc" id="namespacearm__gemm_xhtml_a764ff3bbe137fc7792aee26f022aa29da8a880ec3350518f78cffab1bd18e97ba"><div class="ttname"><a href="namespacearm__gemm.xhtml#a764ff3bbe137fc7792aee26f022aa29da8a880ec3350518f78cffab1bd18e97ba">arm_gemm::VLType::SVE</a></div></div>
<div class="ttc" id="structarm__gemm_1_1_indirect_output_arg_xhtml_aadb6d6eb83e646653a1402032e45dcab"><div class="ttname"><a href="structarm__gemm_1_1_indirect_output_arg.xhtml#aadb6d6eb83e646653a1402032e45dcab">arm_gemm::IndirectOutputArg::offset</a></div><div class="ttdeci">size_t offset</div><div class="ttdef"><b>Definition:</b> <a href="utils_8hpp_source.xhtml#l00068">utils.hpp:68</a></div></div>
<div class="ttc" id="namespacearm__gemm_xhtml"><div class="ttname"><a href="namespacearm__gemm.xhtml">arm_gemm</a></div><div class="ttdef"><b>Definition:</b> <a href="barrier_8hpp_source.xhtml#l00030">barrier.hpp:30</a></div></div>
<div class="ttc" id="structarm__gemm_1_1_indirect_output_arg_xhtml_afbd0d77e988f1aebac8264e7bb8cc396"><div class="ttname"><a href="structarm__gemm_1_1_indirect_output_arg.xhtml#afbd0d77e988f1aebac8264e7bb8cc396">arm_gemm::IndirectOutputArg::is_indirect</a></div><div class="ttdeci">bool is_indirect</div><div class="ttdef"><b>Definition:</b> <a href="utils_8hpp_source.xhtml#l00070">utils.hpp:70</a></div></div>
<div class="ttc" id="structarm__gemm_1_1_indirect_input_arg_xhtml_a69c83b15fb4ffb3b9b689dc1e606b125"><div class="ttname"><a href="structarm__gemm_1_1_indirect_input_arg.xhtml#a69c83b15fb4ffb3b9b689dc1e606b125">arm_gemm::IndirectInputArg::start_col</a></div><div class="ttdeci">unsigned int start_col</div><div class="ttdef"><b>Definition:</b> <a href="utils_8hpp_source.xhtml#l00120">utils.hpp:120</a></div></div>
<div class="ttc" id="namespacearm__gemm_xhtml_a99538cb7b81a0b0e703dfa15d2947e77"><div class="ttname"><a href="namespacearm__gemm.xhtml#a99538cb7b81a0b0e703dfa15d2947e77">arm_gemm::quant_no_left_shift</a></div><div class="ttdeci">bool quant_no_left_shift(const Requantize32 &amp;qp)</div><div class="ttdef"><b>Definition:</b> <a href="utils_8hpp_source.xhtml#l00091">utils.hpp:91</a></div></div>
<div class="ttc" id="_n_e_g_e_m_m_assembly_dispatch_8cpp_xhtml_a9a5250a0c844eba2b009bc5e35978614"><div class="ttname"><a href="_n_e_g_e_m_m_assembly_dispatch_8cpp.xhtml#a9a5250a0c844eba2b009bc5e35978614">indirect</a></div><div class="ttdeci">bool indirect</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_g_e_m_m_assembly_dispatch_8cpp_source.xhtml#l00054">NEGEMMAssemblyDispatch.cpp:54</a></div></div>
<div class="ttc" id="structarm__gemm_1_1_indirect_input_arg_xhtml_a3f19cd85df5258a38e4618a89bd5ff46"><div class="ttname"><a href="structarm__gemm_1_1_indirect_input_arg.xhtml#a3f19cd85df5258a38e4618a89bd5ff46">arm_gemm::IndirectInputArg::stride</a></div><div class="ttdeci">size_t stride</div><div class="ttdef"><b>Definition:</b> <a href="utils_8hpp_source.xhtml#l00115">utils.hpp:115</a></div></div>
<div class="ttc" id="structarm__gemm_1_1_indirect_output_arg_xhtml_a3f19cd85df5258a38e4618a89bd5ff46"><div class="ttname"><a href="structarm__gemm_1_1_indirect_output_arg.xhtml#a3f19cd85df5258a38e4618a89bd5ff46">arm_gemm::IndirectOutputArg::stride</a></div><div class="ttdeci">size_t stride</div><div class="ttdef"><b>Definition:</b> <a href="utils_8hpp_source.xhtml#l00064">utils.hpp:64</a></div></div>
<div class="ttc" id="structarm__gemm_1_1_indirect_input_arg_xhtml_ac0d3d791f60106940c82aa0138d88e08"><div class="ttname"><a href="structarm__gemm_1_1_indirect_input_arg.xhtml#ac0d3d791f60106940c82aa0138d88e08">arm_gemm::IndirectInputArg::IndirectInputArg</a></div><div class="ttdeci">IndirectInputArg(const T *base, size_t stride)</div><div class="ttdef"><b>Definition:</b> <a href="utils_8hpp_source.xhtml#l00125">utils.hpp:125</a></div></div>
<div class="ttc" id="structarm__gemm_1_1_indirect_input_arg_xhtml_a25f89427a5d0ee65d764cf42724f79a9"><div class="ttname"><a href="structarm__gemm_1_1_indirect_input_arg.xhtml#a25f89427a5d0ee65d764cf42724f79a9">arm_gemm::IndirectInputArg::base</a></div><div class="ttdeci">const T * base</div><div class="ttdef"><b>Definition:</b> <a href="utils_8hpp_source.xhtml#l00114">utils.hpp:114</a></div></div>
<div class="ttc" id="structarm__gemm_1_1_indirect_output_arg_xhtml_a7a4001eab4bbbf5c56552bd55c390d58"><div class="ttname"><a href="structarm__gemm_1_1_indirect_output_arg.xhtml#a7a4001eab4bbbf5c56552bd55c390d58">arm_gemm::IndirectOutputArg::ptr</a></div><div class="ttdeci">T *const  * ptr</div><div class="ttdef"><b>Definition:</b> <a href="utils_8hpp_source.xhtml#l00067">utils.hpp:67</a></div></div>
<div class="ttc" id="structarm__gemm_1_1_indirect_input_arg_xhtml_afbd0d77e988f1aebac8264e7bb8cc396"><div class="ttname"><a href="structarm__gemm_1_1_indirect_input_arg.xhtml#afbd0d77e988f1aebac8264e7bb8cc396">arm_gemm::IndirectInputArg::is_indirect</a></div><div class="ttdeci">bool is_indirect</div><div class="ttdef"><b>Definition:</b> <a href="utils_8hpp_source.xhtml#l00122">utils.hpp:122</a></div></div>
<div class="ttc" id="namespacearm__gemm_1_1utils_xhtml_aa7ef5562f876812256212715f49ef569"><div class="ttname"><a href="namespacearm__gemm_1_1utils.xhtml#aa7ef5562f876812256212715f49ef569">arm_gemm::utils::get_vector_length</a></div><div class="ttdeci">unsigned long get_vector_length()</div><div class="ttdef"><b>Definition:</b> <a href="utils_8hpp_source.xhtml#l00170">utils.hpp:170</a></div></div>
<div class="ttc" id="structarm__gemm_1_1_indirect_input_arg_xhtml_a0ce5e7f6778292bbd9930a1883da242c"><div class="ttname"><a href="structarm__gemm_1_1_indirect_input_arg.xhtml#a0ce5e7f6778292bbd9930a1883da242c">arm_gemm::IndirectInputArg::IndirectInputArg</a></div><div class="ttdeci">IndirectInputArg(const T *const *const *ptr, unsigned int start_row, unsigned int start_col)</div><div class="ttdef"><b>Definition:</b> <a href="utils_8hpp_source.xhtml#l00131">utils.hpp:131</a></div></div>
<div class="ttc" id="structarm__gemm_1_1_indirect_input_arg_xhtml_ad87c434e4a2adc7bfb69f255533d0039"><div class="ttname"><a href="structarm__gemm_1_1_indirect_input_arg.xhtml#ad87c434e4a2adc7bfb69f255533d0039">arm_gemm::IndirectInputArg::start_row</a></div><div class="ttdeci">unsigned int start_row</div><div class="ttdef"><b>Definition:</b> <a href="utils_8hpp_source.xhtml#l00119">utils.hpp:119</a></div></div>
<div class="ttc" id="structarm__gemm_1_1_indirect_input_arg_xhtml"><div class="ttname"><a href="structarm__gemm_1_1_indirect_input_arg.xhtml">arm_gemm::IndirectInputArg</a></div><div class="ttdef"><b>Definition:</b> <a href="utils_8hpp_source.xhtml#l00112">utils.hpp:112</a></div></div>
<div class="ttc" id="structarm__gemm_1_1_indirect_output_arg_xhtml_a20e89b5af7d1120ed0672d392ba4b912"><div class="ttname"><a href="structarm__gemm_1_1_indirect_output_arg.xhtml#a20e89b5af7d1120ed0672d392ba4b912">arm_gemm::IndirectOutputArg::IndirectOutputArg</a></div><div class="ttdeci">IndirectOutputArg(T *base, size_t stride)</div><div class="ttdef"><b>Definition:</b> <a href="utils_8hpp_source.xhtml#l00073">utils.hpp:73</a></div></div>
<div class="ttc" id="structarm__gemm_1_1_indirect_output_arg_xhtml_acd49e25ac9b342ae1c6ed487c1bd2cdf"><div class="ttname"><a href="structarm__gemm_1_1_indirect_output_arg.xhtml#acd49e25ac9b342ae1c6ed487c1bd2cdf">arm_gemm::IndirectOutputArg::IndirectOutputArg</a></div><div class="ttdeci">IndirectOutputArg()</div><div class="ttdef"><b>Definition:</b> <a href="utils_8hpp_source.xhtml#l00084">utils.hpp:84</a></div></div>
<div class="ttc" id="namespacearm__gemm_1_1utils_xhtml"><div class="ttname"><a href="namespacearm__gemm_1_1utils.xhtml">arm_gemm::utils</a></div><div class="ttdef"><b>Definition:</b> <a href="utils_8hpp_source.xhtml#l00143">utils.hpp:143</a></div></div>
<div class="ttc" id="namespacearm__gemm_xhtml_a0b11b3301c500a110864663ae9e6687c"><div class="ttname"><a href="namespacearm__gemm.xhtml#a0b11b3301c500a110864663ae9e6687c">arm_gemm::quant_hybrid_asymmetric</a></div><div class="ttdeci">bool quant_hybrid_asymmetric(const Requantize32 &amp;qp)</div><div class="ttdef"><b>Definition:</b> <a href="utils_8hpp_source.xhtml#l00107">utils.hpp:107</a></div></div>
<div class="ttc" id="structarm__gemm_1_1_indirect_input_arg_xhtml_aac8e1e4c014af8dc80fa6c97a13463fa"><div class="ttname"><a href="structarm__gemm_1_1_indirect_input_arg.xhtml#aac8e1e4c014af8dc80fa6c97a13463fa">arm_gemm::IndirectInputArg::IndirectInputArg</a></div><div class="ttdeci">IndirectInputArg()</div><div class="ttdef"><b>Definition:</b> <a href="utils_8hpp_source.xhtml#l00137">utils.hpp:137</a></div></div>
<div class="ttc" id="namespacearm__gemm_xhtml_a764ff3bbe137fc7792aee26f022aa29d"><div class="ttname"><a href="namespacearm__gemm.xhtml#a764ff3bbe137fc7792aee26f022aa29d">arm_gemm::VLType</a></div><div class="ttdeci">VLType</div><div class="ttdef"><b>Definition:</b> <a href="utils_8hpp_source.xhtml#l00055">utils.hpp:55</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_aebb8dcc11953d78e620bbef0b9e2183.xhtml">core</a></li><li class="navelem"><a class="el" href="dir_d91e1966cc57df4f49d1e07be7697713.xhtml">NEON</a></li><li class="navelem"><a class="el" href="dir_1ce938f580a6f304b99685e2c1dd19db.xhtml">kernels</a></li><li class="navelem"><a class="el" href="dir_9847dd9cb7a28e46201717fa7336cf62.xhtml">arm_gemm</a></li><li class="navelem"><a class="el" href="utils_8hpp.xhtml">utils.hpp</a></li>
    <li class="footer">Generated on Thu Feb 25 2021 17:17:36 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
