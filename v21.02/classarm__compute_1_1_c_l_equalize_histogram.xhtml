<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: CLEqualizeHistogram Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">21.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarm__compute_1_1_c_l_equalize_histogram.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">CLEqualizeHistogram Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Basic function to execute histogram equalization.  
 <a href="classarm__compute_1_1_c_l_equalize_histogram.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_c_l_equalize_histogram_8h_source.xhtml">CLEqualizeHistogram.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for CLEqualizeHistogram:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classarm__compute_1_1_c_l_equalize_histogram__coll__graph.svg" width="160" height="112"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a1edc340b1cd348c89f088a0698a8b129"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_equalize_histogram.xhtml#a1edc340b1cd348c89f088a0698a8b129">CLEqualizeHistogram</a> ()</td></tr>
<tr class="memdesc:a1edc340b1cd348c89f088a0698a8b129"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default Constructor.  <a href="#a1edc340b1cd348c89f088a0698a8b129">More...</a><br /></td></tr>
<tr class="separator:a1edc340b1cd348c89f088a0698a8b129"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa907fb3fca1bce1ea8564ee9d7f1c55a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_equalize_histogram.xhtml#aa907fb3fca1bce1ea8564ee9d7f1c55a">CLEqualizeHistogram</a> (const <a class="el" href="classarm__compute_1_1_c_l_equalize_histogram.xhtml">CLEqualizeHistogram</a> &amp;)=delete</td></tr>
<tr class="memdesc:aa907fb3fca1bce1ea8564ee9d7f1c55a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied.  <a href="#aa907fb3fca1bce1ea8564ee9d7f1c55a">More...</a><br /></td></tr>
<tr class="separator:aa907fb3fca1bce1ea8564ee9d7f1c55a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee7d5db223ebae07af5259507958fae8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_c_l_equalize_histogram.xhtml">CLEqualizeHistogram</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_equalize_histogram.xhtml#aee7d5db223ebae07af5259507958fae8">operator=</a> (const <a class="el" href="classarm__compute_1_1_c_l_equalize_histogram.xhtml">CLEqualizeHistogram</a> &amp;)=delete</td></tr>
<tr class="memdesc:aee7d5db223ebae07af5259507958fae8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied.  <a href="#aee7d5db223ebae07af5259507958fae8">More...</a><br /></td></tr>
<tr class="separator:aee7d5db223ebae07af5259507958fae8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a62aa757d286cd14295addac793f28dcf"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_equalize_histogram.xhtml#a62aa757d286cd14295addac793f28dcf">~CLEqualizeHistogram</a> ()</td></tr>
<tr class="memdesc:a62aa757d286cd14295addac793f28dcf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default destructor.  <a href="#a62aa757d286cd14295addac793f28dcf">More...</a><br /></td></tr>
<tr class="separator:a62aa757d286cd14295addac793f28dcf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a78c50e58e4c8be6de11ac6e78ca02eff"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_equalize_histogram.xhtml#a78c50e58e4c8be6de11ac6e78ca02eff">configure</a> (const <a class="el" href="namespacearm__compute.xhtml#aa80145f30ddae0c2ccbcaa910e3e71dd">ICLImage</a> *input, <a class="el" href="namespacearm__compute.xhtml#aa80145f30ddae0c2ccbcaa910e3e71dd">ICLImage</a> *output)</td></tr>
<tr class="memdesc:a78c50e58e4c8be6de11ac6e78ca02eff"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialise the kernel's inputs.  <a href="#a78c50e58e4c8be6de11ac6e78ca02eff">More...</a><br /></td></tr>
<tr class="separator:a78c50e58e4c8be6de11ac6e78ca02eff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7fa3a257f66d88e0e3f2cddfdeaec54e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_equalize_histogram.xhtml#a7fa3a257f66d88e0e3f2cddfdeaec54e">configure</a> (const <a class="el" href="classarm__compute_1_1_c_l_compile_context.xhtml">CLCompileContext</a> &amp;compile_context, const <a class="el" href="namespacearm__compute.xhtml#aa80145f30ddae0c2ccbcaa910e3e71dd">ICLImage</a> *input, <a class="el" href="namespacearm__compute.xhtml#aa80145f30ddae0c2ccbcaa910e3e71dd">ICLImage</a> *output)</td></tr>
<tr class="memdesc:a7fa3a257f66d88e0e3f2cddfdeaec54e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialise the kernel's inputs.  <a href="#a7fa3a257f66d88e0e3f2cddfdeaec54e">More...</a><br /></td></tr>
<tr class="separator:a7fa3a257f66d88e0e3f2cddfdeaec54e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad1717410afd0be936c6213a63c8005fb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_equalize_histogram.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a> () override</td></tr>
<tr class="memdesc:ad1717410afd0be936c6213a63c8005fb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Run the kernels contained in the function.  <a href="#ad1717410afd0be936c6213a63c8005fb">More...</a><br /></td></tr>
<tr class="separator:ad1717410afd0be936c6213a63c8005fb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1_i_function"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1_i_function')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1_i_function.xhtml">IFunction</a></td></tr>
<tr class="memitem:ab921ecc3f3f6ae2b4bd61f3e1998d8c4 inherit pub_methods_classarm__compute_1_1_i_function"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_function.xhtml#ab921ecc3f3f6ae2b4bd61f3e1998d8c4">~IFunction</a> ()=default</td></tr>
<tr class="memdesc:ab921ecc3f3f6ae2b4bd61f3e1998d8c4 inherit pub_methods_classarm__compute_1_1_i_function"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="classarm__compute_1_1_i_function.xhtml#ab921ecc3f3f6ae2b4bd61f3e1998d8c4">More...</a><br /></td></tr>
<tr class="separator:ab921ecc3f3f6ae2b4bd61f3e1998d8c4 inherit pub_methods_classarm__compute_1_1_i_function"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a820f7291c24155a2980512fae45aac26 inherit pub_methods_classarm__compute_1_1_i_function"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_function.xhtml#a820f7291c24155a2980512fae45aac26">prepare</a> ()</td></tr>
<tr class="memdesc:a820f7291c24155a2980512fae45aac26 inherit pub_methods_classarm__compute_1_1_i_function"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prepare the function for executing.  <a href="classarm__compute_1_1_i_function.xhtml#a820f7291c24155a2980512fae45aac26">More...</a><br /></td></tr>
<tr class="separator:a820f7291c24155a2980512fae45aac26 inherit pub_methods_classarm__compute_1_1_i_function"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Basic function to execute histogram equalization. </p>
<p>This function calls the following CL kernels:</p>
<ol type="1">
<li><a class="el" href="classarm__compute_1_1_c_l_histogram_kernel.xhtml">CLHistogramKernel</a></li>
<li><a class="el" href="classarm__compute_1_1_c_l_table_lookup_kernel.xhtml">CLTableLookupKernel</a></li>
</ol>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.xhtml#_deprecated000019">Deprecated:</a></b></dt><dd>This function is deprecated and is intended to be removed in 21.05 release</dd></dl>

<p class="definition">Definition at line <a class="el" href="_c_l_equalize_histogram_8h_source.xhtml#l00051">51</a> of file <a class="el" href="_c_l_equalize_histogram_8h_source.xhtml">CLEqualizeHistogram.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a1edc340b1cd348c89f088a0698a8b129"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1edc340b1cd348c89f088a0698a8b129">&#9670;&nbsp;</a></span>CLEqualizeHistogram() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_equalize_histogram.xhtml">CLEqualizeHistogram</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Default Constructor. </p>

<p class="definition">Definition at line <a class="el" href="_c_l_equalize_histogram_8cpp_source.xhtml#l00087">87</a> of file <a class="el" href="_c_l_equalize_histogram_8cpp_source.xhtml">CLEqualizeHistogram.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a6669348b484e3008dca2bfa8e85e40b5">arm_compute::U8</a>, and <a class="el" href="classarm__compute_1_1_c_l_equalize_histogram.xhtml#a62aa757d286cd14295addac793f28dcf">CLEqualizeHistogram::~CLEqualizeHistogram()</a>.</p>
<div class="fragment"><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    : _histogram_kernel(std::make_unique&lt;CLHistogramKernel&gt;()),</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;      _border_histogram_kernel(std::make_unique&lt;CLHistogramBorderKernel&gt;()),</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;      _map_histogram_kernel(std::make_unique&lt;CLTableLookupKernel&gt;()),</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;      _hist(nr_bins, 0, max_range),</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;      _cum_dist(nr_bins, 0, max_range),</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;      _cd_lut(nr_bins, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a6669348b484e3008dca2bfa8e85e40b5">DataType::U8</a>)</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;{</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;}</div><div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58a6669348b484e3008dca2bfa8e85e40b5"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a6669348b484e3008dca2bfa8e85e40b5">arm_compute::Format::U8</a></div><div class="ttdoc">1 channel, 1 U8 per channel </div></div>
</div><!-- fragment -->
</div>
</div>
<a id="aa907fb3fca1bce1ea8564ee9d7f1c55a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa907fb3fca1bce1ea8564ee9d7f1c55a">&#9670;&nbsp;</a></span>CLEqualizeHistogram() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_equalize_histogram.xhtml">CLEqualizeHistogram</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_c_l_equalize_histogram.xhtml">CLEqualizeHistogram</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copied. </p>

</div>
</div>
<a id="a62aa757d286cd14295addac793f28dcf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a62aa757d286cd14295addac793f28dcf">&#9670;&nbsp;</a></span>~CLEqualizeHistogram()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classarm__compute_1_1_c_l_equalize_histogram.xhtml">CLEqualizeHistogram</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default destructor. </p>

<p class="reference">Referenced by <a class="el" href="_c_l_equalize_histogram_8cpp_source.xhtml#l00087">CLEqualizeHistogram::CLEqualizeHistogram()</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a78c50e58e4c8be6de11ac6e78ca02eff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a78c50e58e4c8be6de11ac6e78ca02eff">&#9670;&nbsp;</a></span>configure() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void configure </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespacearm__compute.xhtml#aa80145f30ddae0c2ccbcaa910e3e71dd">ICLImage</a> *&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute.xhtml#aa80145f30ddae0c2ccbcaa910e3e71dd">ICLImage</a> *&#160;</td>
          <td class="paramname"><em>output</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialise the kernel's inputs. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">input</td><td>Input image. Data types supported: U8. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">output</td><td>Output of same data type with equalized brightness and contrast. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_c_l_equalize_histogram_8cpp_source.xhtml#l00099">99</a> of file <a class="el" href="_c_l_equalize_histogram_8cpp_source.xhtml">CLEqualizeHistogram.cpp</a>.</p>

<p class="reference">References <a class="el" href="_c_l_kernel_library_8cpp_source.xhtml#l01119">CLKernelLibrary::get()</a>.</p>
<div class="fragment"><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;{</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_equalize_histogram.xhtml#a78c50e58e4c8be6de11ac6e78ca02eff">configure</a>(<a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#acba005f5ce2c62cbf3f94d074d9007aa">CLKernelLibrary::get</a>().get_compile_context(), input, output);</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1_c_l_equalize_histogram_xhtml_a78c50e58e4c8be6de11ac6e78ca02eff"><div class="ttname"><a href="classarm__compute_1_1_c_l_equalize_histogram.xhtml#a78c50e58e4c8be6de11ac6e78ca02eff">arm_compute::CLEqualizeHistogram::configure</a></div><div class="ttdeci">void configure(const ICLImage *input, ICLImage *output)</div><div class="ttdoc">Initialise the kernel&amp;#39;s inputs. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_equalize_histogram_8cpp_source.xhtml#l00099">CLEqualizeHistogram.cpp:99</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_kernel_library_xhtml_acba005f5ce2c62cbf3f94d074d9007aa"><div class="ttname"><a href="classarm__compute_1_1_c_l_kernel_library.xhtml#acba005f5ce2c62cbf3f94d074d9007aa">arm_compute::CLKernelLibrary::get</a></div><div class="ttdeci">static CLKernelLibrary &amp; get()</div><div class="ttdoc">Access the KernelLibrary singleton. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_kernel_library_8cpp_source.xhtml#l01119">CLKernelLibrary.cpp:1119</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a7fa3a257f66d88e0e3f2cddfdeaec54e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7fa3a257f66d88e0e3f2cddfdeaec54e">&#9670;&nbsp;</a></span>configure() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void configure </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_c_l_compile_context.xhtml">CLCompileContext</a> &amp;&#160;</td>
          <td class="paramname"><em>compile_context</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearm__compute.xhtml#aa80145f30ddae0c2ccbcaa910e3e71dd">ICLImage</a> *&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute.xhtml#aa80145f30ddae0c2ccbcaa910e3e71dd">ICLImage</a> *&#160;</td>
          <td class="paramname"><em>output</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialise the kernel's inputs. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">compile_context</td><td>The compile context to be used. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">input</td><td>Input image. Data types supported: U8. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">output</td><td>Output of same data type with equalized brightness and contrast. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_c_l_equalize_histogram_8cpp_source.xhtml#l00104">104</a> of file <a class="el" href="_c_l_equalize_histogram_8cpp_source.xhtml">CLEqualizeHistogram.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;{</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    _histogram_kernel-&gt;configure(compile_context, input, &amp;_hist);</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    _border_histogram_kernel-&gt;configure(compile_context, input, &amp;_hist);</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    _map_histogram_kernel-&gt;configure(compile_context, input, &amp;_cd_lut, output);</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="aee7d5db223ebae07af5259507958fae8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aee7d5db223ebae07af5259507958fae8">&#9670;&nbsp;</a></span>operator=()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_equalize_histogram.xhtml">CLEqualizeHistogram</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_c_l_equalize_histogram.xhtml">CLEqualizeHistogram</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copied. </p>

</div>
</div>
<a id="ad1717410afd0be936c6213a63c8005fb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad1717410afd0be936c6213a63c8005fb">&#9670;&nbsp;</a></span>run()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void run </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Run the kernels contained in the function. </p>
<p>For Neon kernels:</p><ul>
<li>Multi-threading is used for the kernels which are parallelisable.</li>
<li>By default std::thread::hardware_concurrency() threads are used.</li>
</ul>
<dl class="section note"><dt>Note</dt><dd><a class="el" href="classarm__compute_1_1_c_p_p_scheduler.xhtml#ae64eebaa07f4d2da6cc2ba538c3cb095">CPPScheduler::set_num_threads()</a> can be used to manually set the number of threads</dd></dl>
<p>For OpenCL kernels:</p><ul>
<li>All the kernels are enqueued on the queue associated with <a class="el" href="classarm__compute_1_1_c_l_scheduler.xhtml" title="Provides global access to a CL context and command queue. ">CLScheduler</a>.</li>
<li>The queue is then flushed.</li>
</ul>
<dl class="section note"><dt>Note</dt><dd>The function will not block until the kernels are executed. It is the user's responsibility to wait. </dd>
<dd>
Will call <a class="el" href="classarm__compute_1_1_i_function.xhtml#a820f7291c24155a2980512fae45aac26" title="Prepare the function for executing. ">prepare()</a> on first run if hasn't been done </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_function.xhtml#a18954417d3124a8095783ea13dc6d00b">IFunction</a>.</p>

<p class="definition">Definition at line <a class="el" href="_c_l_equalize_histogram_8cpp_source.xhtml#l00111">111</a> of file <a class="el" href="_c_l_equalize_histogram_8cpp_source.xhtml">CLEqualizeHistogram.cpp</a>.</p>

<p class="reference">References <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00183">CLScheduler::enqueue()</a>, and <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00104">CLScheduler::get()</a>.</p>
<div class="fragment"><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;{</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <span class="comment">// Calculate histogram of input.</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#ae1a643e517f50bf0392fb6516dd7cf67">enqueue</a>(*_histogram_kernel, <span class="keyword">false</span>);</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <span class="comment">// Calculate remaining pixels when image is not multiple of the elements of histogram kernel</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#ae1a643e517f50bf0392fb6516dd7cf67">enqueue</a>(*_border_histogram_kernel, <span class="keyword">false</span>);</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <span class="comment">// Calculate cumulative distribution of histogram and create LUT.</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    calculate_cum_dist_and_lut(_hist, _cum_dist, _cd_lut);</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <span class="comment">// Map input to output using created LUT.</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#ae1a643e517f50bf0392fb6516dd7cf67">enqueue</a>(*_map_histogram_kernel);</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1_c_l_scheduler_xhtml_a9b58d0eb9a2af8e6d7908695e1557d6c"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">arm_compute::CLScheduler::get</a></div><div class="ttdeci">static CLScheduler &amp; get()</div><div class="ttdoc">Access the scheduler singleton. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00104">CLScheduler.cpp:104</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_scheduler_xhtml_ae1a643e517f50bf0392fb6516dd7cf67"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#ae1a643e517f50bf0392fb6516dd7cf67">arm_compute::CLScheduler::enqueue</a></div><div class="ttdeci">void enqueue(ICLKernel &amp;kernel, bool flush=true)</div><div class="ttdoc">Schedule the execution of the passed kernel if possible. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00183">CLScheduler.cpp:183</a></div></div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>arm_compute/runtime/CL/functions/<a class="el" href="_c_l_equalize_histogram_8h_source.xhtml">CLEqualizeHistogram.h</a></li>
<li>src/runtime/CL/functions/<a class="el" href="_c_l_equalize_histogram_8cpp_source.xhtml">CLEqualizeHistogram.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_c_l_equalize_histogram.xhtml">CLEqualizeHistogram</a></li>
    <li class="footer">Generated on Thu Feb 25 2021 17:17:45 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
