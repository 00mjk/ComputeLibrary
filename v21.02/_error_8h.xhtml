<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: arm_compute/core/Error.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">21.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_error_8h.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#namespaces">Namespaces</a> &#124;
<a href="#define-members">Macros</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">Error.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &lt;array&gt;</code><br />
<code>#include &lt;string&gt;</code><br />
</div>
<p><a href="_error_8h_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_status.xhtml">Status</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classarm__compute_1_1_status.xhtml" title="Status class. ">Status</a> class.  <a href="classarm__compute_1_1_status.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespacearm__compute"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></td></tr>
<tr class="memdesc:namespacearm__compute"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copyright (c) 2017-2021 Arm Limited. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:a6dc630a6ae9cc063b3924bcea8dee9d6"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(...)&#160;&#160;&#160;::<a class="el" href="namespacearm__compute.xhtml#a053a24bb37402fa4b4d8d5963976ba17">arm_compute::ignore_unused</a>(__VA_ARGS__)</td></tr>
<tr class="memdesc:a6dc630a6ae9cc063b3924bcea8dee9d6"><td class="mdescLeft">&#160;</td><td class="mdescRight">To avoid unused variables warnings.  <a href="#a6dc630a6ae9cc063b3924bcea8dee9d6">More...</a><br /></td></tr>
<tr class="separator:a6dc630a6ae9cc063b3924bcea8dee9d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af1b8ff8eb557a2ad11272f1505f45d34"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_error_8h.xhtml#af1b8ff8eb557a2ad11272f1505f45d34">ARM_COMPUTE_CREATE_ERROR</a>(error_code,  msg)&#160;&#160;&#160;<a class="el" href="namespacearm__compute.xhtml#af9b3e9f3ef6409e72c71aeacebf58f3b">arm_compute::create_error_msg</a>(error_code, __func__, __FILE__, __LINE__, msg)</td></tr>
<tr class="memdesc:af1b8ff8eb557a2ad11272f1505f45d34"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an error with a given message.  <a href="#af1b8ff8eb557a2ad11272f1505f45d34">More...</a><br /></td></tr>
<tr class="separator:af1b8ff8eb557a2ad11272f1505f45d34"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1f6cdb912f3c70a81f27c62ff3f1c569"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_error_8h.xhtml#a1f6cdb912f3c70a81f27c62ff3f1c569">ARM_COMPUTE_CREATE_ERROR_LOC</a>(error_code,  <a class="el" href="_cpu_floor_kernel_8cpp.xhtml#a89746721cac623cd0ffa90c03fc7a657">func</a>,  file,  line,  msg)&#160;&#160;&#160;<a class="el" href="namespacearm__compute.xhtml#af9b3e9f3ef6409e72c71aeacebf58f3b">arm_compute::create_error_msg</a>(error_code, <a class="el" href="_cpu_floor_kernel_8cpp.xhtml#a89746721cac623cd0ffa90c03fc7a657">func</a>, file, line, msg)</td></tr>
<tr class="memdesc:a1f6cdb912f3c70a81f27c62ff3f1c569"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an error on location with a given message.  <a href="#a1f6cdb912f3c70a81f27c62ff3f1c569">More...</a><br /></td></tr>
<tr class="separator:a1f6cdb912f3c70a81f27c62ff3f1c569"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abf8348c7af1cedc02945cc7bffe511e4"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_error_8h.xhtml#abf8348c7af1cedc02945cc7bffe511e4">ARM_COMPUTE_CREATE_ERROR_LOC_VAR</a>(error_code,  <a class="el" href="_cpu_floor_kernel_8cpp.xhtml#a89746721cac623cd0ffa90c03fc7a657">func</a>,  file,  line,  msg, ...)</td></tr>
<tr class="memdesc:abf8348c7af1cedc02945cc7bffe511e4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an error on location with a given message.  <a href="#abf8348c7af1cedc02945cc7bffe511e4">More...</a><br /></td></tr>
<tr class="separator:abf8348c7af1cedc02945cc7bffe511e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9561091f3566e78ad3aa39259bc4126a"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_error_8h.xhtml#a9561091f3566e78ad3aa39259bc4126a">ARM_COMPUTE_RETURN_ERROR_MSG</a>(...)</td></tr>
<tr class="memdesc:a9561091f3566e78ad3aa39259bc4126a"><td class="mdescLeft">&#160;</td><td class="mdescRight">An error is returned with the given description.  <a href="#a9561091f3566e78ad3aa39259bc4126a">More...</a><br /></td></tr>
<tr class="separator:a9561091f3566e78ad3aa39259bc4126a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8a1e1c105f0bdaf37db408c7cfcb77a4"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(status)</td></tr>
<tr class="memdesc:a8a1e1c105f0bdaf37db408c7cfcb77a4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if a status contains an error and returns it.  <a href="#a8a1e1c105f0bdaf37db408c7cfcb77a4">More...</a><br /></td></tr>
<tr class="separator:a8a1e1c105f0bdaf37db408c7cfcb77a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a51e206ee52bcfb358919ee478d9fdc47"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_error_8h.xhtml#a51e206ee52bcfb358919ee478d9fdc47">ARM_COMPUTE_THROW_ON_ERROR</a>(error)&#160;&#160;&#160;error.throw_if_error();</td></tr>
<tr class="memdesc:a51e206ee52bcfb358919ee478d9fdc47"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if an error value is valid if not throws an exception with the error.  <a href="#a51e206ee52bcfb358919ee478d9fdc47">More...</a><br /></td></tr>
<tr class="separator:a51e206ee52bcfb358919ee478d9fdc47"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab7f9a52dc65a6a76f1576d99828fa1ea"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_error_8h.xhtml#ab7f9a52dc65a6a76f1576d99828fa1ea">ARM_COMPUTE_RETURN_ERROR_ON_MSG_VAR</a>(cond,  msg, ...)</td></tr>
<tr class="memdesc:ab7f9a52dc65a6a76f1576d99828fa1ea"><td class="mdescLeft">&#160;</td><td class="mdescRight">If the condition is true, an error is returned.  <a href="#ab7f9a52dc65a6a76f1576d99828fa1ea">More...</a><br /></td></tr>
<tr class="separator:ab7f9a52dc65a6a76f1576d99828fa1ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1c69762a42ab8add645d0a949b6f4b1f"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(cond,  msg)</td></tr>
<tr class="memdesc:a1c69762a42ab8add645d0a949b6f4b1f"><td class="mdescLeft">&#160;</td><td class="mdescRight">If the condition is true, an error is returned.  <a href="#a1c69762a42ab8add645d0a949b6f4b1f">More...</a><br /></td></tr>
<tr class="separator:a1c69762a42ab8add645d0a949b6f4b1f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e3e8db314706c6f3d822bafa3d8d761"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_error_8h.xhtml#a5e3e8db314706c6f3d822bafa3d8d761">ARM_COMPUTE_RETURN_ERROR_ON_LOC_MSG_VAR</a>(cond,  <a class="el" href="_cpu_floor_kernel_8cpp.xhtml#a89746721cac623cd0ffa90c03fc7a657">func</a>,  file,  line,  msg, ...)</td></tr>
<tr class="memdesc:a5e3e8db314706c6f3d822bafa3d8d761"><td class="mdescLeft">&#160;</td><td class="mdescRight">If the condition is true, an error is thrown.  <a href="#a5e3e8db314706c6f3d822bafa3d8d761">More...</a><br /></td></tr>
<tr class="separator:a5e3e8db314706c6f3d822bafa3d8d761"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3cbe27c31092df3dc1fa26c75f47e047"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_error_8h.xhtml#a3cbe27c31092df3dc1fa26c75f47e047">ARM_COMPUTE_RETURN_ERROR_ON_LOC_MSG</a>(cond,  <a class="el" href="_cpu_floor_kernel_8cpp.xhtml#a89746721cac623cd0ffa90c03fc7a657">func</a>,  file,  line,  msg)</td></tr>
<tr class="memdesc:a3cbe27c31092df3dc1fa26c75f47e047"><td class="mdescLeft">&#160;</td><td class="mdescRight">If the condition is true, an error is thrown.  <a href="#a3cbe27c31092df3dc1fa26c75f47e047">More...</a><br /></td></tr>
<tr class="separator:a3cbe27c31092df3dc1fa26c75f47e047"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a206d6e247e0957ac3dee45d27756fc25"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(cond)&#160;&#160;&#160;<a class="el" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(cond, #cond)</td></tr>
<tr class="memdesc:a206d6e247e0957ac3dee45d27756fc25"><td class="mdescLeft">&#160;</td><td class="mdescRight">If the condition is true, an error is returned.  <a href="#a206d6e247e0957ac3dee45d27756fc25">More...</a><br /></td></tr>
<tr class="separator:a206d6e247e0957ac3dee45d27756fc25"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab9171b209dda7cc9bb560486674c9f6"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_error_8h.xhtml#aab9171b209dda7cc9bb560486674c9f6">ARM_COMPUTE_RETURN_ERROR_ON_LOC</a>(cond,  <a class="el" href="_cpu_floor_kernel_8cpp.xhtml#a89746721cac623cd0ffa90c03fc7a657">func</a>,  file,  line)&#160;&#160;&#160;<a class="el" href="_error_8h.xhtml#a3cbe27c31092df3dc1fa26c75f47e047">ARM_COMPUTE_RETURN_ERROR_ON_LOC_MSG</a>(cond, <a class="el" href="_cpu_floor_kernel_8cpp.xhtml#a89746721cac623cd0ffa90c03fc7a657">func</a>, file, line, #cond)</td></tr>
<tr class="memdesc:aab9171b209dda7cc9bb560486674c9f6"><td class="mdescLeft">&#160;</td><td class="mdescRight">If the condition is true, an error is returned.  <a href="#aab9171b209dda7cc9bb560486674c9f6">More...</a><br /></td></tr>
<tr class="separator:aab9171b209dda7cc9bb560486674c9f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adfd4354a6e0f46eddd353913a1470219"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_error_8h.xhtml#adfd4354a6e0f46eddd353913a1470219">ARM_COMPUTE_THROW_ERROR</a>(<a class="el" href="_cpu_floor_kernel_8cpp.xhtml#a89746721cac623cd0ffa90c03fc7a657">func</a>,  file,  line,  msg)</td></tr>
<tr class="memdesc:adfd4354a6e0f46eddd353913a1470219"><td class="mdescLeft">&#160;</td><td class="mdescRight">Print the given message then throw an std::runtime_error.  <a href="#adfd4354a6e0f46eddd353913a1470219">More...</a><br /></td></tr>
<tr class="separator:adfd4354a6e0f46eddd353913a1470219"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a86513cce33cfea9d3dd6eac3366b8253"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_error_8h.xhtml#a86513cce33cfea9d3dd6eac3366b8253">ARM_COMPUTE_THROW_ERROR_VAR</a>(<a class="el" href="_cpu_floor_kernel_8cpp.xhtml#a89746721cac623cd0ffa90c03fc7a657">func</a>,  file,  line,  msg, ...)</td></tr>
<tr class="memdesc:a86513cce33cfea9d3dd6eac3366b8253"><td class="mdescLeft">&#160;</td><td class="mdescRight">Print the given message then throw an std::runtime_error.  <a href="#a86513cce33cfea9d3dd6eac3366b8253">More...</a><br /></td></tr>
<tr class="separator:a86513cce33cfea9d3dd6eac3366b8253"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abd040a16dc0dbc75733e07aff93048a8"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_error_8h.xhtml#abd040a16dc0dbc75733e07aff93048a8">ARM_COMPUTE_ERROR_VAR</a>(msg, ...)&#160;&#160;&#160;<a class="el" href="_error_8h.xhtml#a86513cce33cfea9d3dd6eac3366b8253">ARM_COMPUTE_THROW_ERROR_VAR</a>(__func__, __FILE__, __LINE__, msg, __VA_ARGS__)</td></tr>
<tr class="memdesc:abd040a16dc0dbc75733e07aff93048a8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Print the given message then throw an std::runtime_error.  <a href="#abd040a16dc0dbc75733e07aff93048a8">More...</a><br /></td></tr>
<tr class="separator:abd040a16dc0dbc75733e07aff93048a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7cf8d8b669b8f7b05680230be30d60f4"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(msg)&#160;&#160;&#160;<a class="el" href="_error_8h.xhtml#adfd4354a6e0f46eddd353913a1470219">ARM_COMPUTE_THROW_ERROR</a>(__func__, __FILE__, __LINE__, msg)</td></tr>
<tr class="memdesc:a7cf8d8b669b8f7b05680230be30d60f4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Print the given message then throw an std::runtime_error.  <a href="#a7cf8d8b669b8f7b05680230be30d60f4">More...</a><br /></td></tr>
<tr class="separator:a7cf8d8b669b8f7b05680230be30d60f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6b97423ad86a4a64ec1838d6135282cb"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_error_8h.xhtml#a6b97423ad86a4a64ec1838d6135282cb">ARM_COMPUTE_ERROR_LOC_VAR</a>(<a class="el" href="_cpu_floor_kernel_8cpp.xhtml#a89746721cac623cd0ffa90c03fc7a657">func</a>,  file,  line,  msg, ...)&#160;&#160;&#160;<a class="el" href="_error_8h.xhtml#a86513cce33cfea9d3dd6eac3366b8253">ARM_COMPUTE_THROW_ERROR_VAR</a>(<a class="el" href="_cpu_floor_kernel_8cpp.xhtml#a89746721cac623cd0ffa90c03fc7a657">func</a>, file, line, msg, __VA_ARGS__)</td></tr>
<tr class="memdesc:a6b97423ad86a4a64ec1838d6135282cb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Print the given message then throw an std::runtime_error.  <a href="#a6b97423ad86a4a64ec1838d6135282cb">More...</a><br /></td></tr>
<tr class="separator:a6b97423ad86a4a64ec1838d6135282cb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a94b64f1b45be794e8304c238e90be6b0"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_error_8h.xhtml#a94b64f1b45be794e8304c238e90be6b0">ARM_COMPUTE_ERROR_LOC</a>(<a class="el" href="_cpu_floor_kernel_8cpp.xhtml#a89746721cac623cd0ffa90c03fc7a657">func</a>,  file,  line,  msg)&#160;&#160;&#160;<a class="el" href="_error_8h.xhtml#adfd4354a6e0f46eddd353913a1470219">ARM_COMPUTE_THROW_ERROR</a>(<a class="el" href="_cpu_floor_kernel_8cpp.xhtml#a89746721cac623cd0ffa90c03fc7a657">func</a>, file, line, msg)</td></tr>
<tr class="memdesc:a94b64f1b45be794e8304c238e90be6b0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Print the given message then throw an std::runtime_error.  <a href="#a94b64f1b45be794e8304c238e90be6b0">More...</a><br /></td></tr>
<tr class="separator:a94b64f1b45be794e8304c238e90be6b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a292b758f9eba8b487d71eae4b37326fc"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_error_8h.xhtml#a292b758f9eba8b487d71eae4b37326fc">ARM_COMPUTE_EXIT_ON_MSG</a>(cond,  msg)</td></tr>
<tr class="memdesc:a292b758f9eba8b487d71eae4b37326fc"><td class="mdescLeft">&#160;</td><td class="mdescRight">If the condition is true, the given message is printed and program exits.  <a href="#a292b758f9eba8b487d71eae4b37326fc">More...</a><br /></td></tr>
<tr class="separator:a292b758f9eba8b487d71eae4b37326fc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac75ba282eb0cacd31fd4c6e6a47dbbc8"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_error_8h.xhtml#ac75ba282eb0cacd31fd4c6e6a47dbbc8">ARM_COMPUTE_EXIT_ON_MSG_VAR</a>(cond,  msg, ...)</td></tr>
<tr class="memdesc:ac75ba282eb0cacd31fd4c6e6a47dbbc8"><td class="mdescLeft">&#160;</td><td class="mdescRight">If the condition is true, the given message is printed and program exits.  <a href="#ac75ba282eb0cacd31fd4c6e6a47dbbc8">More...</a><br /></td></tr>
<tr class="separator:ac75ba282eb0cacd31fd4c6e6a47dbbc8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a938dcd406ce611ef5345ad2531cdb948"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a>(status)</td></tr>
<tr class="separator:a938dcd406ce611ef5345ad2531cdb948"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b0eb3235749a2909dc5a101afe59a1b"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a>(cond,  msg)</td></tr>
<tr class="separator:a0b0eb3235749a2909dc5a101afe59a1b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acaa348bf0c7eb9493c72092b7293d45f"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_error_8h.xhtml#acaa348bf0c7eb9493c72092b7293d45f">ARM_COMPUTE_ERROR_ON_MSG_VAR</a>(cond,  msg, ...)</td></tr>
<tr class="separator:acaa348bf0c7eb9493c72092b7293d45f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1b62e396a1789909dadda61ea4cda96f"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_error_8h.xhtml#a1b62e396a1789909dadda61ea4cda96f">ARM_COMPUTE_ERROR_ON_LOC_MSG</a>(cond,  <a class="el" href="_cpu_floor_kernel_8cpp.xhtml#a89746721cac623cd0ffa90c03fc7a657">func</a>,  file,  line, ...)</td></tr>
<tr class="separator:a1b62e396a1789909dadda61ea4cda96f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a50048c593c53405cca5b0d69dfe25554"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_error_8h.xhtml#a50048c593c53405cca5b0d69dfe25554">ARM_COMPUTE_CONST_ON_ERROR</a>(cond,  val,  msg)&#160;&#160;&#160;val</td></tr>
<tr class="separator:a50048c593c53405cca5b0d69dfe25554"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a54a6080c9f4df1f908e57a9bbb46f5da"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(cond)&#160;&#160;&#160;<a class="el" href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a>(cond, #cond)</td></tr>
<tr class="memdesc:a54a6080c9f4df1f908e57a9bbb46f5da"><td class="mdescLeft">&#160;</td><td class="mdescRight">If the condition is true then an error message is printed and an exception thrown.  <a href="#a54a6080c9f4df1f908e57a9bbb46f5da">More...</a><br /></td></tr>
<tr class="separator:a54a6080c9f4df1f908e57a9bbb46f5da"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac90c3bce005225cbaa4a43740917bb58"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_error_8h.xhtml#ac90c3bce005225cbaa4a43740917bb58">ARM_COMPUTE_ERROR_ON_LOC</a>(cond,  <a class="el" href="_cpu_floor_kernel_8cpp.xhtml#a89746721cac623cd0ffa90c03fc7a657">func</a>,  file,  line)&#160;&#160;&#160;<a class="el" href="_error_8h.xhtml#a1b62e396a1789909dadda61ea4cda96f">ARM_COMPUTE_ERROR_ON_LOC_MSG</a>(cond, <a class="el" href="_cpu_floor_kernel_8cpp.xhtml#a89746721cac623cd0ffa90c03fc7a657">func</a>, file, line, &quot;%s&quot;, #cond)</td></tr>
<tr class="memdesc:ac90c3bce005225cbaa4a43740917bb58"><td class="mdescLeft">&#160;</td><td class="mdescRight">If the condition is true then an error message is printed and an exception thrown.  <a href="#ac90c3bce005225cbaa4a43740917bb58">More...</a><br /></td></tr>
<tr class="separator:ac90c3bce005225cbaa4a43740917bb58"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad5518fdae84a33ce6fbed540c6e89479"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_error_8h.xhtml#ad5518fdae84a33ce6fbed540c6e89479">ARM_COMPUTE_THROW</a>(ex)&#160;&#160;&#160;throw(ex)</td></tr>
<tr class="separator:ad5518fdae84a33ce6fbed540c6e89479"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem:a59e56af19e754a6aa26a612ebf91d05f"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml#a59e56af19e754a6aa26a612ebf91d05f">ErrorCode</a> { <a class="el" href="namespacearm__compute.xhtml#a59e56af19e754a6aa26a612ebf91d05fae0aa021e21dddbd6d8cecec71e9cf564">OK</a>, 
<a class="el" href="namespacearm__compute.xhtml#a59e56af19e754a6aa26a612ebf91d05fa62be47fdd89da032cf78dfce82239579">RUNTIME_ERROR</a>, 
<a class="el" href="namespacearm__compute.xhtml#a59e56af19e754a6aa26a612ebf91d05fa0ffe8be9137815d1266845a195c053c7">UNSUPPORTED_EXTENSION_USE</a>
 }<tr class="memdesc:a59e56af19e754a6aa26a612ebf91d05f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Available error codes.  <a href="namespacearm__compute.xhtml#a59e56af19e754a6aa26a612ebf91d05f">More...</a><br /></td></tr>
</td></tr>
<tr class="separator:a59e56af19e754a6aa26a612ebf91d05f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a053a24bb37402fa4b4d8d5963976ba17"><td class="memTemplParams" colspan="2">template&lt;typename... T&gt; </td></tr>
<tr class="memitem:a053a24bb37402fa4b4d8d5963976ba17"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml#a053a24bb37402fa4b4d8d5963976ba17">ignore_unused</a> (T &amp;&amp;...)</td></tr>
<tr class="memdesc:a053a24bb37402fa4b4d8d5963976ba17"><td class="mdescLeft">&#160;</td><td class="mdescRight">Ignores unused arguments.  <a href="namespacearm__compute.xhtml#a053a24bb37402fa4b4d8d5963976ba17">More...</a><br /></td></tr>
<tr class="separator:a053a24bb37402fa4b4d8d5963976ba17"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a49cdbfceec3cb9949d00dbd1a17c5604"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_status.xhtml">Status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml#a49cdbfceec3cb9949d00dbd1a17c5604">create_error</a> (<a class="el" href="namespacearm__compute.xhtml#a59e56af19e754a6aa26a612ebf91d05f">ErrorCode</a> error_code, std::string msg)</td></tr>
<tr class="memdesc:a49cdbfceec3cb9949d00dbd1a17c5604"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an error containing the error message.  <a href="namespacearm__compute.xhtml#a49cdbfceec3cb9949d00dbd1a17c5604">More...</a><br /></td></tr>
<tr class="separator:a49cdbfceec3cb9949d00dbd1a17c5604"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af9b3e9f3ef6409e72c71aeacebf58f3b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_status.xhtml">Status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml#af9b3e9f3ef6409e72c71aeacebf58f3b">create_error_msg</a> (<a class="el" href="namespacearm__compute.xhtml#a59e56af19e754a6aa26a612ebf91d05f">ErrorCode</a> error_code, const char *<a class="el" href="_cpu_floor_kernel_8cpp.xhtml#a89746721cac623cd0ffa90c03fc7a657">func</a>, const char *file, int line, const char *msg)</td></tr>
<tr class="memdesc:af9b3e9f3ef6409e72c71aeacebf58f3b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an error and the error message.  <a href="namespacearm__compute.xhtml#af9b3e9f3ef6409e72c71aeacebf58f3b">More...</a><br /></td></tr>
<tr class="separator:af9b3e9f3ef6409e72c71aeacebf58f3b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a61e7f5901fd23f6009db8eac1a400be9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml#a61e7f5901fd23f6009db8eac1a400be9">throw_error</a> (<a class="el" href="classarm__compute_1_1_status.xhtml">Status</a> err)</td></tr>
<tr class="memdesc:a61e7f5901fd23f6009db8eac1a400be9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Throw an std::runtime_error.  <a href="namespacearm__compute.xhtml#a61e7f5901fd23f6009db8eac1a400be9">More...</a><br /></td></tr>
<tr class="separator:a61e7f5901fd23f6009db8eac1a400be9"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Macro Definition Documentation</h2>
<a id="a50048c593c53405cca5b0d69dfe25554"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a50048c593c53405cca5b0d69dfe25554">&#9670;&nbsp;</a></span>ARM_COMPUTE_CONST_ON_ERROR</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ARM_COMPUTE_CONST_ON_ERROR</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">cond, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">val, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">msg&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;val</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_error_8h_source.xhtml#l00459">459</a> of file <a class="el" href="_error_8h_source.xhtml">Error.h</a>.</p>

</div>
</div>
<a id="af1b8ff8eb557a2ad11272f1505f45d34"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af1b8ff8eb557a2ad11272f1505f45d34">&#9670;&nbsp;</a></span>ARM_COMPUTE_CREATE_ERROR</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ARM_COMPUTE_CREATE_ERROR</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">error_code, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">msg&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;<a class="el" href="namespacearm__compute.xhtml#af9b3e9f3ef6409e72c71aeacebf58f3b">arm_compute::create_error_msg</a>(error_code, __func__, __FILE__, __LINE__, msg)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Creates an error with a given message. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">error_code</td><td>Error code. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">msg</td><td>Message to encapsulate. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_error_8h_source.xhtml#l00159">159</a> of file <a class="el" href="_error_8h_source.xhtml">Error.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_pixel_wise_multiplication_kernel_8cpp_source.xhtml#l00319">CLPixelWiseMultiplicationKernel::border_size()</a>, <a class="el" href="_g_c_node_validator_8cpp_source.xhtml#l00095">GCNodeValidator::validate()</a>, <a class="el" href="_n_e_node_validator_8cpp_source.xhtml#l00068">NENodeValidator::validate()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_output_stage_8cpp_source.xhtml#l00147">NEGEMMLowpOutputStage::validate()</a>, and <a class="el" href="_c_l_g_e_m_m_lowp_output_stage_8cpp_source.xhtml#l00171">CLGEMMLowpOutputStage::validate()</a>.</p>

</div>
</div>
<a id="a1f6cdb912f3c70a81f27c62ff3f1c569"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1f6cdb912f3c70a81f27c62ff3f1c569">&#9670;&nbsp;</a></span>ARM_COMPUTE_CREATE_ERROR_LOC</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ARM_COMPUTE_CREATE_ERROR_LOC</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">error_code, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><a class="el" href="_cpu_floor_kernel_8cpp.xhtml#a89746721cac623cd0ffa90c03fc7a657">func</a>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">file, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">line, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">msg&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;<a class="el" href="namespacearm__compute.xhtml#af9b3e9f3ef6409e72c71aeacebf58f3b">arm_compute::create_error_msg</a>(error_code, <a class="el" href="_cpu_floor_kernel_8cpp.xhtml#a89746721cac623cd0ffa90c03fc7a657">func</a>, file, line, msg)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Creates an error on location with a given message. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">error_code</td><td>Error code. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">func</td><td>Function in which the error occurred. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">file</td><td>File in which the error occurred. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">line</td><td>Line in which the error occurred. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">msg</td><td>Message to display before aborting. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_error_8h_source.xhtml#l00169">169</a> of file <a class="el" href="_error_8h_source.xhtml">Error.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_validate_8h_source.xhtml#l00046">arm_compute::error_on_unsupported_int64_base_atomics()</a>.</p>

</div>
</div>
<a id="abf8348c7af1cedc02945cc7bffe511e4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abf8348c7af1cedc02945cc7bffe511e4">&#9670;&nbsp;</a></span>ARM_COMPUTE_CREATE_ERROR_LOC_VAR</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ARM_COMPUTE_CREATE_ERROR_LOC_VAR</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">error_code, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><a class="el" href="_cpu_floor_kernel_8cpp.xhtml#a89746721cac623cd0ffa90c03fc7a657">func</a>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">file, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">line, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">msg, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>...</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line"><span class="keywordflow">do</span>                                                                                    \</div><div class="line">    {                                                                                     \</div><div class="line">        std::array&lt;char, 512&gt; out{ 0 };                                                   \</div><div class="line">        int <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a> = <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#a9429515817425d10f4b662eaa069cc5c">snprintf</a>(out.data(), out.size(), <span class="stringliteral">&quot;in %s %s:%d: &quot;</span>, <a class="code" href="_cpu_floor_kernel_8cpp.xhtml#a89746721cac623cd0ffa90c03fc7a657">func</a>, file, line); \</div><div class="line">        snprintf(out.data() + <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>, out.size() - <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>, msg, __VA_ARGS__);             <a class="code" href="namespacearm__compute.xhtml#a49cdbfceec3cb9949d00dbd1a17c5604">\</a></div><div class="line"><a class="code" href="namespacearm__compute.xhtml#a49cdbfceec3cb9949d00dbd1a17c5604">        arm_compute::create_error</a>(error_code, std::string(out.data()));                   \</div><div class="line">    } <span class="keywordflow">while</span>(<span class="keyword">false</span>)</div><div class="ttc" id="src_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml_a009469e4d9b8fce3b6d5e97d2077827d"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a></div><div class="ttdeci">__global uchar * offset(const Image *img, int x, int y)</div><div class="ttdoc">Get the pointer position of a Image. </div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00846">helpers.h:846</a></div></div>
<div class="ttc" id="_cpu_floor_kernel_8cpp_xhtml_a89746721cac623cd0ffa90c03fc7a657"><div class="ttname"><a href="_cpu_floor_kernel_8cpp.xhtml#a89746721cac623cd0ffa90c03fc7a657">func</a></div><div class="ttdeci">FloorUKernelPtr func</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_floor_kernel_8cpp_source.xhtml#l00057">CpuFloorKernel.cpp:57</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a49cdbfceec3cb9949d00dbd1a17c5604"><div class="ttname"><a href="namespacearm__compute.xhtml#a49cdbfceec3cb9949d00dbd1a17c5604">arm_compute::create_error</a></div><div class="ttdeci">Status create_error(ErrorCode error_code, std::string msg)</div><div class="ttdoc">Creates an error containing the error message. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8cpp_source.xhtml#l00034">Error.cpp:34</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1support_1_1cpp11_xhtml_a9429515817425d10f4b662eaa069cc5c"><div class="ttname"><a href="namespacearm__compute_1_1support_1_1cpp11.xhtml#a9429515817425d10f4b662eaa069cc5c">arm_compute::support::cpp11::snprintf</a></div><div class="ttdeci">int snprintf(char *s, std::size_t n, const char *fmt, Ts &amp;&amp;... args)</div><div class="ttdoc">Loads the data from the given location, converts them to character string equivalents and writes the ...</div><div class="ttdef"><b>Definition:</b> <a href="_toolchain_support_8h_source.xhtml#l00239">ToolchainSupport.h:239</a></div></div>
</div><!-- fragment -->
<p>Creates an error on location with a given message. </p>
<p>Accepts a message format and a variable list of arguments matching the format description.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">error_code</td><td>Error code. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">func</td><td>Function in which the error occurred. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">file</td><td>File in which the error occurred. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">line</td><td>Line in which the error occurred. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">msg</td><td>Error description message format. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">...</td><td>List of arguments matching the format description. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_error_8h_source.xhtml#l00181">181</a> of file <a class="el" href="_error_8h_source.xhtml">Error.h</a>.</p>

</div>
</div>
<a id="a7cf8d8b669b8f7b05680230be30d60f4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7cf8d8b669b8f7b05680230be30d60f4">&#9670;&nbsp;</a></span>ARM_COMPUTE_ERROR</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ARM_COMPUTE_ERROR</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">msg</td><td>)</td>
          <td>&#160;&#160;&#160;<a class="el" href="_error_8h.xhtml#adfd4354a6e0f46eddd353913a1470219">ARM_COMPUTE_THROW_ERROR</a>(__func__, __FILE__, __LINE__, msg)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Print the given message then throw an std::runtime_error. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">msg</td><td>Message to display. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_error_8h_source.xhtml#l00352">352</a> of file <a class="el" href="_error_8h_source.xhtml">Error.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_graph_utils_8cpp_source.xhtml#l00206">NumPyAccessor::access_tensor()</a>, <a class="el" href="_graph_utils_8cpp_source.xhtml#l00427">ValidationOutputAccessor::access_tensor()</a>, <a class="el" href="_graph_utils_8cpp_source.xhtml#l00568">DetectionOutputAccessor::access_tensor()</a>, <a class="el" href="_graph_utils_8cpp_source.xhtml#l00641">TopNPredictionsAccessor::access_tensor()</a>, <a class="el" href="_graph_utils_8cpp_source.xhtml#l00693">RandomAccessor::access_tensor()</a>, <a class="el" href="_activation_layer_8h_source.xhtml#l00039">arm_compute::test::validation::reference::activate_float()</a>, <a class="el" href="_c_l_multi_image_8cpp_source.xhtml#l00130">CLMultiImage::allocate()</a>, <a class="el" href="_multi_image_8cpp_source.xhtml#l00130">MultiImage::allocate()</a>, <a class="el" href="_operator_tensor_8cpp_source.xhtml#l00046">OperatorTensor::buffer()</a>, <a class="el" href="graph__validate__utils_8h_source.xhtml#l00194">arm_compute::utils::calculate_convolution_padding()</a>, <a class="el" href="src_2core_2_helpers_8cpp_source.xhtml#l00028">arm_compute::calculate_valid_region_scale()</a>, <a class="el" href="reference_2_channel_combine_8cpp_source.xhtml#l00091">arm_compute::test::validation::reference::channel_combine()</a>, <a class="el" href="arm__compute_2core_2_utils_8h_source.xhtml#l00327">arm_compute::channel_idx_from_format()</a>, <a class="el" href="arm__compute_2core_2_utils_8h_source.xhtml#l01299">arm_compute::check_value_range()</a>, <a class="el" href="reference_2_color_convert_8cpp_source.xhtml#l00093">arm_compute::test::validation::reference::color_convert()</a>, <a class="el" href="reference_2_reduction_operation_8cpp_source.xhtml#l00178">arm_compute::test::validation::reference::compute_reduction_operation()</a>, <a class="el" href="_concatenate_layer_8cpp_source.xhtml#l00116">arm_compute::test::validation::reference::concatenate_layer()</a>, <a class="el" href="_c_l_g_e_m_m_default_config_native_bifrost_8cpp_source.xhtml#l00043">CLGEMMDefaultConfigNativeBifrost::configure()</a>, <a class="el" href="_c_l_g_e_m_m_default_config_native_midgard_8cpp_source.xhtml#l00043">CLGEMMDefaultConfigNativeMidgard::configure()</a>, <a class="el" href="_c_l_g_e_m_m_default_config_native_valhall_8cpp_source.xhtml#l00043">CLGEMMDefaultConfigNativeValhall::configure()</a>, <a class="el" href="_c_l_g_e_m_m_default_config_reshaped_valhall_8cpp_source.xhtml#l00043">CLGEMMDefaultConfigReshapedValhall::configure()</a>, <a class="el" href="_c_l_g_e_m_m_default_config_reshaped_r_h_s_only_bifrost_8cpp_source.xhtml#l00048">CLGEMMDefaultConfigReshapedRHSOnlyBifrost::configure()</a>, <a class="el" href="_c_l_g_e_m_m_default_config_reshaped_r_h_s_only_valhall_8cpp_source.xhtml#l00048">CLGEMMDefaultConfigReshapedRHSOnlyValhall::configure()</a>, <a class="el" href="_c_l_g_e_m_m_default_config_reshaped_bifrost_8cpp_source.xhtml#l00048">CLGEMMDefaultConfigReshapedBifrost::configure()</a>, <a class="el" href="_cl_elementwise_unary_kernel_8cpp_source.xhtml#l00065">ClElementWiseUnaryKernel::configure()</a>, <a class="el" href="_n_e_scale_8cpp_source.xhtml#l00104">NEScale::configure()</a>, <a class="el" href="_cpu_concatenate_batch_kernel_8cpp_source.xhtml#l00155">CpuConcatenateBatchKernel::configure()</a>, <a class="el" href="_n_e_warp_perspective_8cpp_source.xhtml#l00035">NEWarpPerspective::configure()</a>, <a class="el" href="_cl_pooling_kernel_8cpp_source.xhtml#l00208">ClPoolingKernel::configure()</a>, <a class="el" href="_cl_pooling_8cpp_source.xhtml#l00036">ClPooling::configure()</a>, <a class="el" href="_c_l_threshold_kernel_8cpp_source.xhtml#l00042">CLThresholdKernel::configure()</a>, <a class="el" href="_n_e_warp_affine_8cpp_source.xhtml#l00035">NEWarpAffine::configure()</a>, <a class="el" href="_cpu_concatenate_depth_kernel_8cpp_source.xhtml#l00155">CpuConcatenateDepthKernel::configure()</a>, <a class="el" href="_g_c_depthwise_convolution_layer3x3_kernel_8cpp_source.xhtml#l00054">GCDepthwiseConvolutionLayer3x3Kernel::configure()</a>, <a class="el" href="_cpu_concatenate_8cpp_source.xhtml#l00050">CpuConcatenate::configure()</a>, <a class="el" href="_g_c_fill_border_kernel_8cpp_source.xhtml#l00063">GCFillBorderKernel::configure()</a>, <a class="el" href="_n_e_table_lookup_kernel_8cpp_source.xhtml#l00109">NETableLookupKernel::configure()</a>, <a class="el" href="_g_c_concatenate_layer_8cpp_source.xhtml#l00043">GCConcatenateLayer::configure()</a>, <a class="el" href="_n_e_threshold_kernel_8cpp_source.xhtml#l00077">NEThresholdKernel::configure()</a>, <a class="el" href="_n_e_warp_kernel_8cpp_source.xhtml#l00070">INEWarpKernel::configure()</a>, <a class="el" href="_cl_concatenate_8cpp_source.xhtml#l00052">ClConcatenate::configure()</a>, <a class="el" href="_n_e_instance_normalization_layer_kernel_8cpp_source.xhtml#l00220">NEInstanceNormalizationLayerKernel::configure()</a>, <a class="el" href="_n_e_f_f_t_digit_reverse_kernel_8cpp_source.xhtml#l00077">NEFFTDigitReverseKernel::configure()</a>, <a class="el" href="_c_l_bitwise_kernel_8cpp_source.xhtml#l00042">CLBitwiseKernel::configure()</a>, <a class="el" href="_n_e_normalization_layer_kernel_8cpp_source.xhtml#l00073">NENormalizationLayerKernel::configure()</a>, <a class="el" href="_c_p_p_permute_kernel_8cpp_source.xhtml#l00102">CPPPermuteKernel::configure()</a>, <a class="el" href="_g_c_direct_convolution_layer_kernel_8cpp_source.xhtml#l00055">GCDirectConvolutionLayerKernel&lt; kernel_size &gt;::configure()</a>, <a class="el" href="_n_e_color_convert_kernel_8cpp_source.xhtml#l00048">NEColorConvertKernel::configure()</a>, <a class="el" href="_n_e_quantization_layer_kernel_8cpp_source.xhtml#l00112">NEQuantizationLayerKernel::configure()</a>, <a class="el" href="_n_e_derivative_kernel_8cpp_source.xhtml#l00056">NEDerivativeKernel::configure()</a>, <a class="el" href="_c_l_min_max_location_kernel_8cpp_source.xhtml#l00069">CLMinMaxKernel::configure()</a>, <a class="el" href="_n_e_range_kernel_8cpp_source.xhtml#l00119">NERangeKernel::configure()</a>, <a class="el" href="_n_e_magnitude_phase_kernel_8cpp_source.xhtml#l00252">NEMagnitudePhaseKernel&lt; mag_type, phase_type &gt;::configure()</a>, <a class="el" href="_n_e_min_max_location_kernel_8cpp_source.xhtml#l00051">NEMinMaxKernel::configure()</a>, <a class="el" href="_n_e_f_f_t_radix_stage_kernel_8cpp_source.xhtml#l00987">NEFFTRadixStageKernel::configure()</a>, <a class="el" href="_n_e_mean_std_dev_normalization_kernel_8cpp_source.xhtml#l00156">NEMeanStdDevNormalizationKernel::configure()</a>, <a class="el" href="_n_e_pad_layer_kernel_8cpp_source.xhtml#l00186">NEPadLayerKernel::configure()</a>, <a class="el" href="_g_c_g_e_m_m_matrix_multiply_kernel_8cpp_source.xhtml#l00188">GCGEMMMatrixMultiplyKernel::configure()</a>, <a class="el" href="_n_e_depthwise_convolution_layer_8cpp_source.xhtml#l00345">NEDepthwiseConvolutionLayer::configure()</a>, <a class="el" href="_n_e_direct_convolution_layer_output_stage_kernel_8cpp_source.xhtml#l00385">NEDirectConvolutionLayerOutputStageKernel::configure()</a>, <a class="el" href="_n_e_gather_kernel_8cpp_source.xhtml#l00135">NEGatherKernel::configure()</a>, <a class="el" href="_n_e_g_e_m_m_matrix_addition_kernel_8cpp_source.xhtml#l00118">NEGEMMMatrixAdditionKernel::configure()</a>, <a class="el" href="_c_l_deconvolution_layer_8cpp_source.xhtml#l00050">CLDeconvolutionLayer::configure()</a>, <a class="el" href="_c_l_color_convert_kernel_8cpp_source.xhtml#l00052">CLColorConvertKernel::configure()</a>, <a class="el" href="_n_e_crop_kernel_8cpp_source.xhtml#l00243">NECropKernel::configure()</a>, <a class="el" href="_g_c_direct_convolution_layer_8cpp_source.xhtml#l00041">GCDirectConvolutionLayer::configure()</a>, <a class="el" href="_c_l_pad_layer_kernel_8cpp_source.xhtml#l00077">CLPadLayerKernel::configure()</a>, <a class="el" href="_c_l_reduction_operation_kernel_8cpp_source.xhtml#l00136">CLReductionOperationKernel::configure()</a>, <a class="el" href="_cpu_pooling_8cpp_source.xhtml#l00043">CpuPooling::configure()</a>, <a class="el" href="_c_l_l2_normalize_layer_kernel_8cpp_source.xhtml#l00104">CLL2NormalizeLayerKernel::configure()</a>, <a class="el" href="_n_e_depthwise_convolution_layer_native_kernel_8cpp_source.xhtml#l00775">NEDepthwiseConvolutionLayerNativeKernel::configure()</a>, <a class="el" href="_c_l_magnitude_phase_kernel_8cpp_source.xhtml#l00052">CLMagnitudePhaseKernel::configure()</a>, <a class="el" href="_n_e_pad_layer_8cpp_source.xhtml#l00167">NEPadLayer::configure()</a>, <a class="el" href="_c_l_fill_border_kernel_8cpp_source.xhtml#l00068">CLFillBorderKernel::configure()</a>, <a class="el" href="_c_l_arg_min_max_layer_kernel_8cpp_source.xhtml#l00079">CLArgMinMaxLayerKernel::configure()</a>, <a class="el" href="_n_e_col2_im_kernel_8cpp_source.xhtml#l00109">NECol2ImKernel::configure()</a>, <a class="el" href="_n_e_winograd_convolution_layer_8cpp_source.xhtml#l00310">NEWinogradConvolutionLayer::configure()</a>, <a class="el" href="_n_e_pixel_wise_multiplication_kernel_8cpp_source.xhtml#l01482">NEPixelWiseMultiplicationKernel::configure()</a>, <a class="el" href="_c_l_reduction_operation_8cpp_source.xhtml#l00198">CLReductionOperation::configure()</a>, <a class="el" href="_c_l_depthwise_convolution_layer_8cpp_source.xhtml#l00575">CLDepthwiseConvolutionLayer::configure()</a>, <a class="el" href="_n_e_im2_col_kernel_8cpp_source.xhtml#l00363">NEIm2ColKernel::configure()</a>, <a class="el" href="_n_e_harris_corners_kernel_8cpp_source.xhtml#l00738">NEHarrisScoreKernel&lt; block_size &gt;::configure()</a>, <a class="el" href="_n_e_harris_corners_8cpp_source.xhtml#l00066">NEHarrisCorners::configure()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_matrix_multiply_core_8cpp_source.xhtml#l00077">NEGEMMLowpMatrixMultiplyCore::configure()</a>, <a class="el" href="_c_l_harris_corners_8cpp_source.xhtml#l00074">CLHarrisCorners::configure()</a>, <a class="el" href="_n_e_convolution_layer_8cpp_source.xhtml#l00048">NEConvolutionLayer::configure()</a>, <a class="el" href="_n_e_canny_edge_kernel_8cpp_source.xhtml#l00969">NEEdgeNonMaxSuppressionKernel::configure()</a>, <a class="el" href="_c_l_convolution_layer_8cpp_source.xhtml#l00054">CLConvolutionLayer::configure()</a>, <a class="el" href="_n_e_min_max_location_kernel_8cpp_source.xhtml#l00337">NEMinMaxLocationKernel::configure()</a>, <a class="el" href="_c_l_g_e_m_m_8cpp_source.xhtml#l00671">CLGEMM::configure()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_output_stage_8cpp_source.xhtml#l00081">NEGEMMLowpOutputStage::configure()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_output_stage_8cpp_source.xhtml#l00139">CLGEMMLowpOutputStage::configure()</a>, <a class="el" href="_detection_post_process_layer_node_8cpp_source.xhtml#l00063">DetectionPostProcessLayerNode::configure_output()</a>, <a class="el" href="_generate_proposals_layer_node_8cpp_source.xhtml#l00063">GenerateProposalsLayerNode::configure_output()</a>, <a class="el" href="_c_p_p_types_8h_source.xhtml#l00071">arm_compute::cpu_model_to_string()</a>, <a class="el" href="_c_l_g_e_m_m_kernel_selection_8h_source.xhtml#l00046">CLGEMMKernelSelectionFactory::create()</a>, <a class="el" href="_c_l_g_e_m_m_reshaped_kernel_configuration_8h_source.xhtml#l00047">CLGEMMReshapedKernelConfigurationFactory::create()</a>, <a class="el" href="_c_l_g_e_m_m_reshaped_only_r_h_s_kernel_configuration_8h_source.xhtml#l00047">CLGEMMReshapedOnlyRHSKernelConfigurationFactory::create()</a>, <a class="el" href="_c_l_g_e_m_m_native_kernel_configuration_8h_source.xhtml#l00048">CLGEMMNativeKernelConfigurationFactory::create()</a>, <a class="el" href="_scheduler_factory_8cpp_source.xhtml#l00049">SchedulerFactory::create()</a>, <a class="el" href="_g_c_functions_factory_8cpp_source.xhtml#l00127">arm_compute::graph::backends::detail::create_depthwise_convolution_layer&lt; GCDepthwiseConvolutionLayerFunctions, GCTargetInfo &gt;()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00835">arm_compute::graph::backends::detail::create_eltwise_layer()</a>, <a class="el" href="_g_c_functions_factory_8cpp_source.xhtml#l00179">arm_compute::graph::backends::detail::create_eltwise_layer&lt; GCEltwiseFunctions, GCTargetInfo &gt;()</a>, <a class="el" href="_c_l_utils_8cpp_source.xhtml#l00029">arm_compute::create_image2d_from_buffer()</a>, <a class="el" href="_multi_image_8cpp_source.xhtml#l00164">MultiImage::create_subimage()</a>, <a class="el" href="_g_c_device_backend_8cpp_source.xhtml#l00118">GCDeviceBackend::create_subtensor()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00904">arm_compute::graph::backends::detail::create_unary_eltwise_layer()</a>, <a class="el" href="arm__compute_2core_2_utils_8h_source.xhtml#l00106">arm_compute::data_size_from_type()</a>, <a class="el" href="arm__compute_2core_2_utils_8h_source.xhtml#l00219">arm_compute::data_type_from_format()</a>, <a class="el" href="arm__compute_2core_2_utils_8h_source.xhtml#l00185">arm_compute::element_size_from_data_type()</a>, <a class="el" href="neon_2elementwise__list_8h_source.xhtml#l00160">arm_compute::cpu::elementwise_arithm_op()</a>, <a class="el" href="neon_2elementwise__list_8h_source.xhtml#l00311">arm_compute::cpu::elementwise_comp_op()</a>, <a class="el" href="neon_2elementwise__list_8h_source.xhtml#l00280">arm_compute::cpu::elementwise_comp_op_scalar()</a>, <a class="el" href="neon_2elementwise__unary__list_8h_source.xhtml#l00059">arm_compute::cpu::elementwise_op_imp()</a>, <a class="el" href="neon_2elementwise__unary__list_8h_source.xhtml#l00035">arm_compute::cpu::elementwise_op_scalar_imp()</a>, <a class="el" href="_element_wise_unary_8cpp_source.xhtml#l00035">arm_compute::test::validation::reference::elementwise_unary()</a>, <a class="el" href="utils_2_utils_8h_source.xhtml#l00406">NPYLoader::fill_tensor()</a>, <a class="el" href="_assets_library_8h_source.xhtml#l00721">AssetsLibrary::fill_tensor_uniform()</a>, <a class="el" href="_assets_library_8h_source.xhtml#l00818">AssetsLibrary::fill_tensor_uniform_ranged()</a>, <a class="el" href="_graph_manager_8cpp_source.xhtml#l00046">GraphManager::finalize_graph()</a>, <a class="el" href="cpu_2kernels_2activation_2_n_e_o_n_2fp32_8cpp_source.xhtml#l00050">arm_compute::cpu::fp32_neon_activation()</a>, <a class="el" href="_scheduler_8cpp_source.xhtml#l00094">Scheduler::get()</a>, <a class="el" href="tests_2validation_2_helpers_8h_source.xhtml#l00062">arm_compute::test::validation::get_activation_layer_test_bounds()</a>, <a class="el" href="core_2_c_l_2_c_l_helpers_8cpp_source.xhtml#l00173">arm_compute::get_cl_dot8_acc_type_from_data_type()</a>, <a class="el" href="core_2_c_l_2_c_l_helpers_8cpp_source.xhtml#l00073">arm_compute::get_cl_promoted_type_from_data_type()</a>, <a class="el" href="core_2_c_l_2_c_l_helpers_8cpp_source.xhtml#l00139">arm_compute::get_cl_select_type_from_data_type()</a>, <a class="el" href="core_2_c_l_2_c_l_helpers_8cpp_source.xhtml#l00121">arm_compute::get_cl_signed_type_from_element_size()</a>, <a class="el" href="core_2_c_l_2_c_l_helpers_8cpp_source.xhtml#l00037">arm_compute::get_cl_type_from_data_type()</a>, <a class="el" href="core_2_c_l_2_c_l_helpers_8cpp_source.xhtml#l00103">arm_compute::get_cl_unsigned_type_from_element_size()</a>, <a class="el" href="_helpers_8inl_source.xhtml#l00193">arm_compute::get_data_layout_dimension_index()</a>, <a class="el" href="core_2_c_l_2_c_l_helpers_8cpp_source.xhtml#l00191">arm_compute::get_data_size_from_data_type()</a>, <a class="el" href="src_2graph_2_utils_8cpp_source.xhtml#l00039">arm_compute::graph::get_default_target()</a>, <a class="el" href="src_2graph_2_utils_8cpp_source.xhtml#l00129">arm_compute::graph::get_dimension_idx()</a>, <a class="el" href="_helpers_8inl_source.xhtml#l00222">arm_compute::get_index_data_layout_dimension()</a>, <a class="el" href="_n_e_direct_convolution_detail_8h_source.xhtml#l00948">arm_compute::detail::get_input_num_elems_processed()</a>, <a class="el" href="arm__compute_2core_2_utils_8h_source.xhtml#l00564">arm_compute::get_min_max()</a>, <a class="el" href="_asymm_helpers_8cpp_source.xhtml#l00157">arm_compute::quantization::get_min_max_values_from_quantized_data_type()</a>, <a class="el" href="_softmax_helpers_8cpp_source.xhtml#l00030">arm_compute::softmax_helpers::get_permutation_vector_from_softmax_axis()</a>, <a class="el" href="arm__compute_2core_2_utils_8h_source.xhtml#l00528">arm_compute::get_promoted_data_type()</a>, <a class="el" href="tests_2validation_2_helpers_8cpp_source.xhtml#l00290">arm_compute::test::validation::get_tile()</a>, <a class="el" href="utils_2_utils_8h_source.xhtml#l00158">arm_compute::utils::get_typestring()</a>, <a class="el" href="tests_2_utils_8h_source.xhtml#l00742">arm_compute::test::get_typestring()</a>, <a class="el" href="graph__validate__utils_8h_source.xhtml#l00604">arm_compute::utils::get_verify_accessor()</a>, <a class="el" href="src_2core_2_utils_8cpp_source.xhtml#l00528">arm_compute::has_padding_changed()</a>, <a class="el" href="_scheduler_timer_8cpp_source.xhtml#l00039">SchedulerClock&lt; output_timestamps &gt;::id()</a>, <a class="el" href="reference_2_im2_col_8cpp_source.xhtml#l00144">arm_compute::test::validation::reference::im2col()</a>, <a class="el" href="_c_l_multi_image_8cpp_source.xhtml#l00048">CLMultiImage::init_auto_padding()</a>, <a class="el" href="_multi_image_8cpp_source.xhtml#l00048">MultiImage::init_auto_padding()</a>, <a class="el" href="reference_2_l2_normalize_layer_8cpp_source.xhtml#l00051">arm_compute::test::validation::reference::l2_normalize()</a>, <a class="el" href="_mali_counter_8cpp_source.xhtml#l00110">MaliCounter::MaliCounter()</a>, <a class="el" href="_scheduler_timer_8cpp_source.xhtml#l00225">SchedulerClock&lt; output_timestamps &gt;::measurements()</a>, <a class="el" href="reference_2_non_linear_filter_8cpp_source.xhtml#l00036">arm_compute::test::validation::reference::non_linear_filter()</a>, <a class="el" href="arm__compute_2core_2_utils_8h_source.xhtml#l00451">arm_compute::num_planes_from_format()</a>, <a class="el" href="_i_scheduler_8cpp_source.xhtml#l00053">IScheduler::num_threads_hint()</a>, <a class="el" href="_open_c_l_timer_8cpp_source.xhtml#l00056">OpenCLClock&lt; output_timestamps &gt;::OpenCLClock()</a>, <a class="el" href="arm__compute_2graph_2_type_printer_8h_source.xhtml#l00038">arm_compute::graph::operator&lt;&lt;()</a>, <a class="el" href="tests_2_type_printer_8h_source.xhtml#l00038">arm_compute::operator&lt;&lt;()</a>, <a class="el" href="_lut_accessor_8h_source.xhtml#l00061">LutAccessor&lt; T &gt;::operator[]()</a>, <a class="el" href="_c_l_lut_accessor_8h_source.xhtml#l00067">CLLutAccessor&lt; T &gt;::operator[]()</a>, <a class="el" href="reference_2_pad_layer_8cpp_source.xhtml#l00039">arm_compute::test::validation::reference::pad_layer()</a>, <a class="el" href="arm__compute_2core_2_utils_8h_source.xhtml#l00146">arm_compute::pixel_size_from_format()</a>, <a class="el" href="reference_2_pixel_wise_multiplication_8cpp_source.xhtml#l00217">arm_compute::test::validation::reference::pixel_wise_multiplication()</a>, <a class="el" href="arm__compute_2core_2_utils_8h_source.xhtml#l00262">arm_compute::plane_idx_from_channel()</a>, <a class="el" href="_p_m_u_counter_8h_source.xhtml#l00044">PMUCounter::PMUCounter()</a>, <a class="el" href="_n_e_depthwise_convolution_layer_8cpp_source.xhtml#l00408">NEDepthwiseConvolutionLayer::prepare()</a>, <a class="el" href="_c_l_depthwise_convolution_layer_8cpp_source.xhtml#l00646">CLDepthwiseConvolutionLayer::prepare()</a>, <a class="el" href="_graph_utils_8cpp_source.xhtml#l00110">CaffePreproccessor::preprocess()</a>, <a class="el" href="_graph_utils_8cpp_source.xhtml#l00069">TFPreproccessor::preprocess()</a>, <a class="el" href="cpu_2kernels_2activation_2_n_e_o_n_2qasymm8_8cpp_source.xhtml#l00040">arm_compute::cpu::qasymm8_neon_activation()</a>, <a class="el" href="cpu_2kernels_2activation_2_n_e_o_n_2qasymm8__signed_8cpp_source.xhtml#l00039">arm_compute::cpu::qasymm8_signed_neon_activation()</a>, <a class="el" href="activation_2_n_e_o_n_2qsymm16_8cpp_source.xhtml#l00041">arm_compute::cpu::qsymm16_neon_activation()</a>, <a class="el" href="reference_2_quantization_layer_8cpp_source.xhtml#l00037">arm_compute::test::validation::reference::quantization_layer()</a>, <a class="el" href="reference_2_remap_8cpp_source.xhtml#l00041">arm_compute::test::validation::reference::remap()</a>, <a class="el" href="_n_e_min_max_location_kernel_8cpp_source.xhtml#l00096">NEMinMaxKernel::reset()</a>, <a class="el" href="support_2_rounding_8h_source.xhtml#l00180">arm_compute::utils::rounding::round()</a>, <a class="el" href="_i_c_p_p_kernel_8h_source.xhtml#l00055">ICPPKernel::run()</a>, <a class="el" href="_c_l_operator_8cpp_source.xhtml#l00038">ICLOperator::run()</a>, <a class="el" href="_i_n_e_operator_8cpp_source.xhtml#l00040">INEOperator::run()</a>, <a class="el" href="_n_e_dequantization_layer_kernel_8cpp_source.xhtml#l00393">NEDequantizationLayerKernel::run()</a>, <a class="el" href="_c_p_p_box_with_non_maxima_suppression_limit_kernel_8cpp_source.xhtml#l00398">CPPBoxWithNonMaximaSuppressionLimitKernel::run()</a>, <a class="el" href="_n_e_reverse_kernel_8cpp_source.xhtml#l00145">NEReverseKernel::run()</a>, <a class="el" href="_n_e_channel_shuffle_layer_kernel_8cpp_source.xhtml#l00171">NEChannelShuffleLayerKernel::run()</a>, <a class="el" href="_cpu_concatenate_8cpp_source.xhtml#l00150">CpuConcatenate::run()</a>, <a class="el" href="_n_e_generate_proposals_layer_kernel_8cpp_source.xhtml#l00169">NEComputeAllAnchorsKernel::run()</a>, <a class="el" href="_c_p_p_top_k_v_kernel_8cpp_source.xhtml#l00129">CPPTopKVKernel::run()</a>, <a class="el" href="_c_l_deconvolution_layer_upsample_kernel_8cpp_source.xhtml#l00105">CLDeconvolutionLayerUpsampleKernel::run()</a>, <a class="el" href="_cl_concatenate_8cpp_source.xhtml#l00223">ClConcatenate::run()</a>, <a class="el" href="_n_e_convert_fully_connected_weights_kernel_8cpp_source.xhtml#l00104">NEConvertFullyConnectedWeightsKernel::run()</a>, <a class="el" href="_c_l_scale_kernel_8cpp_source.xhtml#l00251">CLScaleKernel::run()</a>, <a class="el" href="_n_e_fill_border_kernel_8cpp_source.xhtml#l00122">NEFillBorderKernel::run()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_matrix_multiply_kernel_8cpp_source.xhtml#l00947">NEGEMMLowpMatrixMultiplyKernel::run()</a>, <a class="el" href="_n_e_bounding_box_transform_kernel_8cpp_source.xhtml#l00230">NEBoundingBoxTransformKernel::run()</a>, <a class="el" href="_n_e_g_e_m_m_matrix_multiply_kernel_8cpp_source.xhtml#l01144">NEGEMMMatrixMultiplyKernel::run()</a>, <a class="el" href="_n_e_direct_convolution_layer_kernel_8cpp_source.xhtml#l01293">NEDirectConvolutionLayerKernel::run()</a>, <a class="el" href="_n_e_convolution_kernel_8cpp_source.xhtml#l00626">NEConvolutionKernel&lt; matrix_size &gt;::run()</a>, <a class="el" href="_n_e_depth_convert_layer_kernel_8cpp_source.xhtml#l00139">NEDepthConvertLayerKernel::run()</a>, <a class="el" href="_cpu_pooling_8cpp_source.xhtml#l00103">CpuPooling::run()</a>, <a class="el" href="_c_l_reduction_operation_kernel_8cpp_source.xhtml#l00254">CLReductionOperationKernel::run()</a>, <a class="el" href="_n_e_r_o_i_align_layer_kernel_8cpp_source.xhtml#l00301">NEROIAlignLayerKernel::run()</a>, <a class="el" href="_n_e_depthwise_convolution_layer_8cpp_source.xhtml#l00393">NEDepthwiseConvolutionLayer::run()</a>, <a class="el" href="_c_l_l2_normalize_layer_kernel_8cpp_source.xhtml#l00167">CLL2NormalizeLayerKernel::run()</a>, <a class="el" href="_n_e_pad_layer_8cpp_source.xhtml#l00250">NEPadLayer::run()</a>, <a class="el" href="_c_l_arg_min_max_layer_kernel_8cpp_source.xhtml#l00154">CLArgMinMaxLayerKernel::run()</a>, <a class="el" href="_c_l_depthwise_convolution_layer_8cpp_source.xhtml#l00631">CLDepthwiseConvolutionLayer::run()</a>, <a class="el" href="_c_l_color_convert_kernel_8cpp_source.xhtml#l00451">CLColorConvertKernel::run()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_reduction_kernel_8cpp_source.xhtml#l00165">NEGEMMLowpMatrixAReductionKernel::run()</a>, <a class="el" href="_n_e_convolution_kernel_8cpp_source.xhtml#l00701">NESeparableConvolutionHorKernel&lt; matrix_size &gt;::run()</a>, <a class="el" href="_c_l_g_e_m_m_8cpp_source.xhtml#l00778">CLGEMM::run()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_reduction_kernel_8cpp_source.xhtml#l00365">NEGEMMLowpMatrixBReductionKernel::run()</a>, <a class="el" href="_n_e_convolution_kernel_8cpp_source.xhtml#l01139">NESeparableConvolutionVertKernel&lt; matrix_size &gt;::run()</a>, <a class="el" href="_n_e_convolution_kernel_8cpp_source.xhtml#l01473">NEConvolutionRectangleKernel::run()</a>, <a class="el" href="_cpu_reshape_kernel_8cpp_source.xhtml#l00102">CpuReshapeKernel::run_op()</a>, <a class="el" href="_cpu_permute_kernel_8cpp_source.xhtml#l00272">CpuPermuteKernel::run_op()</a>, <a class="el" href="_cl_pooling_kernel_8cpp_source.xhtml#l00426">ClPoolingKernel::run_op()</a>, <a class="el" href="_cpu_pooling_kernel_8cpp_source.xhtml#l00481">CpuPoolingKernel::run_op()</a>, <a class="el" href="src_2runtime_2_c_l_2_utils_8cpp_source.xhtml#l00073">arm_compute::save_program_cache_to_file()</a>, <a class="el" href="validation_2reference_2_scale_8cpp_source.xhtml#l00041">arm_compute::test::validation::reference::scale_core()</a>, <a class="el" href="src_2core_2_utils_8cpp_source.xhtml#l00419">arm_compute::scaled_dimensions()</a>, <a class="el" href="_c_l_g_e_m_m_default_type_midgard_8cpp_source.xhtml#l00043">CLGEMMDefaultTypeMidgard::select_kernel()</a>, <a class="el" href="_c_l_g_e_m_m_default_type_bifrost_8cpp_source.xhtml#l00042">CLGEMMDefaultTypeBifrost::select_kernel()</a>, <a class="el" href="_c_l_g_e_m_m_default_type_valhall_8cpp_source.xhtml#l00042">CLGEMMDefaultTypeValhall::select_kernel()</a>, <a class="el" href="_c_l_compile_context_8cpp_source.xhtml#l00211">CLCompileContext::set_context()</a>, <a class="el" href="_i_scheduler_8cpp_source.xhtml#l00047">IScheduler::set_num_threads_with_affinity()</a>, <a class="el" href="tests_2_utils_8h_source.xhtml#l00353">arm_compute::test::store_value_with_data_type()</a>, <a class="el" href="reference_2_threshold_8cpp_source.xhtml#l00035">arm_compute::test::validation::reference::threshold()</a>, <a class="el" href="utils_2_type_printer_8h_source.xhtml#l02423">arm_compute::to_string()</a>, <a class="el" href="_cpu_concatenate_8cpp_source.xhtml#l00104">CpuConcatenate::validate()</a>, <a class="el" href="_cpu_elementwise_unary_kernel_8cpp_source.xhtml#l00130">CpuElementwiseUnaryKernel::validate()</a>, <a class="el" href="_cl_concatenate_8cpp_source.xhtml#l00146">ClConcatenate::validate()</a>, <a class="el" href="_c_l_deconvolution_layer_8cpp_source.xhtml#l00077">CLDeconvolutionLayer::validate()</a>, <a class="el" href="_n_e_depthwise_convolution_layer_8cpp_source.xhtml#l00362">NEDepthwiseConvolutionLayer::validate()</a>, <a class="el" href="_n_e_pad_layer_8cpp_source.xhtml#l00206">NEPadLayer::validate()</a>, <a class="el" href="_c_l_reduction_operation_8cpp_source.xhtml#l00048">CLReductionOperation::validate()</a>, <a class="el" href="_c_l_depthwise_convolution_layer_8cpp_source.xhtml#l00600">CLDepthwiseConvolutionLayer::validate()</a>, <a class="el" href="_cpu_elementwise_kernel_8cpp_source.xhtml#l00231">CpuArithmeticKernel::validate()</a>, <a class="el" href="_n_e_convolution_layer_8cpp_source.xhtml#l00101">NEConvolutionLayer::validate()</a>, <a class="el" href="_c_l_convolution_layer_8cpp_source.xhtml#l00101">CLConvolutionLayer::validate()</a>, <a class="el" href="_cpu_elementwise_kernel_8cpp_source.xhtml#l00324">CpuComparisonKernel::validate()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00664">arm_compute::graph::backends::detail::validate_eltwise_Layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00710">arm_compute::graph::backends::detail::validate_unary_eltwise_layer()</a>, <a class="el" href="_wall_clock_timer_8h_source.xhtml#l00046">WallClock&lt; output_timestamps &gt;::WallClock()</a>, <a class="el" href="reference_2_warp_affine_8cpp_source.xhtml#l00050">arm_compute::test::validation::reference::warp_affine()</a>, <a class="el" href="reference_2_warp_perspective_8cpp_source.xhtml#l00038">arm_compute::test::validation::reference::warp_perspective()</a>, <a class="el" href="tests_2validation_2_helpers_8cpp_source.xhtml#l00350">arm_compute::test::validation::zeros()</a>, and <a class="el" href="_mali_counter_8cpp_source.xhtml#l00147">MaliCounter::~MaliCounter()</a>.</p>

</div>
</div>
<a id="a94b64f1b45be794e8304c238e90be6b0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a94b64f1b45be794e8304c238e90be6b0">&#9670;&nbsp;</a></span>ARM_COMPUTE_ERROR_LOC</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ARM_COMPUTE_ERROR_LOC</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><a class="el" href="_cpu_floor_kernel_8cpp.xhtml#a89746721cac623cd0ffa90c03fc7a657">func</a>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">file, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">line, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">msg&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;<a class="el" href="_error_8h.xhtml#adfd4354a6e0f46eddd353913a1470219">ARM_COMPUTE_THROW_ERROR</a>(<a class="el" href="_cpu_floor_kernel_8cpp.xhtml#a89746721cac623cd0ffa90c03fc7a657">func</a>, file, line, msg)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Print the given message then throw an std::runtime_error. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">func</td><td>Function in which the error occurred. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">file</td><td>File in which the error occurred. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">line</td><td>Line in which the error occurred. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">msg</td><td>Message to display. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_error_8h_source.xhtml#l00372">372</a> of file <a class="el" href="_error_8h_source.xhtml">Error.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_validate_8cpp_source.xhtml#l00113">arm_compute::error_on_channel_not_in_known_format()</a>.</p>

</div>
</div>
<a id="a6b97423ad86a4a64ec1838d6135282cb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6b97423ad86a4a64ec1838d6135282cb">&#9670;&nbsp;</a></span>ARM_COMPUTE_ERROR_LOC_VAR</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ARM_COMPUTE_ERROR_LOC_VAR</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><a class="el" href="_cpu_floor_kernel_8cpp.xhtml#a89746721cac623cd0ffa90c03fc7a657">func</a>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">file, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">line, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">msg, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>...</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;<a class="el" href="_error_8h.xhtml#a86513cce33cfea9d3dd6eac3366b8253">ARM_COMPUTE_THROW_ERROR_VAR</a>(<a class="el" href="_cpu_floor_kernel_8cpp.xhtml#a89746721cac623cd0ffa90c03fc7a657">func</a>, file, line, msg, __VA_ARGS__)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Print the given message then throw an std::runtime_error. </p>
<p>Accepts a message format and a variable list of arguments matching the format description.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">func</td><td>Function in which the error occurred. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">file</td><td>File in which the error occurred. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">line</td><td>Line in which the error occurred. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">msg</td><td>Error description message format. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">...</td><td>List of arguments matching the format description. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_error_8h_source.xhtml#l00363">363</a> of file <a class="el" href="_error_8h_source.xhtml">Error.h</a>.</p>

</div>
</div>
<a id="a54a6080c9f4df1f908e57a9bbb46f5da"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a54a6080c9f4df1f908e57a9bbb46f5da">&#9670;&nbsp;</a></span>ARM_COMPUTE_ERROR_ON</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ARM_COMPUTE_ERROR_ON</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">cond</td><td>)</td>
          <td>&#160;&#160;&#160;<a class="el" href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a>(cond, #cond)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>If the condition is true then an error message is printed and an exception thrown. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cond</td><td>Condition to evaluate. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_error_8h_source.xhtml#l00466">466</a> of file <a class="el" href="_error_8h_source.xhtml">Error.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_graph_utils_8cpp_source.xhtml#l00206">NumPyAccessor::access_tensor()</a>, <a class="el" href="_graph_utils_8cpp_source.xhtml#l00641">TopNPredictionsAccessor::access_tensor()</a>, <a class="el" href="_i_access_window_8h_source.xhtml#l00244">AccessWindowHorizontal::AccessWindowHorizontal()</a>, <a class="el" href="_i_access_window_8h_source.xhtml#l00223">AccessWindowVertical::AccessWindowVertical()</a>, <a class="el" href="_memory_group_8h_source.xhtml#l00105">MemoryGroup::acquire()</a>, <a class="el" href="_blob_memory_pool_8cpp_source.xhtml#l00048">BlobMemoryPool::acquire()</a>, <a class="el" href="_offset_memory_pool_8cpp_source.xhtml#l00048">OffsetMemoryPool::acquire()</a>, <a class="el" href="_c_l_2_i_c_l_kernel_8h_source.xhtml#l00409">ICLKernel::add_array_argument()</a>, <a class="el" href="_graph_8cpp_source.xhtml#l00069">Graph::add_connection()</a>, <a class="el" href="_graph_builder_8cpp_source.xhtml#l00219">GraphBuilder::add_convolution_node()</a>, <a class="el" href="_graph_builder_8cpp_source.xhtml#l00276">GraphBuilder::add_deconvolution_node()</a>, <a class="el" href="_logger_8cpp_source.xhtml#l00112">Logger::add_decorator()</a>, <a class="el" href="_graph_builder_8cpp_source.xhtml#l00332">GraphBuilder::add_depthwise_convolution_node()</a>, <a class="el" href="_graph_builder_8cpp_source.xhtml#l00468">GraphBuilder::add_fully_connected_layer()</a>, <a class="el" href="_logger_8cpp_source.xhtml#l00106">Logger::add_printer()</a>, <a class="el" href="_i_c_l_kernel_8cpp_source.xhtml#l00088">ICLKernel::add_tensor_argument()</a>, <a class="el" href="_window_8inl_source.xhtml#l00140">Window::adjust()</a>, <a class="el" href="_i_access_window_8h_source.xhtml#l00047">arm_compute::adjust_down()</a>, <a class="el" href="_i_access_window_8h_source.xhtml#l00063">arm_compute::adjust_up()</a>, <a class="el" href="arm__compute_2core_2_utils_8h_source.xhtml#l01358">arm_compute::adjust_vec_size()</a>, <a class="el" href="_topological_sort_8cpp_source.xhtml#l00046">arm_compute::graph::detail::all_inputs_are_visited()</a>, <a class="el" href="_array_accessor_8h_source.xhtml#l00072">ArrayAccessor&lt; T &gt;::at()</a>, <a class="el" href="_c_l_array_accessor_8h_source.xhtml#l00082">CLArrayAccessor&lt; T &gt;::at()</a>, <a class="el" href="_i_array_8h_source.xhtml#l00117">IArray&lt; NELKInternalKeypoint &gt;::at()</a>, <a class="el" href="_sub_tensor_info_8h_source.xhtml#l00114">SubTensorInfo::auto_padding()</a>, <a class="el" href="src_2core_2_tensor_info_8cpp_source.xhtml#l00224">TensorInfo::auto_padding()</a>, <a class="el" href="reference_2_batch_to_space_layer_8cpp_source.xhtml#l00038">arm_compute::test::validation::reference::batch_to_space()</a>, <a class="el" href="_topological_sort_8cpp_source.xhtml#l00072">arm_compute::graph::bfs()</a>, <a class="el" href="_blob_memory_pool_8cpp_source.xhtml#l00035">BlobMemoryPool::BlobMemoryPool()</a>, <a class="el" href="reference_2_bounding_box_transform_8cpp_source.xhtml#l00040">arm_compute::test::validation::reference::bounding_box_transform()</a>, <a class="el" href="_sub_tensor_8cpp_source.xhtml#l00053">SubTensor::buffer()</a>, <a class="el" href="_shape_calculator_8h_source.xhtml#l01347">arm_compute::misc::shape_calculator::calculate_concatenate_shape()</a>, <a class="el" href="_scale_utils_8cpp_source.xhtml#l00027">arm_compute::scale_utils::calculate_resize_ratio()</a>, <a class="el" href="src_2core_2_utils_8cpp_source.xhtml#l00357">arm_compute::calculate_same_pad()</a>, <a class="el" href="_shape_calculator_8h_source.xhtml#l01332">arm_compute::misc::shape_calculator::calculate_unstack_shape()</a>, <a class="el" href="_execution_helpers_8cpp_source.xhtml#l00230">arm_compute::graph::detail::call_all_tasks()</a>, <a class="el" href="_execution_helpers_8cpp_source.xhtml#l00187">arm_compute::graph::detail::call_tensor_accessor()</a>, <a class="el" href="_c_l_array_8h_source.xhtml#l00084">CLArray&lt; cl_int &gt;::cl_buffer()</a>, <a class="el" href="_c_l_sub_tensor_8cpp_source.xhtml#l00055">CLSubTensor::cl_buffer()</a>, <a class="el" href="_c_l_multi_h_o_g_8cpp_source.xhtml#l00042">CLMultiHOG::cl_model()</a>, <a class="el" href="core_2_c_l_2_c_l_helpers_8cpp_source.xhtml#l00284">arm_compute::cl_winograd_convolution_layer_supported()</a>, <a class="el" href="_i_distribution_8cpp_source.xhtml#l00032">IDistribution::clear()</a>, <a class="el" href="_lut_8cpp_source.xhtml#l00066">Lut::clear()</a>, <a class="el" href="src_2core_2_sub_tensor_info_8cpp_source.xhtml#l00078">SubTensorInfo::clone()</a>, <a class="el" href="_image_loader_8h_source.xhtml#l00473">JPEGLoader::close()</a>, <a class="el" href="_c_l_q_l_s_t_m_layer_8cpp_source.xhtml#l00097">CLQLSTMLayer::CLQLSTMLayer()</a>, <a class="el" href="_c_l_sub_tensor_8cpp_source.xhtml#l00037">CLSubTensor::CLSubTensor()</a>, <a class="el" href="_c_l_sub_tensor_handle_8cpp_source.xhtml#l00034">CLSubTensorHandle::CLSubTensorHandle()</a>, <a class="el" href="_dimensions_8h_source.xhtml#l00159">Dimensions&lt; size_t &gt;::collapse()</a>, <a class="el" href="_window_8inl_source.xhtml#l00111">Window::collapse()</a>, <a class="el" href="_dimensions_8h_source.xhtml#l00183">Dimensions&lt; size_t &gt;::collapse_from()</a>, <a class="el" href="_n_e_color_convert_helper_8inl_source.xhtml#l00658">arm_compute::colorconvert_iyuv_to_nv12()</a>, <a class="el" href="_n_e_color_convert_helper_8inl_source.xhtml#l00517">arm_compute::colorconvert_iyuv_to_rgb()</a>, <a class="el" href="_n_e_color_convert_helper_8inl_source.xhtml#l00873">arm_compute::colorconvert_iyuv_to_yuv4()</a>, <a class="el" href="_n_e_color_convert_helper_8inl_source.xhtml#l00706">arm_compute::colorconvert_nv12_to_iyuv()</a>, <a class="el" href="_n_e_color_convert_helper_8inl_source.xhtml#l00455">arm_compute::colorconvert_nv12_to_rgb()</a>, <a class="el" href="_n_e_color_convert_helper_8inl_source.xhtml#l00815">arm_compute::colorconvert_nv12_to_yuv4()</a>, <a class="el" href="_n_e_color_convert_helper_8inl_source.xhtml#l00975">arm_compute::colorconvert_rgb_to_iyuv()</a>, <a class="el" href="_n_e_color_convert_helper_8inl_source.xhtml#l00932">arm_compute::colorconvert_rgb_to_nv12()</a>, <a class="el" href="_n_e_color_convert_helper_8inl_source.xhtml#l00321">arm_compute::colorconvert_rgb_to_rgbx()</a>, <a class="el" href="_n_e_color_convert_helper_8inl_source.xhtml#l00352">arm_compute::colorconvert_rgb_to_u8()</a>, <a class="el" href="_n_e_color_convert_helper_8inl_source.xhtml#l01019">arm_compute::colorconvert_rgb_to_yuv4()</a>, <a class="el" href="_n_e_color_convert_helper_8inl_source.xhtml#l00380">arm_compute::colorconvert_rgbx_to_rgb()</a>, <a class="el" href="_n_e_color_convert_helper_8inl_source.xhtml#l00755">arm_compute::colorconvert_yuyv_to_iyuv()</a>, <a class="el" href="_n_e_color_convert_helper_8inl_source.xhtml#l00603">arm_compute::colorconvert_yuyv_to_nv12()</a>, <a class="el" href="_n_e_color_convert_helper_8inl_source.xhtml#l00411">arm_compute::colorconvert_yuyv_to_rgb()</a>, <a class="el" href="_validation_8h_source.xhtml#l00139">arm_compute::test::validation::compare_dimensions()</a>, <a class="el" href="_shape_calculator_8h_source.xhtml#l01065">arm_compute::misc::shape_calculator::compute_batch_to_space_shape()</a>, <a class="el" href="_shape_calculator_8h_source.xhtml#l00395">arm_compute::misc::shape_calculator::compute_col2im_shape()</a>, <a class="el" href="_shape_calculator_8h_source.xhtml#l01090">arm_compute::misc::shape_calculator::compute_depth_to_space_shape()</a>, <a class="el" href="_shape_calculator_8h_source.xhtml#l01411">arm_compute::misc::shape_calculator::compute_gather_shape()</a>, <a class="el" href="_shape_calculator_8h_source.xhtml#l00549">arm_compute::misc::shape_calculator::compute_im2col_conv_shape()</a>, <a class="el" href="_shape_calculator_8h_source.xhtml#l00260">arm_compute::misc::shape_calculator::compute_interleaved_shape()</a>, <a class="el" href="_shape_calculator_8h_source.xhtml#l00180">arm_compute::misc::shape_calculator::compute_lhs_reshaped_shape()</a>, <a class="el" href="reference_2_min_max_location_8cpp_source.xhtml#l00035">arm_compute::test::validation::reference::compute_min_max()</a>, <a class="el" href="_stack_layer_node_8cpp_source.xhtml#l00050">StackLayerNode::compute_output_descriptor()</a>, <a class="el" href="_concatenate_layer_node_8cpp_source.xhtml#l00064">ConcatenateLayerNode::compute_output_descriptor()</a>, <a class="el" href="_reorg_layer_node_8cpp_source.xhtml#l00046">ReorgLayerNode::compute_output_descriptor()</a>, <a class="el" href="_shape_calculator_8h_source.xhtml#l01001">arm_compute::misc::shape_calculator::compute_output_stage_shape()</a>, <a class="el" href="_shape_calculator_8h_source.xhtml#l00122">arm_compute::misc::shape_calculator::compute_reorg_output_shape()</a>, <a class="el" href="_shape_calculator_8h_source.xhtml#l00224">arm_compute::misc::shape_calculator::compute_rhs_reshaped_shape()</a>, <a class="el" href="_shape_calculator_8h_source.xhtml#l01149">arm_compute::misc::shape_calculator::compute_space_to_batch_shape()</a>, <a class="el" href="_shape_calculator_8h_source.xhtml#l01389">arm_compute::misc::shape_calculator::compute_stack_shape()</a>, <a class="el" href="_shape_calculator_8h_source.xhtml#l00337">arm_compute::misc::shape_calculator::compute_transpose1xW_with_element_size_shape()</a>, <a class="el" href="_shape_calculator_8h_source.xhtml#l00819">arm_compute::misc::shape_calculator::compute_unpool_shape()</a>, <a class="el" href="_shape_calculator_8h_source.xhtml#l00149">arm_compute::misc::shape_calculator::compute_weights_reshaped_shape()</a>, <a class="el" href="_g_c_scale_kernel_8cpp_source.xhtml#l00050">GCScaleKernel::configure()</a>, <a class="el" href="_cl_floor_kernel_8cpp_source.xhtml#l00064">ClFloorKernel::configure()</a>, <a class="el" href="_cl_reshape_kernel_8cpp_source.xhtml#l00064">ClReshapeKernel::configure()</a>, <a class="el" href="_cl_copy_kernel_8cpp_source.xhtml#l00071">ClCopyKernel::configure()</a>, <a class="el" href="_cl_elementwise_unary_kernel_8cpp_source.xhtml#l00065">ClElementWiseUnaryKernel::configure()</a>, <a class="el" href="_g_c_g_e_m_m_matrix_accumulate_biases_kernel_8cpp_source.xhtml#l00047">GCGEMMMatrixAccumulateBiasesKernel::configure()</a>, <a class="el" href="_c_l_table_lookup_kernel_8cpp_source.xhtml#l00044">CLTableLookupKernel::configure()</a>, <a class="el" href="_cl_activation_kernel_8cpp_source.xhtml#l00095">ClActivationKernel::configure()</a>, <a class="el" href="_cl_width_concatenate2_tensors_kernel_8cpp_source.xhtml#l00071">ClWidthConcatenate2TensorsKernel::configure()</a>, <a class="el" href="_c_l_strided_slice_kernel_8cpp_source.xhtml#l00090">CLStridedSliceKernel::configure()</a>, <a class="el" href="_c_l_transpose_kernel_8cpp_source.xhtml#l00084">CLTransposeKernel::configure()</a>, <a class="el" href="_c_l_warp_perspective_kernel_8cpp_source.xhtml#l00067">CLWarpPerspectiveKernel::configure()</a>, <a class="el" href="_cl_height_concatenate_kernel_8cpp_source.xhtml#l00075">ClHeightConcatenateKernel::configure()</a>, <a class="el" href="_cl_pooling_kernel_8cpp_source.xhtml#l00208">ClPoolingKernel::configure()</a>, <a class="el" href="_cl_width_concatenate_kernel_8cpp_source.xhtml#l00074">ClWidthConcatenateKernel::configure()</a>, <a class="el" href="_c_l_scale_kernel_8cpp_source.xhtml#l00164">CLScaleKernel::configure()</a>, <a class="el" href="_cl_width_concatenate4_tensors_kernel_8cpp_source.xhtml#l00077">ClWidthConcatenate4TensorsKernel::configure()</a>, <a class="el" href="_c_l_warp_affine_kernel_8cpp_source.xhtml#l00068">CLWarpAffineKernel::configure()</a>, <a class="el" href="_cl_batch_concatenate_kernel_8cpp_source.xhtml#l00067">ClBatchConcatenateKernel::configure()</a>, <a class="el" href="_cl_depth_concatenate_kernel_8cpp_source.xhtml#l00066">ClDepthConcatenateKernel::configure()</a>, <a class="el" href="_g_c_depthwise_convolution_layer3x3_kernel_8cpp_source.xhtml#l00054">GCDepthwiseConvolutionLayer3x3Kernel::configure()</a>, <a class="el" href="_cpu_concatenate_8cpp_source.xhtml#l00050">CpuConcatenate::configure()</a>, <a class="el" href="_g_c_fill_border_kernel_8cpp_source.xhtml#l00063">GCFillBorderKernel::configure()</a>, <a class="el" href="_g_c_g_e_m_m_matrix_addition_kernel_8cpp_source.xhtml#l00046">GCGEMMMatrixAdditionKernel::configure()</a>, <a class="el" href="_n_e_gaussian_pyramid_kernel_8cpp_source.xhtml#l00055">NEGaussianPyramidHorKernel::configure()</a>, <a class="el" href="_g_c_concatenate_layer_8cpp_source.xhtml#l00043">GCConcatenateLayer::configure()</a>, <a class="el" href="_n_e_table_lookup_kernel_8cpp_source.xhtml#l00109">NETableLookupKernel::configure()</a>, <a class="el" href="_c_p_p_sort_euclidean_distance_kernel_8cpp_source.xhtml#l00052">CPPSortEuclideanDistanceKernel::configure()</a>, <a class="el" href="_c_l_dequantization_layer_kernel_8cpp_source.xhtml#l00068">CLDequantizationLayerKernel::configure()</a>, <a class="el" href="_cl_concatenate_8cpp_source.xhtml#l00052">ClConcatenate::configure()</a>, <a class="el" href="_c_l_bitwise_kernel_8cpp_source.xhtml#l00042">CLBitwiseKernel::configure()</a>, <a class="el" href="_cpu_pooling_assembly_dispatch_8cpp_source.xhtml#l00044">CpuPoolingAssemblyDispatch::configure()</a>, <a class="el" href="_c_l_gaussian_pyramid_kernel_8cpp_source.xhtml#l00051">CLGaussianPyramidHorKernel::configure()</a>, <a class="el" href="_n_e_q_l_s_t_m_layer_normalization_kernel_8cpp_source.xhtml#l00084">NEQLSTMLayerNormalizationKernel::configure()</a>, <a class="el" href="_c_l_max_unpooling_layer_kernel_8cpp_source.xhtml#l00080">CLMaxUnpoolingLayerKernel::configure()</a>, <a class="el" href="_g_c_direct_convolution_layer_kernel_8cpp_source.xhtml#l00055">GCDirectConvolutionLayerKernel&lt; kernel_size &gt;::configure()</a>, <a class="el" href="_g_c_depth_concatenate_layer_kernel_8cpp_source.xhtml#l00046">GCDepthConcatenateLayerKernel::configure()</a>, <a class="el" href="_g_c_convolution_layer_8cpp_source.xhtml#l00043">GCConvolutionLayerReshapeWeights::configure()</a>, <a class="el" href="_g_c_depthwise_convolution_layer_8cpp_source.xhtml#l00037">GCDepthwiseConvolutionLayer3x3::configure()</a>, <a class="el" href="_g_c_normalization_layer_8cpp_source.xhtml#l00041">GCNormalizationLayer::configure()</a>, <a class="el" href="_n_e_channel_extract_kernel_8cpp_source.xhtml#l00054">NEChannelExtractKernel::configure()</a>, <a class="el" href="_n_e_h_o_g_descriptor_kernel_8cpp_source.xhtml#l00634">NEHOGOrientationBinningKernel::configure()</a>, <a class="el" href="_c_l_histogram_kernel_8cpp_source.xhtml#l00057">CLHistogramKernel::configure()</a>, <a class="el" href="_c_l_select_kernel_8cpp_source.xhtml#l00070">CLSelectKernel::configure()</a>, <a class="el" href="_c_l_reverse_kernel_8cpp_source.xhtml#l00071">CLReverseKernel::configure()</a>, <a class="el" href="_cl_permute_kernel_8cpp_source.xhtml#l00085">ClPermuteKernel::configure()</a>, <a class="el" href="_c_l_batch_to_space_layer_kernel_8cpp_source.xhtml#l00093">CLBatchToSpaceLayerKernel::configure()</a>, <a class="el" href="_c_l_depth_to_space_layer_kernel_8cpp_source.xhtml#l00075">CLDepthToSpaceLayerKernel::configure()</a>, <a class="el" href="_g_c_softmax_layer_8cpp_source.xhtml#l00037">GCSoftmaxLayer::configure()</a>, <a class="el" href="_n_e_derivative_kernel_8cpp_source.xhtml#l00056">NEDerivativeKernel::configure()</a>, <a class="el" href="_c_l_min_max_location_kernel_8cpp_source.xhtml#l00069">CLMinMaxKernel::configure()</a>, <a class="el" href="_c_l_space_to_depth_layer_kernel_8cpp_source.xhtml#l00076">CLSpaceToDepthLayerKernel::configure()</a>, <a class="el" href="_c_l_deconvolution_layer_upsample_kernel_8cpp_source.xhtml#l00075">CLDeconvolutionLayerUpsampleKernel::configure()</a>, <a class="el" href="_n_e_fill_array_kernel_8cpp_source.xhtml#l00040">NEFillArrayKernel::configure()</a>, <a class="el" href="_c_l_generate_proposals_layer_kernel_8cpp_source.xhtml#l00080">CLComputeAllAnchorsKernel::configure()</a>, <a class="el" href="_n_e_magnitude_phase_kernel_8cpp_source.xhtml#l00252">NEMagnitudePhaseKernel&lt; mag_type, phase_type &gt;::configure()</a>, <a class="el" href="_n_e_min_max_location_kernel_8cpp_source.xhtml#l00051">NEMinMaxKernel::configure()</a>, <a class="el" href="_n_e_sobel5x5_kernel_8cpp_source.xhtml#l00052">NESobel5x5HorKernel::configure()</a>, <a class="el" href="_n_e_sobel7x7_kernel_8cpp_source.xhtml#l00155">NESobel7x7HorKernel::configure()</a>, <a class="el" href="_c_l_gather_kernel_8cpp_source.xhtml#l00086">CLGatherKernel::configure()</a>, <a class="el" href="_n_e_concatenate_layer_8cpp_source.xhtml#l00056">NEConcatenateLayer::configure()</a>, <a class="el" href="_n_e_histogram_8cpp_source.xhtml#l00043">NEHistogram::configure()</a>, <a class="el" href="_c_l_f_f_t_scale_kernel_8cpp_source.xhtml#l00084">CLFFTScaleKernel::configure()</a>, <a class="el" href="_n_e_mean_std_dev_kernel_8cpp_source.xhtml#l00099">NEMeanStdDevKernel::configure()</a>, <a class="el" href="_n_e_non_linear_filter_kernel_8cpp_source.xhtml#l00355">NENonLinearFilterKernel::configure()</a>, <a class="el" href="_c_l_non_linear_filter_kernel_8cpp_source.xhtml#l00062">CLNonLinearFilterKernel::configure()</a>, <a class="el" href="_c_l_q_l_s_t_m_layer_normalization_kernel_8cpp_source.xhtml#l00088">CLQLSTMLayerNormalizationKernel::configure()</a>, <a class="el" href="_c_l_space_to_batch_layer_kernel_8cpp_source.xhtml#l00094">CLSpaceToBatchLayerKernel::configure()</a>, <a class="el" href="_c_p_p_box_with_non_maxima_suppression_limit_kernel_8cpp_source.xhtml#l00349">CPPBoxWithNonMaximaSuppressionLimitKernel::configure()</a>, <a class="el" href="_c_p_p_detection_window_non_maxima_suppression_kernel_8cpp_source.xhtml#l00070">CPPDetectionWindowNonMaximaSuppressionKernel::configure()</a>, <a class="el" href="_n_e_channel_combine_kernel_8cpp_source.xhtml#l00054">NEChannelCombineKernel::configure()</a>, <a class="el" href="_n_e_h_o_g_detector_kernel_8cpp_source.xhtml#l00044">NEHOGDetectorKernel::configure()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_quantize_down_int32_scale_by_fixed_point_kernel_8cpp_source.xhtml#l00080">CLGEMMLowpQuantizeDownInt32ScaleByFixedPointKernel::configure()</a>, <a class="el" href="_c_l_channel_extract_kernel_8cpp_source.xhtml#l00054">CLChannelExtractKernel::configure()</a>, <a class="el" href="_c_l_f_f_t_digit_reverse_kernel_8cpp_source.xhtml#l00081">CLFFTDigitReverseKernel::configure()</a>, <a class="el" href="_n_e_gather_kernel_8cpp_source.xhtml#l00135">NEGatherKernel::configure()</a>, <a class="el" href="_c_l_h_o_g_descriptor_kernel_8cpp_source.xhtml#l00052">CLHOGOrientationBinningKernel::configure()</a>, <a class="el" href="_c_l_l_k_tracker_kernel_8cpp_source.xhtml#l00047">CLLKTrackerInitKernel::configure()</a>, <a class="el" href="_c_l_quantization_layer_kernel_8cpp_source.xhtml#l00067">CLQuantizationLayerKernel::configure()</a>, <a class="el" href="_c_l_reorg_layer_kernel_8cpp_source.xhtml#l00078">CLReorgLayerKernel::configure()</a>, <a class="el" href="_c_p_p_corner_candidates_kernel_8cpp_source.xhtml#l00068">CPPCornerCandidatesKernel::configure()</a>, <a class="el" href="_c_l_derivative_kernel_8cpp_source.xhtml#l00054">CLDerivativeKernel::configure()</a>, <a class="el" href="_n_e_r_o_i_pooling_layer_kernel_8cpp_source.xhtml#l00043">NEROIPoolingLayerKernel::configure()</a>, <a class="el" href="_c_l_instance_normalization_layer_kernel_8cpp_source.xhtml#l00084">CLInstanceNormalizationLayerKernel::configure()</a>, <a class="el" href="_c_l_sobel3x3_kernel_8cpp_source.xhtml#l00054">CLSobel3x3Kernel::configure()</a>, <a class="el" href="_c_l_color_convert_kernel_8cpp_source.xhtml#l00052">CLColorConvertKernel::configure()</a>, <a class="el" href="_n_e_cumulative_distribution_kernel_8cpp_source.xhtml#l00052">NECumulativeDistributionKernel::configure()</a>, <a class="el" href="_c_l_range_kernel_8cpp_source.xhtml#l00078">CLRangeKernel::configure()</a>, <a class="el" href="_c_l_sobel5x5_kernel_8cpp_source.xhtml#l00054">CLSobel5x5HorKernel::configure()</a>, <a class="el" href="_c_l_sobel7x7_kernel_8cpp_source.xhtml#l00054">CLSobel7x7HorKernel::configure()</a>, <a class="el" href="_n_e_f_f_t1_d_8cpp_source.xhtml#l00043">NEFFT1D::configure()</a>, <a class="el" href="_c_l_mean_std_dev_kernel_8cpp_source.xhtml#l00069">CLMeanStdDevKernel::configure()</a>, <a class="el" href="_c_l_pad_layer_kernel_8cpp_source.xhtml#l00077">CLPadLayerKernel::configure()</a>, <a class="el" href="_c_l_convert_fully_connected_weights_kernel_8cpp_source.xhtml#l00048">CLConvertFullyConnectedWeightsKernel::configure()</a>, <a class="el" href="_n_e_derivative_8cpp_source.xhtml#l00042">NEDerivative::configure()</a>, <a class="el" href="_c_l_f_f_t_radix_stage_kernel_8cpp_source.xhtml#l00092">CLFFTRadixStageKernel::configure()</a>, <a class="el" href="_n_e_sobel3x3_kernel_8cpp_source.xhtml#l00050">NESobel3x3Kernel::configure()</a>, <a class="el" href="_n_e_scharr3x3_kernel_8cpp_source.xhtml#l00092">NEScharr3x3Kernel::configure()</a>, <a class="el" href="_c_l_convolution_kernel_8cpp_source.xhtml#l00067">CLConvolutionKernel&lt; matrix_size &gt;::configure()</a>, <a class="el" href="_cpu_pooling_8cpp_source.xhtml#l00043">CpuPooling::configure()</a>, <a class="el" href="_n_e_histogram_kernel_8cpp_source.xhtml#l00194">NEHistogramKernel::configure()</a>, <a class="el" href="_c_l_bounding_box_transform_kernel_8cpp_source.xhtml#l00097">CLBoundingBoxTransformKernel::configure()</a>, <a class="el" href="_n_e_h_o_g_descriptor_8cpp_source.xhtml#l00044">NEHOGDescriptor::configure()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_matrix_multiply_native_kernel_8cpp_source.xhtml#l00167">CLGEMMLowpMatrixMultiplyNativeKernel::configure()</a>, <a class="el" href="_c_l_magnitude_phase_kernel_8cpp_source.xhtml#l00052">CLMagnitudePhaseKernel::configure()</a>, <a class="el" href="_c_l_f_f_t1_d_8cpp_source.xhtml#l00055">CLFFT1D::configure()</a>, <a class="el" href="_n_e_g_e_m_m_interleave4x4_kernel_8cpp_source.xhtml#l00073">NEGEMMInterleave4x4Kernel::configure()</a>, <a class="el" href="_c_l_fill_border_kernel_8cpp_source.xhtml#l00068">CLFillBorderKernel::configure()</a>, <a class="el" href="_c_l_depth_convert_layer_kernel_8cpp_source.xhtml#l00081">CLDepthConvertLayerKernel::configure()</a>, <a class="el" href="_n_e_fill_border_kernel_8cpp_source.xhtml#l00103">NEFillBorderKernel::configure()</a>, <a class="el" href="_c_l_g_e_m_m_reshape_l_h_s_matrix_kernel_8cpp_source.xhtml#l00121">CLGEMMReshapeLHSMatrixKernel::configure()</a>, <a class="el" href="_g_c_weights_reshape_kernel_8cpp_source.xhtml#l00049">GCWeightsReshapeKernel::configure()</a>, <a class="el" href="_c_l_arg_min_max_layer_kernel_8cpp_source.xhtml#l00079">CLArgMinMaxLayerKernel::configure()</a>, <a class="el" href="_n_e_fast_corners_8cpp_source.xhtml#l00055">NEFastCorners::configure()</a>, <a class="el" href="_c_l_depthwise_convolution_layer3x3_n_h_w_c_kernel_8cpp_source.xhtml#l00202">CLDepthwiseConvolutionLayer3x3NHWCKernel::configure()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_quantize_down_int32_scale_kernel_8cpp_source.xhtml#l00084">CLGEMMLowpQuantizeDownInt32ScaleKernel::configure()</a>, <a class="el" href="_c_l_r_o_i_pooling_layer_kernel_8cpp_source.xhtml#l00080">CLROIPoolingLayerKernel::configure()</a>, <a class="el" href="_c_l_h_o_g_descriptor_8cpp_source.xhtml#l00055">CLHOGDescriptor::configure()</a>, <a class="el" href="_n_e_color_convert_kernel_8cpp_source.xhtml#l00429">NEColorConvertKernel::configure()</a>, <a class="el" href="_c_l_normalization_layer_8cpp_source.xhtml#l00051">CLNormalizationLayer::configure()</a>, <a class="el" href="_c_l_deconvolution_reshape_output_kernel_8cpp_source.xhtml#l00124">CLDeconvolutionReshapeOutputKernel::configure()</a>, <a class="el" href="_n_e_convolution_kernel_8cpp_source.xhtml#l00326">NEConvolutionKernel&lt; matrix_size &gt;::configure()</a>, <a class="el" href="_c_l_harris_corners_kernel_8cpp_source.xhtml#l00061">CLHarrisScoreKernel::configure()</a>, <a class="el" href="_c_l_r_o_i_align_layer_kernel_8cpp_source.xhtml#l00091">CLROIAlignLayerKernel::configure()</a>, <a class="el" href="_n_e_direct_convolution_layer_8cpp_source.xhtml#l00044">NEDirectConvolutionLayer::configure()</a>, <a class="el" href="_n_e_laplacian_pyramid_8cpp_source.xhtml#l00075">NELaplacianPyramid::configure()</a>, <a class="el" href="_c_l_h_o_g_detector_kernel_8cpp_source.xhtml#l00049">CLHOGDetectorKernel::configure()</a>, <a class="el" href="_c_l_scharr3x3_kernel_8cpp_source.xhtml#l00053">CLScharr3x3Kernel::configure()</a>, <a class="el" href="_c_l_winograd_input_transform_kernel_8cpp_source.xhtml#l00113">CLWinogradInputTransformKernel::configure()</a>, <a class="el" href="_c_l_accumulate_kernel_8cpp_source.xhtml#l00063">CLAccumulateWeightedKernel::configure()</a>, <a class="el" href="_c_l_batch_normalization_layer_kernel_8cpp_source.xhtml#l00120">CLBatchNormalizationLayerKernel::configure()</a>, <a class="el" href="_c_l_fuse_batch_normalization_kernel_8cpp_source.xhtml#l00116">CLFuseBatchNormalizationKernel::configure()</a>, <a class="el" href="_n_e_canny_edge_8cpp_source.xhtml#l00065">NECannyEdge::configure()</a>, <a class="el" href="_c_l_g_e_m_m_matrix_multiply_native_kernel_8cpp_source.xhtml#l00213">CLGEMMMatrixMultiplyNativeKernel::configure()</a>, <a class="el" href="_c_l_winograd_filter_transform_kernel_8cpp_source.xhtml#l00102">CLWinogradFilterTransformKernel::configure()</a>, <a class="el" href="_c_l_laplacian_pyramid_8cpp_source.xhtml#l00057">CLLaplacianPyramid::configure()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_matrix_multiply_reshaped_kernel_8cpp_source.xhtml#l00141">CLGEMMLowpMatrixMultiplyReshapedKernel::configure()</a>, <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8cpp_source.xhtml#l00281">CLGEMMMatrixMultiplyKernel::configure()</a>, <a class="el" href="_c_l_concatenate_layer_8cpp_source.xhtml#l00057">CLConcatenateLayer::configure()</a>, <a class="el" href="_n_e_optical_flow_8cpp_source.xhtml#l00057">NEOpticalFlow::configure()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_offset_contribution_kernel_8cpp_source.xhtml#l00108">CLGEMMLowpOffsetContributionKernel::configure()</a>, <a class="el" href="_c_l_winograd_output_transform_kernel_8cpp_source.xhtml#l00132">CLWinogradOutputTransformKernel::configure()</a>, <a class="el" href="_c_l_fast_corners_8cpp_source.xhtml#l00064">CLFastCorners::configure()</a>, <a class="el" href="_c_l_depthwise_convolution_layer_native_kernel_8cpp_source.xhtml#l00147">CLDepthwiseConvolutionLayerNativeKernel::configure()</a>, <a class="el" href="_c_l_canny_edge_8cpp_source.xhtml#l00069">CLCannyEdge::configure()</a>, <a class="el" href="_c_l_min_max_location_8cpp_source.xhtml#l00051">CLMinMaxLocation::configure()</a>, <a class="el" href="_g_c_fully_connected_layer_8cpp_source.xhtml#l00081">GCFullyConnectedLayer::configure()</a>, <a class="el" href="_n_e_g_e_m_m_8cpp_source.xhtml#l00072">NEGEMM::configure()</a>, <a class="el" href="_n_e_laplacian_reconstruct_8cpp_source.xhtml#l00047">NELaplacianReconstruct::configure()</a>, <a class="el" href="_c_l_l_k_tracker_kernel_8cpp_source.xhtml#l00100">CLLKTrackerFinalizeKernel::configure()</a>, <a class="el" href="_n_e_harris_corners_kernel_8cpp_source.xhtml#l00738">NEHarrisScoreKernel&lt; block_size &gt;::configure()</a>, <a class="el" href="_n_e_h_o_g_multi_detection_8cpp_source.xhtml#l00058">NEHOGMultiDetection::configure()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_offset_contribution_output_stage_kernel_8cpp_source.xhtml#l00140">CLGEMMLowpOffsetContributionOutputStageKernel::configure()</a>, <a class="el" href="_n_e_harris_corners_8cpp_source.xhtml#l00066">NEHarrisCorners::configure()</a>, <a class="el" href="_n_e_gaussian_pyramid_kernel_8cpp_source.xhtml#l00163">NEGaussianPyramidVertKernel::configure()</a>, <a class="el" href="_c_l_weights_reshape_kernel_8cpp_source.xhtml#l00079">CLWeightsReshapeKernel::configure()</a>, <a class="el" href="_c_l_laplacian_reconstruct_8cpp_source.xhtml#l00051">CLLaplacianReconstruct::configure()</a>, <a class="el" href="_c_l_im2_col_kernel_8cpp_source.xhtml#l00313">CLIm2ColKernel::configure()</a>, <a class="el" href="_c_l_gaussian_pyramid_kernel_8cpp_source.xhtml#l00162">CLGaussianPyramidVertKernel::configure()</a>, <a class="el" href="_c_l_histogram_kernel_8cpp_source.xhtml#l00167">CLHistogramBorderKernel::configure()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_matrix_multiply_reshaped_only_r_h_s_kernel_8cpp_source.xhtml#l00303">CLGEMMLowpMatrixMultiplyReshapedOnlyRHSKernel::configure()</a>, <a class="el" href="_c_l_harris_corners_8cpp_source.xhtml#l00074">CLHarrisCorners::configure()</a>, <a class="el" href="_n_e_accumulate_kernel_8cpp_source.xhtml#l00283">NEAccumulateWeightedKernel::configure()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_reduction_kernel_8cpp_source.xhtml#l00075">CLGEMMLowpMatrixAReductionKernel::configure()</a>, <a class="el" href="_n_e_gaussian_pyramid_8cpp_source.xhtml#l00059">NEGaussianPyramidHalf::configure()</a>, <a class="el" href="_c_l_accumulate_kernel_8cpp_source.xhtml#l00085">CLAccumulateSquaredKernel::configure()</a>, <a class="el" href="_c_l_gaussian_pyramid_8cpp_source.xhtml#l00068">CLGaussianPyramidHalf::configure()</a>, <a class="el" href="_n_e_sobel5x5_kernel_8cpp_source.xhtml#l00219">NESobel5x5VertKernel::configure()</a>, <a class="el" href="_c_l_h_o_g_descriptor_kernel_8cpp_source.xhtml#l00148">CLHOGBlockNormalizationKernel::configure()</a>, <a class="el" href="_g_c_convolution_layer_8cpp_source.xhtml#l00089">GCConvolutionLayer::configure()</a>, <a class="el" href="_c_l_g_e_m_m_matrix_multiply_reshaped_only_r_h_s_kernel_8cpp_source.xhtml#l00198">CLGEMMMatrixMultiplyReshapedOnlyRHSKernel::configure()</a>, <a class="el" href="_c_l_h_o_g_multi_detection_8cpp_source.xhtml#l00068">CLHOGMultiDetection::configure()</a>, <a class="el" href="_c_l_min_max_location_kernel_8cpp_source.xhtml#l00181">CLMinMaxLocationKernel::configure()</a>, <a class="el" href="_c_l_direct_deconvolution_layer_8cpp_source.xhtml#l00116">CLDirectDeconvolutionLayer::configure()</a>, <a class="el" href="_c_l_convolution_kernel_8cpp_source.xhtml#l00143">CLSeparableConvolutionHorKernel&lt; matrix_size &gt;::configure()</a>, <a class="el" href="_n_e_sobel7x7_kernel_8cpp_source.xhtml#l00309">NESobel7x7VertKernel::configure()</a>, <a class="el" href="_n_e_convolution_8cpp_source.xhtml#l00066">NEConvolutionSquare&lt; matrix_size &gt;::configure()</a>, <a class="el" href="_c_l_optical_flow_8cpp_source.xhtml#l00071">CLOpticalFlow::configure()</a>, <a class="el" href="_n_e_h_o_g_descriptor_kernel_8cpp_source.xhtml#l00716">NEHOGBlockNormalizationKernel::configure()</a>, <a class="el" href="_c_l_fast_corners_kernel_8cpp_source.xhtml#l00142">CLCopyToArrayKernel::configure()</a>, <a class="el" href="_c_l_sobel5x5_kernel_8cpp_source.xhtml#l00157">CLSobel5x5VertKernel::configure()</a>, <a class="el" href="_c_l_sobel7x7_kernel_8cpp_source.xhtml#l00159">CLSobel7x7VertKernel::configure()</a>, <a class="el" href="_c_l_convolution_8cpp_source.xhtml#l00073">CLConvolutionSquare&lt; matrix_size &gt;::configure()</a>, <a class="el" href="_c_l_convolution_layer_8cpp_source.xhtml#l00054">CLConvolutionLayer::configure()</a>, <a class="el" href="_c_l_gaussian_pyramid_8cpp_source.xhtml#l00157">CLGaussianPyramidOrb::configure()</a>, <a class="el" href="_n_e_min_max_location_kernel_8cpp_source.xhtml#l00337">NEMinMaxLocationKernel::configure()</a>, <a class="el" href="_c_l_softmax_layer_kernel_8cpp_source.xhtml#l00292">CLLogits1DNormKernel::configure()</a>, <a class="el" href="_c_l_l_k_tracker_kernel_8cpp_source.xhtml#l00142">CLLKTrackerStage0Kernel::configure()</a>, <a class="el" href="_n_e_gaussian_pyramid_8cpp_source.xhtml#l00147">NEGaussianPyramidOrb::configure()</a>, <a class="el" href="_cl_elementwise_kernel_8cpp_source.xhtml#l00392">ClSaturatedArithmeticKernel::configure()</a>, <a class="el" href="_c_l_convolution_kernel_8cpp_source.xhtml#l00219">CLSeparableConvolutionVertKernel&lt; matrix_size &gt;::configure()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_reduction_kernel_8cpp_source.xhtml#l00156">CLGEMMLowpMatrixBReductionKernel::configure()</a>, <a class="el" href="_n_e_accumulate_kernel_8cpp_source.xhtml#l00326">NEAccumulateSquaredKernel::configure()</a>, <a class="el" href="_cl_elementwise_kernel_8cpp_source.xhtml#l00446">ClArithmeticKernel::configure()</a>, <a class="el" href="_n_e_convolution_kernel_8cpp_source.xhtml#l01105">NESeparableConvolutionVertKernel&lt; matrix_size &gt;::configure()</a>, <a class="el" href="_c_l_l_k_tracker_kernel_8cpp_source.xhtml#l00238">CLLKTrackerStage1Kernel::configure()</a>, <a class="el" href="_c_l_convolution_kernel_8cpp_source.xhtml#l00306">CLConvolutionRectangleKernel::configure()</a>, <a class="el" href="_n_e_convolution_kernel_8cpp_source.xhtml#l01429">NEConvolutionRectangleKernel::configure()</a>, <a class="el" href="_c_l_g_e_m_m_helpers_8cpp_source.xhtml#l00040">arm_compute::cl_gemm::configure_lhs_rhs_info()</a>, <a class="el" href="_n_e_device_backend_8cpp_source.xhtml#l00139">NEDeviceBackend::configure_node()</a>, <a class="el" href="_g_c_device_backend_8cpp_source.xhtml#l00125">GCDeviceBackend::configure_node()</a>, <a class="el" href="_c_l_device_backend_8cpp_source.xhtml#l00187">CLDeviceBackend::configure_node()</a>, <a class="el" href="_normalize_planar_y_u_v_layer_node_8cpp_source.xhtml#l00052">NormalizePlanarYUVLayerNode::configure_output()</a>, <a class="el" href="_p_relu_layer_node_8cpp_source.xhtml#l00051">PReluLayerNode::configure_output()</a>, <a class="el" href="_flatten_layer_node_8cpp_source.xhtml#l00051">FlattenLayerNode::configure_output()</a>, <a class="el" href="src_2graph_2nodes_2_reshape_layer_8cpp_source.xhtml#l00052">ReshapeLayerNode::configure_output()</a>, <a class="el" href="_dequantization_layer_node_8cpp_source.xhtml#l00053">DequantizationLayerNode::configure_output()</a>, <a class="el" href="_normalization_layer_node_8cpp_source.xhtml#l00058">NormalizationLayerNode::configure_output()</a>, <a class="el" href="_softmax_layer_node_8cpp_source.xhtml#l00058">SoftmaxLayerNode::configure_output()</a>, <a class="el" href="_channel_shuffle_layer_node_8cpp_source.xhtml#l00057">ChannelShuffleLayerNode::configure_output()</a>, <a class="el" href="_detection_post_process_layer_node_8cpp_source.xhtml#l00063">DetectionPostProcessLayerNode::configure_output()</a>, <a class="el" href="_bounding_box_transform_layer_node_8cpp_source.xhtml#l00059">BoundingBoxTransformLayerNode::configure_output()</a>, <a class="el" href="_generate_proposals_layer_node_8cpp_source.xhtml#l00063">GenerateProposalsLayerNode::configure_output()</a>, <a class="el" href="_permute_layer_node_8cpp_source.xhtml#l00059">PermuteLayerNode::configure_output()</a>, <a class="el" href="_quantization_layer_node_8cpp_source.xhtml#l00059">QuantizationLayerNode::configure_output()</a>, <a class="el" href="_resize_layer_node_8cpp_source.xhtml#l00063">ResizeLayerNode::configure_output()</a>, <a class="el" href="_activation_layer_node_8cpp_source.xhtml#l00057">ActivationLayerNode::configure_output()</a>, <a class="el" href="_dummy_node_8cpp_source.xhtml#l00054">DummyNode::configure_output()</a>, <a class="el" href="_pad_layer_node_8cpp_source.xhtml#l00064">PadLayerNode::configure_output()</a>, <a class="el" href="_reduction_layer_node_8cpp_source.xhtml#l00069">ReductionLayerNode::configure_output()</a>, <a class="el" href="_r_o_i_align_layer_node_8cpp_source.xhtml#l00060">ROIAlignLayerNode::configure_output()</a>, <a class="el" href="_depth_to_space_layer_node_8cpp_source.xhtml#l00073">DepthToSpaceLayerNode::configure_output()</a>, <a class="el" href="_pooling_layer_node_8cpp_source.xhtml#l00080">PoolingLayerNode::configure_output()</a>, <a class="el" href="_prior_box_layer_node_8cpp_source.xhtml#l00074">PriorBoxLayerNode::configure_output()</a>, <a class="el" href="_reorg_layer_node_8cpp_source.xhtml#l00077">ReorgLayerNode::configure_output()</a>, <a class="el" href="_detection_output_layer_node_8cpp_source.xhtml#l00071">DetectionOutputLayerNode::configure_output()</a>, <a class="el" href="_stack_layer_node_8cpp_source.xhtml#l00077">StackLayerNode::configure_output()</a>, <a class="el" href="_batch_normalization_layer_node_8cpp_source.xhtml#l00068">BatchNormalizationLayerNode::configure_output()</a>, <a class="el" href="_deconvolution_layer_node_8cpp_source.xhtml#l00082">DeconvolutionLayerNode::configure_output()</a>, <a class="el" href="_arg_min_max_layer_node_8cpp_source.xhtml#l00069">ArgMinMaxLayerNode::configure_output()</a>, <a class="el" href="_print_layer_node_8cpp_source.xhtml#l00069">PrintLayerNode::configure_output()</a>, <a class="el" href="_slice_layer_node_8cpp_source.xhtml#l00075">SliceLayerNode::configure_output()</a>, <a class="el" href="_l2_normalize_layer_node_8cpp_source.xhtml#l00062">L2NormalizeLayerNode::configure_output()</a>, <a class="el" href="_split_layer_node_8cpp_source.xhtml#l00104">SplitLayerNode::configure_output()</a>, <a class="el" href="_concatenate_layer_node_8cpp_source.xhtml#l00098">ConcatenateLayerNode::configure_output()</a>, <a class="el" href="_eltwise_layer_node_8cpp_source.xhtml#l00083">EltwiseLayerNode::configure_output()</a>, <a class="el" href="_strided_slice_layer_node_8cpp_source.xhtml#l00092">StridedSliceLayerNode::configure_output()</a>, <a class="el" href="src_2graph_2nodes_2_fully_connected_layer_8cpp_source.xhtml#l00122">FullyConnectedLayerNode::configure_output()</a>, <a class="el" href="_depthwise_convolution_layer_node_8cpp_source.xhtml#l00110">DepthwiseConvolutionLayerNode::configure_output()</a>, <a class="el" href="_convolution_layer_node_8cpp_source.xhtml#l00121">ConvolutionLayerNode::configure_output()</a>, <a class="el" href="_eltwise_layer_node_8cpp_source.xhtml#l00147">UnaryEltwiseLayerNode::configure_output()</a>, <a class="el" href="_fused_depthwise_convolution_batch_normalization_node_8cpp_source.xhtml#l00117">FusedDepthwiseConvolutionBatchNormalizationNode::configure_output()</a>, <a class="el" href="_fused_convolution_batch_normalization_node_8cpp_source.xhtml#l00126">FusedConvolutionBatchNormalizationNode::configure_output()</a>, <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00034">CLScheduler::context()</a>, <a class="el" href="tests_2instruments_2_helpers_8h_source.xhtml#l00041">ContextSchedulerUser::ContextSchedulerUser()</a>, <a class="el" href="reference_2_convolution_8cpp_source.xhtml#l00038">arm_compute::test::validation::reference::convolution()</a>, <a class="el" href="reference_2_convolution_layer_8cpp_source.xhtml#l00045">arm_compute::test::validation::reference::convolution_layer_nchw()</a>, <a class="el" href="_n_e_direct_convolution_detail_8h_source.xhtml#l00353">arm_compute::detail::convolve_3x3()</a>, <a class="el" href="_n_e_direct_convolution_detail_8h_source.xhtml#l00307">arm_compute::detail::convolve_3x3_dilation()</a>, <a class="el" href="_i_tensor_8cpp_source.xhtml#l00035">ITensor::copy_from()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00404">arm_compute::graph::backends::detail::create_concatenate_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00657">arm_compute::graph::backends::detail::create_depth_to_space_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00696">arm_compute::graph::backends::detail::create_dequantization_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00734">arm_compute::graph::backends::detail::create_detection_output_layer()</a>, <a class="el" href="_c_l_functions_factory_8cpp_source.xhtml#l00129">arm_compute::graph::backends::detail::create_detection_output_layer&lt; CPPDetectionOutputLayer, CLTargetInfo &gt;()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00780">arm_compute::graph::backends::detail::create_detection_post_process_layer()</a>, <a class="el" href="_c_l_functions_factory_8cpp_source.xhtml#l00173">arm_compute::graph::backends::detail::create_detection_post_process_layer&lt; CPPDetectionPostProcessLayer, CLTargetInfo &gt;()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00835">arm_compute::graph::backends::detail::create_eltwise_layer()</a>, <a class="el" href="_g_c_functions_factory_8cpp_source.xhtml#l00179">arm_compute::graph::backends::detail::create_eltwise_layer&lt; GCEltwiseFunctions, GCTargetInfo &gt;()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00952">arm_compute::graph::backends::detail::create_flatten_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00991">arm_compute::graph::backends::detail::create_fully_connected_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01047">arm_compute::graph::backends::detail::create_generate_proposals_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01096">arm_compute::graph::backends::detail::create_l2_normalize_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00211">BatchNormalizationLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00624">DetectionPostProcessLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00771">FullyConnectedLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00906">NormalizePlanarYUVLayer::create_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01140">arm_compute::graph::backends::detail::create_normalization_layer()</a>, <a class="el" href="_n_e_function_factory_8cpp_source.xhtml#l00092">arm_compute::graph::backends::detail::create_normalization_layer&lt; NENormalizationLayer, NETargetInfo &gt;()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01181">arm_compute::graph::backends::detail::create_normalize_planar_yuv_layer()</a>, <a class="el" href="runtime_2_c_l_2_c_l_helpers_8cpp_source.xhtml#l00089">arm_compute::create_opencl_context_and_device()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01221">arm_compute::graph::backends::detail::create_pad_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01260">arm_compute::graph::backends::detail::create_permute_layer()</a>, <a class="el" href="_blob_lifetime_manager_8cpp_source.xhtml#l00047">BlobLifetimeManager::create_pool()</a>, <a class="el" href="_offset_lifetime_manager_8cpp_source.xhtml#l00056">OffsetLifetimeManager::create_pool()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01299">arm_compute::graph::backends::detail::create_pooling_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01338">arm_compute::graph::backends::detail::create_prelu_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01375">arm_compute::graph::backends::detail::create_print_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01405">arm_compute::graph::backends::detail::create_priorbox_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01447">arm_compute::graph::backends::detail::create_quantization_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01485">arm_compute::graph::backends::detail::create_reduction_operation_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01528">arm_compute::graph::backends::detail::create_reorg_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01565">arm_compute::graph::backends::detail::create_reshape_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01602">arm_compute::graph::backends::detail::create_resize_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01641">arm_compute::graph::backends::detail::create_roi_align_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01686">arm_compute::graph::backends::detail::create_slice_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01724">arm_compute::graph::backends::detail::create_softmax_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01762">arm_compute::graph::backends::detail::create_stack_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01805">arm_compute::graph::backends::detail::create_strided_slice_layer()</a>, <a class="el" href="_n_e_device_backend_8cpp_source.xhtml#l00116">NEDeviceBackend::create_tensor()</a>, <a class="el" href="_g_c_device_backend_8cpp_source.xhtml#l00105">GCDeviceBackend::create_tensor()</a>, <a class="el" href="_c_l_device_backend_8cpp_source.xhtml#l00164">CLDeviceBackend::create_tensor()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00904">arm_compute::graph::backends::detail::create_unary_eltwise_layer()</a>, <a class="el" href="reference_2_crop_resize_8cpp_source.xhtml#l00160">arm_compute::test::validation::reference::crop_and_resize()</a>, <a class="el" href="_sub_tensor_info_8h_source.xhtml#l00224">SubTensorInfo::data_layout()</a>, <a class="el" href="_sub_tensor_info_8h_source.xhtml#l00164">SubTensorInfo::data_type()</a>, <a class="el" href="reference_2_deconvolution_layer_8cpp_source.xhtml#l00037">arm_compute::test::validation::reference::deconvolution_layer()</a>, <a class="el" href="src_2core_2_utils_8cpp_source.xhtml#l00399">arm_compute::deconvolution_output_dimensions()</a>, <a class="el" href="_scale_helpers_8h_source.xhtml#l00052">arm_compute::scale_helpers::delta_bilinear_c1()</a>, <a class="el" href="_scale_helpers_8h_source.xhtml#l00086">arm_compute::scale_helpers::delta_bilinear_c1_quantized()</a>, <a class="el" href="_scale_helpers_8h_source.xhtml#l00180">arm_compute::scale_helpers::delta_linear_c1_x()</a>, <a class="el" href="_scale_helpers_8h_source.xhtml#l00154">arm_compute::scale_helpers::delta_linear_c1_y()</a>, <a class="el" href="reference_2_depth_to_space_layer_8cpp_source.xhtml#l00038">arm_compute::test::validation::reference::depth_to_space()</a>, <a class="el" href="reference_2_depth_concatenate_layer_8cpp_source.xhtml#l00037">arm_compute::test::validation::reference::depthconcatenate_layer()</a>, <a class="el" href="_topological_sort_8cpp_source.xhtml#l00127">arm_compute::graph::dfs()</a>, <a class="el" href="reference_2_d_f_t_8cpp_source.xhtml#l00370">arm_compute::test::validation::reference::dft_2d()</a>, <a class="el" href="_sub_tensor_info_8h_source.xhtml#l00124">SubTensorInfo::dimension()</a>, <a class="el" href="_blob_memory_pool_8cpp_source.xhtml#l00072">BlobMemoryPool::duplicate()</a>, <a class="el" href="_offset_memory_pool_8cpp_source.xhtml#l00074">OffsetMemoryPool::duplicate()</a>, <a class="el" href="_sub_tensor_info_8h_source.xhtml#l00140">SubTensorInfo::element_size()</a>, <a class="el" href="_i_simple_lifetime_manager_8cpp_source.xhtml#l00087">ISimpleLifetimeManager::end_lifetime()</a>, <a class="el" href="_i_c_l_kernel_8cpp_source.xhtml#l00032">arm_compute::enqueue()</a>, <a class="el" href="_helpers_8inl_source.xhtml#l00077">arm_compute::execute_window_loop()</a>, <a class="el" href="src_2core_2_sub_tensor_info_8cpp_source.xhtml#l00117">SubTensorInfo::extend_padding()</a>, <a class="el" href="src_2core_2_tensor_info_8cpp_source.xhtml#l00281">TensorInfo::extend_padding()</a>, <a class="el" href="_image_loader_8h_source.xhtml#l00177">IImageLoader::fill_image()</a>, <a class="el" href="_image_loader_8h_source.xhtml#l00257">IImageLoader::fill_planar_tensor()</a>, <a class="el" href="utils_2_utils_8h_source.xhtml#l00406">NPYLoader::fill_tensor()</a>, <a class="el" href="graph__validate__utils_8h_source.xhtml#l00452">VerifyAccessor&lt; D &gt;::fill_tensor()</a>, <a class="el" href="_assets_library_8h_source.xhtml#l00913">AssetsLibrary::fill_tensor_uniform()</a>, <a class="el" href="utils_2_utils_8h_source.xhtml#l00753">arm_compute::utils::fill_tensor_vector()</a>, <a class="el" href="_n_e_o_n_2_helper_8h_source.xhtml#l00043">arm_compute::test::fill_tensors()</a>, <a class="el" href="_graph_context_8cpp_source.xhtml#l00102">GraphContext::finalize()</a>, <a class="el" href="_memory_group_8h_source.xhtml#l00096">MemoryGroup::finalize_memory()</a>, <a class="el" href="_backend_registry_8cpp_source.xhtml#l00045">BackendRegistry::find_backend()</a>, <a class="el" href="_c_l_2_unstack_8cpp_source.xhtml#l00091">arm_compute::test::validation::for()</a>, <a class="el" href="_sub_tensor_info_8h_source.xhtml#l00169">SubTensorInfo::format()</a>, <a class="el" href="_p_relu_layer_node_8cpp_source.xhtml#l00039">PReluLayerNode::forward_descriptors()</a>, <a class="el" href="_normalize_planar_y_u_v_layer_node_8cpp_source.xhtml#l00040">NormalizePlanarYUVLayerNode::forward_descriptors()</a>, <a class="el" href="_flatten_layer_node_8cpp_source.xhtml#l00039">FlattenLayerNode::forward_descriptors()</a>, <a class="el" href="src_2graph_2nodes_2_reshape_layer_8cpp_source.xhtml#l00040">ReshapeLayerNode::forward_descriptors()</a>, <a class="el" href="_const_node_8cpp_source.xhtml#l00039">ConstNode::forward_descriptors()</a>, <a class="el" href="_input_node_8cpp_source.xhtml#l00039">InputNode::forward_descriptors()</a>, <a class="el" href="_dequantization_layer_node_8cpp_source.xhtml#l00041">DequantizationLayerNode::forward_descriptors()</a>, <a class="el" href="_normalization_layer_node_8cpp_source.xhtml#l00046">NormalizationLayerNode::forward_descriptors()</a>, <a class="el" href="_detection_post_process_layer_node_8cpp_source.xhtml#l00047">DetectionPostProcessLayerNode::forward_descriptors()</a>, <a class="el" href="_softmax_layer_node_8cpp_source.xhtml#l00046">SoftmaxLayerNode::forward_descriptors()</a>, <a class="el" href="_channel_shuffle_layer_node_8cpp_source.xhtml#l00045">ChannelShuffleLayerNode::forward_descriptors()</a>, <a class="el" href="_generate_proposals_layer_node_8cpp_source.xhtml#l00047">GenerateProposalsLayerNode::forward_descriptors()</a>, <a class="el" href="_bounding_box_transform_layer_node_8cpp_source.xhtml#l00047">BoundingBoxTransformLayerNode::forward_descriptors()</a>, <a class="el" href="_permute_layer_node_8cpp_source.xhtml#l00047">PermuteLayerNode::forward_descriptors()</a>, <a class="el" href="_quantization_layer_node_8cpp_source.xhtml#l00047">QuantizationLayerNode::forward_descriptors()</a>, <a class="el" href="_resize_layer_node_8cpp_source.xhtml#l00051">ResizeLayerNode::forward_descriptors()</a>, <a class="el" href="_activation_layer_node_8cpp_source.xhtml#l00045">ActivationLayerNode::forward_descriptors()</a>, <a class="el" href="_dummy_node_8cpp_source.xhtml#l00042">DummyNode::forward_descriptors()</a>, <a class="el" href="_pad_layer_node_8cpp_source.xhtml#l00052">PadLayerNode::forward_descriptors()</a>, <a class="el" href="_reduction_layer_node_8cpp_source.xhtml#l00057">ReductionLayerNode::forward_descriptors()</a>, <a class="el" href="_r_o_i_align_layer_node_8cpp_source.xhtml#l00048">ROIAlignLayerNode::forward_descriptors()</a>, <a class="el" href="_depth_to_space_layer_node_8cpp_source.xhtml#l00061">DepthToSpaceLayerNode::forward_descriptors()</a>, <a class="el" href="_prior_box_layer_node_8cpp_source.xhtml#l00062">PriorBoxLayerNode::forward_descriptors()</a>, <a class="el" href="_pooling_layer_node_8cpp_source.xhtml#l00068">PoolingLayerNode::forward_descriptors()</a>, <a class="el" href="_reorg_layer_node_8cpp_source.xhtml#l00065">ReorgLayerNode::forward_descriptors()</a>, <a class="el" href="_detection_output_layer_node_8cpp_source.xhtml#l00059">DetectionOutputLayerNode::forward_descriptors()</a>, <a class="el" href="_stack_layer_node_8cpp_source.xhtml#l00065">StackLayerNode::forward_descriptors()</a>, <a class="el" href="_batch_normalization_layer_node_8cpp_source.xhtml#l00056">BatchNormalizationLayerNode::forward_descriptors()</a>, <a class="el" href="_deconvolution_layer_node_8cpp_source.xhtml#l00070">DeconvolutionLayerNode::forward_descriptors()</a>, <a class="el" href="_arg_min_max_layer_node_8cpp_source.xhtml#l00057">ArgMinMaxLayerNode::forward_descriptors()</a>, <a class="el" href="_slice_layer_node_8cpp_source.xhtml#l00063">SliceLayerNode::forward_descriptors()</a>, <a class="el" href="_print_layer_node_8cpp_source.xhtml#l00057">PrintLayerNode::forward_descriptors()</a>, <a class="el" href="_l2_normalize_layer_node_8cpp_source.xhtml#l00050">L2NormalizeLayerNode::forward_descriptors()</a>, <a class="el" href="_split_layer_node_8cpp_source.xhtml#l00085">SplitLayerNode::forward_descriptors()</a>, <a class="el" href="_concatenate_layer_node_8cpp_source.xhtml#l00086">ConcatenateLayerNode::forward_descriptors()</a>, <a class="el" href="_eltwise_layer_node_8cpp_source.xhtml#l00071">EltwiseLayerNode::forward_descriptors()</a>, <a class="el" href="_strided_slice_layer_node_8cpp_source.xhtml#l00080">StridedSliceLayerNode::forward_descriptors()</a>, <a class="el" href="src_2graph_2nodes_2_fully_connected_layer_8cpp_source.xhtml#l00110">FullyConnectedLayerNode::forward_descriptors()</a>, <a class="el" href="_depthwise_convolution_layer_node_8cpp_source.xhtml#l00098">DepthwiseConvolutionLayerNode::forward_descriptors()</a>, <a class="el" href="_convolution_layer_node_8cpp_source.xhtml#l00109">ConvolutionLayerNode::forward_descriptors()</a>, <a class="el" href="_eltwise_layer_node_8cpp_source.xhtml#l00135">UnaryEltwiseLayerNode::forward_descriptors()</a>, <a class="el" href="_fused_depthwise_convolution_batch_normalization_node_8cpp_source.xhtml#l00105">FusedDepthwiseConvolutionBatchNormalizationNode::forward_descriptors()</a>, <a class="el" href="_fused_convolution_batch_normalization_node_8cpp_source.xhtml#l00114">FusedConvolutionBatchNormalizationNode::forward_descriptors()</a>, <a class="el" href="_g_c_buffer_allocator_8cpp_source.xhtml#l00046">GCBufferAllocator::free()</a>, <a class="el" href="_c_l_buffer_allocator_8cpp_source.xhtml#l00056">CLBufferAllocator::free()</a>, <a class="el" href="_c_l_h_o_g_8cpp_source.xhtml#l00045">CLHOG::free()</a>, <a class="el" href="tests_2validation_2reference_2_fully_connected_layer_8cpp_source.xhtml#l00115">arm_compute::test::validation::reference::fully_connected_layer()</a>, <a class="el" href="_node_fusion_mutator_8cpp_source.xhtml#l00043">arm_compute::graph::detail::fuse_convolution_with_batch_normalization()</a>, <a class="el" href="_node_fusion_mutator_8cpp_source.xhtml#l00136">arm_compute::graph::detail::fuse_depthwise_convolution_with_batch_normalization()</a>, <a class="el" href="_node_fusion_mutator_8cpp_source.xhtml#l00214">arm_compute::graph::detail::fuse_node_with_activation()</a>, <a class="el" href="reference_2_g_e_m_m_reshape_l_h_s_matrix_8cpp_source.xhtml#l00043">arm_compute::test::validation::reference::gemm_reshape_lhs_matrix()</a>, <a class="el" href="reference_2_g_e_m_m_reshape_r_h_s_matrix_8cpp_source.xhtml#l00043">arm_compute::test::validation::reference::gemm_reshape_rhs_matrix()</a>, <a class="el" href="tests_2_utils_8h_source.xhtml#l00700">arm_compute::test::generate_random_keypoints()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00059">arm_compute::graph::backends::detail::get_backing_tensor()</a>, <a class="el" href="src_2graph_2_utils_8cpp_source.xhtml#l00158">arm_compute::graph::get_driving_nodes()</a>, <a class="el" href="_asymm_helpers_8cpp_source.xhtml#l00262">arm_compute::quantization::get_invsqrt_quantized_multiplier_exp()</a>, <a class="el" href="_pyramid_8cpp_source.xhtml#l00112">Pyramid::get_pyramid_level()</a>, <a class="el" href="_c_l_pyramid_8cpp_source.xhtml#l00122">CLPyramid::get_pyramid_level()</a>, <a class="el" href="_image_loader_8h_source.xhtml#l00080">FileImageFeeder::get_row()</a>, <a class="el" href="_image_loader_8h_source.xhtml#l00114">MemoryImageFeeder::get_row()</a>, <a class="el" href="tests_2validation_2_helpers_8cpp_source.xhtml#l00290">arm_compute::test::validation::get_tile()</a>, <a class="el" href="_sub_tensor_info_8h_source.xhtml#l00184">SubTensorInfo::has_padding()</a>, <a class="el" href="reference_2_h_o_g_detector_8cpp_source.xhtml#l00048">arm_compute::test::validation::reference::hog_detector()</a>, <a class="el" href="reference_2_h_o_g_multi_detection_8cpp_source.xhtml#l00138">arm_compute::test::validation::reference::hog_multi_detection()</a>, <a class="el" href="reference_2_im2_col_8cpp_source.xhtml#l00039">arm_compute::test::validation::reference::im2col_nchw()</a>, <a class="el" href="reference_2_im2_col_8cpp_source.xhtml#l00093">arm_compute::test::validation::reference::im2col_nhwc()</a>, <a class="el" href="_helpers_8inl_source.xhtml#l00122">Iterator::increment()</a>, <a class="el" href="_dimensions_8h_source.xhtml#l00108">Dimensions&lt; size_t &gt;::increment()</a>, <a class="el" href="_cpu_floor_kernel_8cpp_source.xhtml#l00130">CpuFloorKernel::infer_window()</a>, <a class="el" href="_c_l_h_o_g_8cpp_source.xhtml#l00038">CLHOG::init()</a>, <a class="el" href="src_2runtime_2_tensor_allocator_8cpp_source.xhtml#l00107">TensorAllocator::init()</a>, <a class="el" href="_pyramid_info_8cpp_source.xhtml#l00055">PyramidInfo::init()</a>, <a class="el" href="src_2core_2_tensor_info_8cpp_source.xhtml#l00141">TensorInfo::init()</a>, <a class="el" href="src_2core_2_tensor_info_8cpp_source.xhtml#l00194">TensorInfo::init_auto_padding()</a>, <a class="el" href="_image_loader_8h_source.xhtml#l00161">IImageLoader::init_image()</a>, <a class="el" href="utils_2_utils_8h_source.xhtml#l00377">NPYLoader::init_tensor()</a>, <a class="el" href="_i_node_8cpp_source.xhtml#l00150">INode::input()</a>, <a class="el" href="_i_node_8cpp_source.xhtml#l00171">INode::input_edge()</a>, <a class="el" href="_i_node_8cpp_source.xhtml#l00165">INode::input_edge_id()</a>, <a class="el" href="_i_node_8cpp_source.xhtml#l00137">INode::input_id()</a>, <a class="el" href="_window_8inl_source.xhtml#l00062">Window::is_broadcasted()</a>, <a class="el" href="_sub_tensor_info_8h_source.xhtml#l00194">SubTensorInfo::is_dynamic()</a>, <a class="el" href="_sub_tensor_info_8h_source.xhtml#l00189">SubTensorInfo::is_resizable()</a>, <a class="el" href="_helpers_8inl_source.xhtml#l00095">Iterator::Iterator()</a>, <a class="el" href="_i_g_c_kernel_8cpp_source.xhtml#l00069">IGCKernel::kernel()</a>, <a class="el" href="_framework_8cpp_source.xhtml#l00224">Framework::log_failed_expectation()</a>, <a class="el" href="_logger_8cpp_source.xhtml#l00032">Logger::Logger()</a>, <a class="el" href="main_8cpp_source.xhtml#l00098">main()</a>, <a class="el" href="_memory_group_8h_source.xhtml#l00079">MemoryGroup::manage()</a>, <a class="el" href="_c_l_h_o_g_8cpp_source.xhtml#l00062">CLHOG::map()</a>, <a class="el" href="_i_c_l_distribution1_d_8cpp_source.xhtml#l00035">ICLDistribution1D::map()</a>, <a class="el" href="_c_l_lut_allocator_8cpp_source.xhtml#l00046">CLLutAllocator::map()</a>, <a class="el" href="_g_c_tensor_allocator_8cpp_source.xhtml#l00088">GCTensorAllocator::map()</a>, <a class="el" href="_c_l_tensor_allocator_8cpp_source.xhtml#l00223">CLTensorAllocator::map()</a>, <a class="el" href="_g_c_memory_region_8cpp_source.xhtml#l00069">GCBufferMemoryRegion::map()</a>, <a class="el" href="_c_l_memory_region_8cpp_source.xhtml#l00082">CLBufferMemoryRegion::map()</a>, <a class="el" href="_c_l_memory_region_8cpp_source.xhtml#l00135">CLCoarseSVMMemoryRegion::map()</a>, <a class="el" href="_blob_lifetime_manager_8cpp_source.xhtml#l00053">BlobLifetimeManager::mapping_type()</a>, <a class="el" href="_offset_lifetime_manager_8cpp_source.xhtml#l00062">OffsetLifetimeManager::mapping_type()</a>, <a class="el" href="tests_2validation_2_helpers_8cpp_source.xhtml#l00239">arm_compute::test::validation::matrix_multiply()</a>, <a class="el" href="reference_2_max_unpooling_layer_8cpp_source.xhtml#l00041">arm_compute::test::validation::reference::max_unpooling_layer_internal()</a>, <a class="el" href="_scheduler_timer_8cpp_source.xhtml#l00225">SchedulerClock&lt; output_timestamps &gt;::measurements()</a>, <a class="el" href="_multi_h_o_g_8cpp_source.xhtml#l00042">MultiHOG::model()</a>, <a class="el" href="_in_place_operation_mutator_8cpp_source.xhtml#l00084">InPlaceOperationMutator::mutate()</a>, <a class="el" href="_node_fusion_mutator_8cpp_source.xhtml#l00300">NodeFusionMutator::mutate()</a>, <a class="el" href="_grouped_convolution_mutator_8cpp_source.xhtml#l00113">GroupedConvolutionMutator::mutate()</a>, <a class="el" href="_n_e_sub_tensor_handle_8cpp_source.xhtml#l00032">NESubTensorHandle::NESubTensorHandle()</a>, <a class="el" href="_n_e_table_lookup_kernel_8cpp_source.xhtml#l00046">NETableLookupKernel::NETableLookupKernel()</a>, <a class="el" href="reference_2_non_linear_filter_8cpp_source.xhtml#l00036">arm_compute::test::validation::reference::non_linear_filter()</a>, <a class="el" href="_h_o_g_info_8cpp_source.xhtml#l00083">HOGInfo::num_block_positions_per_image()</a>, <a class="el" href="_h_o_g_info_8cpp_source.xhtml#l00067">HOGInfo::num_cells_per_block()</a>, <a class="el" href="_h_o_g_info_8cpp_source.xhtml#l00075">HOGInfo::num_cells_per_block_stride()</a>, <a class="el" href="_sub_tensor_info_8h_source.xhtml#l00149">SubTensorInfo::num_channels()</a>, <a class="el" href="_sub_tensor_info_8h_source.xhtml#l00134">SubTensorInfo::offset_first_element_in_bytes()</a>, <a class="el" href="_offset_memory_pool_8cpp_source.xhtml#l00036">OffsetMemoryPool::OffsetMemoryPool()</a>, <a class="el" href="_file_handler_8cpp_source.xhtml#l00042">FileHandler::open()</a>, <a class="el" href="utils_2_utils_8h_source.xhtml#l00342">NPYLoader::open()</a>, <a class="el" href="_image_loader_8h_source.xhtml#l00381">PPMLoader::open()</a>, <a class="el" href="_dimensions_8h_source.xhtml#l00124">Dimensions&lt; size_t &gt;::operator[]()</a>, <a class="el" href="_i_node_8cpp_source.xhtml#l00158">INode::output()</a>, <a class="el" href="_i_node_8cpp_source.xhtml#l00144">INode::output_id()</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00788">PadStrideInfo::pad()</a>, <a class="el" href="_sub_tensor_info_8h_source.xhtml#l00179">SubTensorInfo::padding()</a>, <a class="el" href="_c_l_sub_tensor_handle_8cpp_source.xhtml#l00084">CLSubTensorHandle::parent_handle()</a>, <a class="el" href="_n_e_sub_tensor_handle_8cpp_source.xhtml#l00081">NESubTensorHandle::parent_handle()</a>, <a class="el" href="_scale_helpers_8h_source.xhtml#l00283">arm_compute::scale_helpers::pixel_area_c1u8_clamp()</a>, <a class="el" href="_scale_helpers_8h_source.xhtml#l00207">arm_compute::scale_helpers::pixel_bilinear_c1()</a>, <a class="el" href="_scale_helpers_8h_source.xhtml#l00235">arm_compute::scale_helpers::pixel_bilinear_c1_clamp()</a>, <a class="el" href="_cast_8h_source.xhtml#l00068">arm_compute::utils::cast::polymorphic_downcast()</a>, <a class="el" href="_cast_8h_source.xhtml#l00110">arm_compute::utils::cast::polymorphic_downcast_unique_ptr()</a>, <a class="el" href="reference_2_pooling_layer_8cpp_source.xhtml#l00041">arm_compute::test::validation::reference::pooling_layer_internal()</a>, <a class="el" href="_memory_manager_on_demand_8cpp_source.xhtml#l00051">MemoryManagerOnDemand::populate()</a>, <a class="el" href="_g_c_fully_connected_layer_8cpp_source.xhtml#l00177">GCFullyConnectedLayer::prepare()</a>, <a class="el" href="_g_c_g_e_m_m_8cpp_source.xhtml#l00192">GCGEMM::prepare()</a>, <a class="el" href="_n_e_g_e_m_m_8cpp_source.xhtml#l00359">NEGEMM::prepare()</a>, <a class="el" href="_n_e_f_f_t_convolution_layer_8cpp_source.xhtml#l00348">NEFFTConvolutionLayer::prepare()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_matrix_multiply_core_8cpp_source.xhtml#l00573">NEGEMMLowpMatrixMultiplyCore::prepare()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_matrix_multiply_core_8cpp_source.xhtml#l00668">CLGEMMLowpMatrixMultiplyCore::prepare()</a>, <a class="el" href="_n_e_deconvolution_layer_8cpp_source.xhtml#l00219">NEDeconvolutionLayer::prepare()</a>, <a class="el" href="_n_e_g_e_m_m_assembly_dispatch_8cpp_source.xhtml#l00842">NEGEMMAssemblyDispatch::prepare()</a>, <a class="el" href="_g_c_convolution_layer_8cpp_source.xhtml#l00225">GCConvolutionLayer::prepare()</a>, <a class="el" href="_c_l_g_e_m_m_deconvolution_layer_8cpp_source.xhtml#l00389">CLGEMMDeconvolutionLayer::prepare()</a>, <a class="el" href="_c_l_f_f_t_convolution_layer_8cpp_source.xhtml#l00352">CLFFTConvolutionLayer::prepare()</a>, <a class="el" href="_c_l_direct_deconvolution_layer_8cpp_source.xhtml#l00211">CLDirectDeconvolutionLayer::prepare()</a>, <a class="el" href="_n_e_fully_connected_layer_8cpp_source.xhtml#l00429">NEFullyConnectedLayer::prepare()</a>, <a class="el" href="_c_l_fully_connected_layer_8cpp_source.xhtml#l00441">CLFullyConnectedLayer::prepare()</a>, <a class="el" href="_c_l_g_e_m_m_convolution_layer_8cpp_source.xhtml#l00660">CLGEMMConvolutionLayer::prepare()</a>, <a class="el" href="_execution_helpers_8cpp_source.xhtml#l00220">arm_compute::graph::detail::prepare_all_tasks()</a>, <a class="el" href="_dot_graph_printer_8cpp_source.xhtml#l00124">DotGraphPrinter::print()</a>, <a class="el" href="_i_array_8h_source.xhtml#l00078">IArray&lt; NELKInternalKeypoint &gt;::push_back()</a>, <a class="el" href="reference_2_q_l_s_t_m_layer_normalization_8cpp_source.xhtml#l00040">arm_compute::test::validation::reference::qlstm_layer_normalization()</a>, <a class="el" href="_sub_tensor_info_8h_source.xhtml#l00219">SubTensorInfo::quantization_info()</a>, <a class="el" href="_quantization_layer_node_8cpp_source.xhtml#l00038">QuantizationLayerNode::QuantizationLayerNode()</a>, <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00041">CLScheduler::queue()</a>, <a class="el" href="_random_8h_source.xhtml#l00061">RangedUniformDistribution&lt; T &gt;::RangedUniformDistribution()</a>, <a class="el" href="reference_2_d_f_t_8cpp_source.xhtml#l00342">arm_compute::test::validation::reference::rdft_2d()</a>, <a class="el" href="_i_simple_lifetime_manager_8cpp_source.xhtml#l00044">ISimpleLifetimeManager::register_group()</a>, <a class="el" href="_memory_group_8h_source.xhtml#l00115">MemoryGroup::release()</a>, <a class="el" href="_blob_memory_pool_8cpp_source.xhtml#l00058">BlobMemoryPool::release()</a>, <a class="el" href="_offset_memory_pool_8cpp_source.xhtml#l00060">OffsetMemoryPool::release()</a>, <a class="el" href="_pool_manager_8cpp_source.xhtml#l00076">PoolManager::release_pool()</a>, <a class="el" href="reference_2_remap_8cpp_source.xhtml#l00041">arm_compute::test::validation::reference::remap()</a>, <a class="el" href="_dimensions_8h_source.xhtml#l00196">Dimensions&lt; size_t &gt;::remove()</a>, <a class="el" href="_tensor_shape_8h_source.xhtml#l00111">TensorShape::remove_dimension()</a>, <a class="el" href="reference_2_reorg_layer_8cpp_source.xhtml#l00038">arm_compute::test::validation::reference::reorg_layer()</a>, <a class="el" href="_helpers_8inl_source.xhtml#l00144">Iterator::reset()</a>, <a class="el" href="_sub_tensor_info_8h_source.xhtml#l00108">SubTensorInfo::reset_padding()</a>, <a class="el" href="tests_2validation_2reference_2_reshape_layer_8cpp_source.xhtml#l00038">arm_compute::test::validation::reference::reshape_layer()</a>, <a class="el" href="_i_array_8h_source.xhtml#l00128">IArray&lt; NELKInternalKeypoint &gt;::resize()</a>, <a class="el" href="reference_2_reverse_8cpp_source.xhtml#l00038">arm_compute::test::validation::reference::reverse()</a>, <a class="el" href="reference_2_d_f_t_8cpp_source.xhtml#l00354">arm_compute::test::validation::reference::ridft_2d()</a>, <a class="el" href="_i_g_c_simple_function_8cpp_source.xhtml#l00038">IGCSimpleFunction::run()</a>, <a class="el" href="_n_e_gaussian_pyramid_kernel_8cpp_source.xhtml#l00110">NEGaussianPyramidHorKernel::run()</a>, <a class="el" href="_n_e_table_lookup_kernel_8cpp_source.xhtml#l00136">NETableLookupKernel::run()</a>, <a class="el" href="_n_e_warp_kernel_8cpp_source.xhtml#l00060">INEWarpKernel::run()</a>, <a class="el" href="_n_e_remap_kernel_8cpp_source.xhtml#l00229">NERemapKernel::run()</a>, <a class="el" href="_c_l_histogram_kernel_8cpp_source.xhtml#l00126">CLHistogramKernel::run()</a>, <a class="el" href="_n_e_h_o_g_descriptor_kernel_8cpp_source.xhtml#l00680">NEHOGOrientationBinningKernel::run()</a>, <a class="el" href="_n_e_derivative_kernel_8cpp_source.xhtml#l00223">NEDerivativeKernel::run()</a>, <a class="el" href="_n_e_absolute_difference_kernel_8cpp_source.xhtml#l00200">NEAbsoluteDifferenceKernel::run()</a>, <a class="el" href="_n_e_non_maxima_suppression3x3_kernel_8cpp_source.xhtml#l00500">NENonMaximaSuppression3x3Kernel::run()</a>, <a class="el" href="_n_e_magnitude_phase_kernel_8cpp_source.xhtml#l00477">NEMagnitudePhaseKernel&lt; mag_type, phase_type &gt;::run()</a>, <a class="el" href="_c_p_p_detection_window_non_maxima_suppression_kernel_8cpp_source.xhtml#l00080">CPPDetectionWindowNonMaximaSuppressionKernel::run()</a>, <a class="el" href="_c_p_p_detection_output_layer_8cpp_source.xhtml#l00444">CPPDetectionOutputLayer::run()</a>, <a class="el" href="_n_e_non_linear_filter_kernel_8cpp_source.xhtml#l00941">NENonLinearFilterKernel::run()</a>, <a class="el" href="_n_e_canny_edge_kernel_8cpp_source.xhtml#l00940">NEGradientKernel::run()</a>, <a class="el" href="_n_e_h_o_g_detector_kernel_8cpp_source.xhtml#l00097">NEHOGDetectorKernel::run()</a>, <a class="el" href="_n_e_min_max_location_kernel_8cpp_source.xhtml#l00086">NEMinMaxKernel::run()</a>, <a class="el" href="_n_e_cumulative_distribution_kernel_8cpp_source.xhtml#l00072">NECumulativeDistributionKernel::run()</a>, <a class="el" href="_n_e_channel_extract_kernel_8cpp_source.xhtml#l00182">NEChannelExtractKernel::run()</a>, <a class="el" href="_n_e_threshold_kernel_8cpp_source.xhtml#l00208">NEThresholdKernel::run()</a>, <a class="el" href="_n_e_transpose_kernel_8cpp_source.xhtml#l00514">NETransposeKernel::run()</a>, <a class="el" href="_n_e_q_l_s_t_m_layer_normalization_kernel_8cpp_source.xhtml#l00166">NEQLSTMLayerNormalizationKernel::run()</a>, <a class="el" href="_n_e_quantization_layer_kernel_8cpp_source.xhtml#l00257">NEQuantizationLayerKernel::run()</a>, <a class="el" href="_cl_concatenate_8cpp_source.xhtml#l00223">ClConcatenate::run()</a>, <a class="el" href="_n_e_channel_combine_kernel_8cpp_source.xhtml#l00274">NEChannelCombineKernel::run()</a>, <a class="el" href="_n_e_range_kernel_8cpp_source.xhtml#l00183">NERangeKernel::run()</a>, <a class="el" href="_n_e_normalization_layer_kernel_8cpp_source.xhtml#l00288">NENormalizationLayerKernel::run()</a>, <a class="el" href="_n_e_max_unpooling_layer_kernel_8cpp_source.xhtml#l00133">NEMaxUnpoolingLayerKernel::run()</a>, <a class="el" href="_n_e_mean_std_dev_normalization_kernel_8cpp_source.xhtml#l00196">NEMeanStdDevNormalizationKernel::run()</a>, <a class="el" href="_n_e_gather_kernel_8cpp_source.xhtml#l00198">NEGatherKernel::run()</a>, <a class="el" href="_n_e_select_kernel_8cpp_source.xhtml#l00253">NESelectKernel::run()</a>, <a class="el" href="_g_c_im2_col_kernel_8cpp_source.xhtml#l00223">GCIm2ColKernel::run()</a>, <a class="el" href="_c_l_mean_std_dev_8cpp_source.xhtml#l00161">CLMeanStdDev::run()</a>, <a class="el" href="_n_e_color_convert_kernel_8cpp_source.xhtml#l00582">NEColorConvertKernel::run()</a>, <a class="el" href="_n_e_histogram_kernel_8cpp_source.xhtml#l00241">NEHistogramKernel::run()</a>, <a class="el" href="_n_e_scale_kernel_8cpp_source.xhtml#l00583">NEScaleKernel::run()</a>, <a class="el" href="_n_e_direct_convolution_layer_kernel_8cpp_source.xhtml#l01293">NEDirectConvolutionLayerKernel::run()</a>, <a class="el" href="_n_e_direct_convolution_layer_output_stage_kernel_8cpp_source.xhtml#l00505">NEDirectConvolutionLayerOutputStageKernel::run()</a>, <a class="el" href="_n_e_g_e_m_m_interleave4x4_kernel_8cpp_source.xhtml#l00175">NEGEMMInterleave4x4Kernel::run()</a>, <a class="el" href="_n_e_depth_convert_layer_kernel_8cpp_source.xhtml#l00139">NEDepthConvertLayerKernel::run()</a>, <a class="el" href="_n_e_canny_edge_8cpp_source.xhtml#l00169">NECannyEdge::run()</a>, <a class="el" href="_n_e_crop_kernel_8cpp_source.xhtml#l00364">NECropKernel::run()</a>, <a class="el" href="_n_e_batch_normalization_layer_kernel_8cpp_source.xhtml#l00379">NEBatchNormalizationLayerKernel::run()</a>, <a class="el" href="_n_e_harris_corners_kernel_8cpp_source.xhtml#l00711">NEHarrisScoreKernel&lt; block_size &gt;::run()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_matrix_multiply_native_kernel_8cpp_source.xhtml#l00280">CLGEMMLowpMatrixMultiplyNativeKernel::run()</a>, <a class="el" href="_n_e_gaussian_pyramid_kernel_8cpp_source.xhtml#l00210">NEGaussianPyramidVertKernel::run()</a>, <a class="el" href="_c_l_col2_im_kernel_8cpp_source.xhtml#l00148">CLCol2ImKernel::run()</a>, <a class="el" href="_c_l_gaussian_pyramid_kernel_8cpp_source.xhtml#l00223">CLGaussianPyramidVertKernel::run()</a>, <a class="el" href="_n_e_depthwise_convolution_assembly_dispatch_8cpp_source.xhtml#l00512">NEDepthwiseConvolutionAssemblyDispatch::run()</a>, <a class="el" href="_c_l_winograd_input_transform_kernel_8cpp_source.xhtml#l00219">CLWinogradInputTransformKernel::run()</a>, <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8cpp_source.xhtml#l00480">CLGEMMMatrixMultiplyKernel::run()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_matrix_multiply_reshaped_kernel_8cpp_source.xhtml#l00250">CLGEMMLowpMatrixMultiplyReshapedKernel::run()</a>, <a class="el" href="_c_l_g_e_m_m_matrix_multiply_native_kernel_8cpp_source.xhtml#l00344">CLGEMMMatrixMultiplyNativeKernel::run()</a>, <a class="el" href="_n_e_g_e_m_m_assembly_dispatch_8cpp_source.xhtml#l00853">NEGEMMAssemblyDispatch::run()</a>, <a class="el" href="_c_l_depthwise_convolution_layer_native_kernel_8cpp_source.xhtml#l00272">CLDepthwiseConvolutionLayerNativeKernel::run()</a>, <a class="el" href="_n_e_h_o_g_descriptor_kernel_8cpp_source.xhtml#l00774">NEHOGBlockNormalizationKernel::run()</a>, <a class="el" href="_n_e_canny_edge_kernel_8cpp_source.xhtml#l01023">NEEdgeNonMaxSuppressionKernel::run()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_matrix_multiply_reshaped_only_r_h_s_kernel_8cpp_source.xhtml#l00484">CLGEMMLowpMatrixMultiplyReshapedOnlyRHSKernel::run()</a>, <a class="el" href="_n_e_min_max_location_kernel_8cpp_source.xhtml#l00387">NEMinMaxLocationKernel::run()</a>, <a class="el" href="_c_l_g_e_m_m_matrix_multiply_reshaped_only_r_h_s_kernel_8cpp_source.xhtml#l00348">CLGEMMMatrixMultiplyReshapedOnlyRHSKernel::run()</a>, <a class="el" href="_c_l_g_e_m_m_matrix_multiply_reshaped_kernel_8cpp_source.xhtml#l00355">CLGEMMMatrixMultiplyReshapedKernel::run()</a>, <a class="el" href="_n_e_convolution_kernel_8cpp_source.xhtml#l01473">NEConvolutionRectangleKernel::run()</a>, <a class="el" href="_cpu_fill_kernel_8cpp_source.xhtml#l00051">CpuFillKernel::run_op()</a>, <a class="el" href="_cpu_activation_kernel_8cpp_source.xhtml#l00233">CpuActivationKernel::run_op()</a>, <a class="el" href="_cpu_elementwise_kernel_8cpp_source.xhtml#l00197">CpuElementwiseKernel::run_op()</a>, <a class="el" href="_n_e_logical_kernel_8cpp_source.xhtml#l00324">NELogicalKernel::run_op()</a>, <a class="el" href="_cpu_concatenate_batch_kernel_8cpp_source.xhtml#l00201">CpuConcatenateBatchKernel::run_op()</a>, <a class="el" href="_cl_activation_kernel_8cpp_source.xhtml#l00230">ClActivationKernel::run_op()</a>, <a class="el" href="_cpu_floor_kernel_8cpp_source.xhtml#l00146">CpuFloorKernel::run_op()</a>, <a class="el" href="_cpu_pooling_kernel_8cpp_source.xhtml#l00481">CpuPoolingKernel::run_op()</a>, <a class="el" href="_cpu_concatenate_depth_kernel_8cpp_source.xhtml#l00198">CpuConcatenateDepthKernel::run_op()</a>, <a class="el" href="_cpu_elementwise_unary_kernel_8cpp_source.xhtml#l00162">CpuElementwiseUnaryKernel::run_op()</a>, <a class="el" href="_cpu_add_kernel_8cpp_source.xhtml#l00323">CpuAddKernel::run_op()</a>, <a class="el" href="_cpu_pooling_assembly_wrapper_kernel_8cpp_source.xhtml#l00139">CpuPoolingAssemblyWrapperKernel::run_op()</a>, <a class="el" href="_cpu_softmax_kernel_8cpp_source.xhtml#l00352">CpuLogits1DSoftmaxKernel&lt; IS_LOG &gt;::run_op()</a>, <a class="el" href="_n_e_pixel_wise_multiplication_kernel_8cpp_source.xhtml#l01644">NEPixelWiseMultiplicationKernel::run_op()</a>, <a class="el" href="src_2runtime_2_c_l_2_utils_8cpp_source.xhtml#l00073">arm_compute::save_program_cache_to_file()</a>, <a class="el" href="utils_2_utils_8h_source.xhtml#l00547">arm_compute::utils::save_to_ppm()</a>, <a class="el" href="_window_8inl_source.xhtml#l00155">Window::scale()</a>, <a class="el" href="validation_2reference_2_scale_8cpp_source.xhtml#l00041">arm_compute::test::validation::reference::scale_core()</a>, <a class="el" href="runtime_2_c_l_2_c_l_helpers_8cpp_source.xhtml#l00109">arm_compute::schedule_kernel_on_ctx()</a>, <a class="el" href="src_2runtime_2_utils_8cpp_source.xhtml#l00055">arm_compute::utils::schedule_kernel_on_ctx()</a>, <a class="el" href="reference_2_select_8cpp_source.xhtml#l00038">arm_compute::test::validation::reference::select()</a>, <a class="el" href="_scheduler_8cpp_source.xhtml#l00071">Scheduler::set()</a>, <a class="el" href="_window_8inl_source.xhtml#l00049">Window::set()</a>, <a class="el" href="_g_c_tensor_allocator_8cpp_source.xhtml#l00064">GCTensorAllocator::set_associated_memory_group()</a>, <a class="el" href="src_2runtime_2_tensor_allocator_8cpp_source.xhtml#l00165">TensorAllocator::set_associated_memory_group()</a>, <a class="el" href="_c_l_tensor_allocator_8cpp_source.xhtml#l00188">CLTensorAllocator::set_associated_memory_group()</a>, <a class="el" href="_window_8inl_source.xhtml#l00055">Window::set_broadcasted()</a>, <a class="el" href="_c_p_p_types_8cpp_source.xhtml#l00045">CPUInfo::set_cpu_model()</a>, <a class="el" href="_sub_tensor_info_8h_source.xhtml#l00082">SubTensorInfo::set_data_layout()</a>, <a class="el" href="_sub_tensor_info_8h_source.xhtml#l00076">SubTensorInfo::set_data_type()</a>, <a class="el" href="_window_8inl_source.xhtml#l00167">Window::set_dimension_step()</a>, <a class="el" href="_sub_tensor_info_8h_source.xhtml#l00094">SubTensorInfo::set_format()</a>, <a class="el" href="src_2core_2_tensor_info_8cpp_source.xhtml#l00335">TensorInfo::set_format()</a>, <a class="el" href="_i_node_8cpp_source.xhtml#l00050">INode::set_graph()</a>, <a class="el" href="_framework_8cpp_source.xhtml#l00699">Framework::set_instruments_info()</a>, <a class="el" href="_sub_tensor_info_8h_source.xhtml#l00199">SubTensorInfo::set_is_resizable()</a>, <a class="el" href="_sub_tensor_info_8h_source.xhtml#l00088">SubTensorInfo::set_num_channels()</a>, <a class="el" href="_single_thread_scheduler_8cpp_source.xhtml#l00032">SingleThreadScheduler::set_num_threads()</a>, <a class="el" href="_i_node_8cpp_source.xhtml#l00076">INode::set_output_tensor()</a>, <a class="el" href="_sub_tensor_info_8h_source.xhtml#l00102">SubTensorInfo::set_quantization_info()</a>, <a class="el" href="src_2core_2_sub_tensor_info_8cpp_source.xhtml#l00110">SubTensorInfo::set_tensor_dims_state()</a>, <a class="el" href="src_2core_2_sub_tensor_info_8cpp_source.xhtml#l00089">SubTensorInfo::set_tensor_shape()</a>, <a class="el" href="_sub_tensor_info_8h_source.xhtml#l00209">SubTensorInfo::set_valid_region()</a>, <a class="el" href="core_2_c_l_2_c_l_helpers_8cpp_source.xhtml#l00430">arm_compute::set_wbsm()</a>, <a class="el" href="_c_l_device_backend_8cpp_source.xhtml#l00105">CLDeviceBackend::setup_backend_context()</a>, <a class="el" href="tests_2_utils_8h_source.xhtml#l00225">arm_compute::test::shape_to_valid_region()</a>, <a class="el" href="tests_2_utils_8h_source.xhtml#l00259">arm_compute::test::shape_to_valid_region_gaussian_pyramid_half()</a>, <a class="el" href="_window_8inl_source.xhtml#l00133">Window::shift()</a>, <a class="el" href="_tensor_shape_8h_source.xhtml#l00144">TensorShape::shift_right()</a>, <a class="el" href="_slice_operations_8cpp_source.xhtml#l00038">arm_compute::test::validation::reference::slice()</a>, <a class="el" href="reference_2_softmax_layer_8cpp_source.xhtml#l00039">arm_compute::test::validation::reference::softmax_layer_generic()</a>, <a class="el" href="_window_8inl_source.xhtml#l00189">Window::split_window()</a>, <a class="el" href="reference_2_stack_layer_8cpp_source.xhtml#l00041">arm_compute::test::validation::reference::stack_layer()</a>, <a class="el" href="_i_simple_lifetime_manager_8cpp_source.xhtml#l00067">ISimpleLifetimeManager::start_lifetime()</a>, <a class="el" href="_window_iterator_8h_source.xhtml#l00073">TensorAccessor&lt; T &gt;::stride()</a>, <a class="el" href="_slice_operations_8cpp_source.xhtml#l00080">arm_compute::test::validation::reference::strided_slice()</a>, <a class="el" href="_sub_tensor_info_8h_source.xhtml#l00129">SubTensorInfo::strides_in_bytes()</a>, <a class="el" href="_sub_tensor_8cpp_source.xhtml#l00035">SubTensor::SubTensor()</a>, <a class="el" href="src_2core_2_sub_tensor_info_8cpp_source.xhtml#l00063">SubTensorInfo::SubTensorInfo()</a>, <a class="el" href="_sub_tensor_info_8h_source.xhtml#l00159">SubTensorInfo::tensor_dims_state()</a>, <a class="el" href="_sub_tensor_info_8h_source.xhtml#l00154">SubTensorInfo::tensor_shape()</a>, <a class="el" href="_open_c_l_memory_usage_8cpp_source.xhtml#l00069">OpenCLMemoryUsage::test_start()</a>, <a class="el" href="_open_c_l_timer_8cpp_source.xhtml#l00090">OpenCLClock&lt; output_timestamps &gt;::test_start()</a>, <a class="el" href="_scheduler_timer_8cpp_source.xhtml#l00145">SchedulerClock&lt; output_timestamps &gt;::test_start()</a>, <a class="el" href="_sub_tensor_info_8h_source.xhtml#l00174">SubTensorInfo::total_size()</a>, <a class="el" href="_tensor_shape_8h_source.xhtml#l00194">TensorShape::total_size_lower()</a>, <a class="el" href="_tensor_shape_8h_source.xhtml#l00182">TensorShape::total_size_upper()</a>, <a class="el" href="tests_2validation_2_helpers_8cpp_source.xhtml#l00268">arm_compute::test::validation::transpose_matrix()</a>, <a class="el" href="_c_l_h_o_g_8cpp_source.xhtml#l00068">CLHOG::unmap()</a>, <a class="el" href="_c_l_distribution1_d_8cpp_source.xhtml#l00041">CLDistribution1D::unmap()</a>, <a class="el" href="_i_c_l_distribution1_d_8cpp_source.xhtml#l00041">ICLDistribution1D::unmap()</a>, <a class="el" href="_c_l_lut_allocator_8cpp_source.xhtml#l00052">CLLutAllocator::unmap()</a>, <a class="el" href="_c_l_sub_tensor_8cpp_source.xhtml#l00076">CLSubTensor::unmap()</a>, <a class="el" href="_g_c_tensor_allocator_8cpp_source.xhtml#l00097">GCTensorAllocator::unmap()</a>, <a class="el" href="_c_l_tensor_allocator_8cpp_source.xhtml#l00233">CLTensorAllocator::unmap()</a>, <a class="el" href="_g_c_memory_region_8cpp_source.xhtml#l00081">GCBufferMemoryRegion::unmap()</a>, <a class="el" href="_c_l_memory_region_8cpp_source.xhtml#l00089">CLBufferMemoryRegion::unmap()</a>, <a class="el" href="_c_l_memory_region_8cpp_source.xhtml#l00143">CLCoarseSVMMemoryRegion::unmap()</a>, <a class="el" href="reference_2_unstack_8cpp_source.xhtml#l00087">arm_compute::test::validation::reference::unstack()</a>, <a class="el" href="_access_window_transpose_8cpp_source.xhtml#l00189">AccessWindowTranspose::update_padding_if_needed()</a>, <a class="el" href="_i_access_window_8cpp_source.xhtml#l00212">AccessWindowRectangle::update_padding_if_needed()</a>, <a class="el" href="_n_e_bounding_box_transform_kernel_8cpp_source.xhtml#l00113">NEBoundingBoxTransformKernel::validate()</a>, <a class="el" href="_window_8inl_source.xhtml#l00173">Window::validate()</a>, <a class="el" href="_c_l_g_e_m_m_convolution_layer_8cpp_source.xhtml#l00431">CLGEMMConvolutionLayer::validate()</a>, <a class="el" href="_n_e_device_backend_8cpp_source.xhtml#l00148">NEDeviceBackend::validate_node()</a>, <a class="el" href="_g_c_device_backend_8cpp_source.xhtml#l00134">GCDeviceBackend::validate_node()</a>, <a class="el" href="_c_l_device_backend_8cpp_source.xhtml#l00196">CLDeviceBackend::validate_node()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00075">arm_compute::graph::backends::detail::validate_node()</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00226">ValidRegion::ValidRegion()</a>, <a class="el" href="_n_e_symm_8h_source.xhtml#l00204">arm_compute::vquantize_qsymm16()</a>, <a class="el" href="reference_2_winograd_8cpp_source.xhtml#l00236">arm_compute::test::validation::reference::winograd_input_transform()</a>, <a class="el" href="reference_2_winograd_8cpp_source.xhtml#l00440">arm_compute::test::validation::reference::winograd_output_transform()</a>, <a class="el" href="tests_2validation_2_helpers_8cpp_source.xhtml#l00350">arm_compute::test::validation::zeros()</a>, and <a class="el" href="_blob_memory_pool_8cpp_source.xhtml#l00042">BlobMemoryPool::~BlobMemoryPool()</a>.</p>

</div>
</div>
<a id="ac90c3bce005225cbaa4a43740917bb58"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac90c3bce005225cbaa4a43740917bb58">&#9670;&nbsp;</a></span>ARM_COMPUTE_ERROR_ON_LOC</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ARM_COMPUTE_ERROR_ON_LOC</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">cond, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><a class="el" href="_cpu_floor_kernel_8cpp.xhtml#a89746721cac623cd0ffa90c03fc7a657">func</a>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">file, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">line&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;<a class="el" href="_error_8h.xhtml#a1b62e396a1789909dadda61ea4cda96f">ARM_COMPUTE_ERROR_ON_LOC_MSG</a>(cond, <a class="el" href="_cpu_floor_kernel_8cpp.xhtml#a89746721cac623cd0ffa90c03fc7a657">func</a>, file, line, &quot;%s&quot;, #cond)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>If the condition is true then an error message is printed and an exception thrown. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cond</td><td>Condition to evaluate. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">func</td><td>Function in which the error occurred. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">file</td><td>File in which the error occurred. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">line</td><td>Line in which the error occurred. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_error_8h_source.xhtml#l00476">476</a> of file <a class="el" href="_error_8h_source.xhtml">Error.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00623">arm_compute::error_on_format_not_in()</a>.</p>

</div>
</div>
<a id="a1b62e396a1789909dadda61ea4cda96f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1b62e396a1789909dadda61ea4cda96f">&#9670;&nbsp;</a></span>ARM_COMPUTE_ERROR_ON_LOC_MSG</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ARM_COMPUTE_ERROR_ON_LOC_MSG</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">cond, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><a class="el" href="_cpu_floor_kernel_8cpp.xhtml#a89746721cac623cd0ffa90c03fc7a657">func</a>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">file, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">line, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>...</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_error_8h_source.xhtml#l00458">458</a> of file <a class="el" href="_error_8h_source.xhtml">Error.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00623">arm_compute::error_on_format_not_in()</a>.</p>

</div>
</div>
<a id="a0b0eb3235749a2909dc5a101afe59a1b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0b0eb3235749a2909dc5a101afe59a1b">&#9670;&nbsp;</a></span>ARM_COMPUTE_ERROR_ON_MSG</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ARM_COMPUTE_ERROR_ON_MSG</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">cond, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">msg&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_error_8h_source.xhtml#l00456">456</a> of file <a class="el" href="_error_8h_source.xhtml">Error.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="reference_2_accumulate_8cpp_source.xhtml#l00080">arm_compute::test::validation::reference::accumulate_squared()</a>, <a class="el" href="reference_2_accumulate_8cpp_source.xhtml#l00058">arm_compute::test::validation::reference::accumulate_weighted()</a>, <a class="el" href="_i_weights_manager_8cpp_source.xhtml#l00117">IWeightsManager::acquire()</a>, <a class="el" href="_execution_helpers_8cpp_source.xhtml#l00073">arm_compute::graph::detail::allocate_all_input_tensors()</a>, <a class="el" href="_execution_helpers_8cpp_source.xhtml#l00086">arm_compute::graph::detail::allocate_all_output_tensors()</a>, <a class="el" href="_arithmetic_operations_8cpp_source.xhtml#l00188">arm_compute::test::validation::reference::arithmetic_operation()</a>, <a class="el" href="src_2core_2_utils_8cpp_source.xhtml#l00357">arm_compute::calculate_same_pad()</a>, <a class="el" href="_memory_manager_on_demand_8cpp_source.xhtml#l00068">MemoryManagerOnDemand::clear()</a>, <a class="el" href="_pool_manager_8cpp_source.xhtml#l00096">PoolManager::clear_pools()</a>, <a class="el" href="_c_l_runtime_context_8cpp_source.xhtml#l00031">CLRuntimeContext::CLRuntimeContext()</a>, <a class="el" href="_common_gemm_example_options_8cpp_source.xhtml#l00041">CommonGemmExampleOptions::CommonGemmExampleOptions()</a>, <a class="el" href="_shape_calculator_8h_source.xhtml#l00889">arm_compute::misc::shape_calculator::compute_mm_shape()</a>, <a class="el" href="_concatenate_layer_node_8cpp_source.xhtml#l00064">ConcatenateLayerNode::compute_output_descriptor()</a>, <a class="el" href="_reorg_layer_node_8cpp_source.xhtml#l00046">ReorgLayerNode::compute_output_descriptor()</a>, <a class="el" href="_shape_calculator_8h_source.xhtml#l00122">arm_compute::misc::shape_calculator::compute_reorg_output_shape()</a>, <a class="el" href="_g_c_pixel_wise_multiplication_kernel_8cpp_source.xhtml#l00050">GCPixelWiseMultiplicationKernel::configure()</a>, <a class="el" href="_n_e_remap_8cpp_source.xhtml#l00039">NERemap::configure()</a>, <a class="el" href="_g_c_normalization_layer_kernel_8cpp_source.xhtml#l00052">GCNormalizationLayerKernel::configure()</a>, <a class="el" href="_g_c_g_e_m_m_transpose1x_w_kernel_8cpp_source.xhtml#l00044">GCGEMMTranspose1xWKernel::configure()</a>, <a class="el" href="_c_l_histogram_kernel_8cpp_source.xhtml#l00057">CLHistogramKernel::configure()</a>, <a class="el" href="_g_c_direct_convolution_layer_kernel_8cpp_source.xhtml#l00055">GCDirectConvolutionLayerKernel&lt; kernel_size &gt;::configure()</a>, <a class="el" href="_n_e_absolute_difference_kernel_8cpp_source.xhtml#l00129">NEAbsoluteDifferenceKernel::configure()</a>, <a class="el" href="_g_c_softmax_layer_8cpp_source.xhtml#l00037">GCSoftmaxLayer::configure()</a>, <a class="el" href="_n_e_fast_corners_kernel_8cpp_source.xhtml#l00361">NEFastCornersKernel::configure()</a>, <a class="el" href="_n_e_canny_edge_kernel_8cpp_source.xhtml#l00875">NEGradientKernel::configure()</a>, <a class="el" href="_c_l_canny_edge_kernel_8cpp_source.xhtml#l00047">CLGradientKernel::configure()</a>, <a class="el" href="_c_l_non_linear_filter_kernel_8cpp_source.xhtml#l00062">CLNonLinearFilterKernel::configure()</a>, <a class="el" href="_c_p_p_box_with_non_maxima_suppression_limit_kernel_8cpp_source.xhtml#l00349">CPPBoxWithNonMaximaSuppressionLimitKernel::configure()</a>, <a class="el" href="_c_l_absolute_difference_kernel_8cpp_source.xhtml#l00049">CLAbsoluteDifferenceKernel::configure()</a>, <a class="el" href="_c_l_remap_kernel_8cpp_source.xhtml#l00054">CLRemapKernel::configure()</a>, <a class="el" href="_c_l_remap_8cpp_source.xhtml#l00043">CLRemap::configure()</a>, <a class="el" href="_c_l_fast_corners_kernel_8cpp_source.xhtml#l00054">CLFastCornersKernel::configure()</a>, <a class="el" href="_n_e_winograd_convolution_layer_8cpp_source.xhtml#l00310">NEWinogradConvolutionLayer::configure()</a>, <a class="el" href="_c_l_winograd_convolution_layer_8cpp_source.xhtml#l00114">CLWinogradConvolutionLayer::configure()</a>, <a class="el" href="_c_l_histogram_kernel_8cpp_source.xhtml#l00167">CLHistogramBorderKernel::configure()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_reduction_kernel_8cpp_source.xhtml#l00069">NEGEMMLowpMatrixAReductionKernel::configure()</a>, <a class="el" href="_g_c_convolution_layer_8cpp_source.xhtml#l00089">GCConvolutionLayer::configure()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_reduction_kernel_8cpp_source.xhtml#l00186">NEGEMMLowpMatrixBReductionKernel::configure()</a>, <a class="el" href="_n_e_g_e_m_m_convolution_layer_8cpp_source.xhtml#l00258">NEGEMMConvolutionLayer::configure()</a>, <a class="el" href="_c_l_g_e_m_m_convolution_layer_8cpp_source.xhtml#l00212">CLGEMMConvolutionLayer::configure()</a>, <a class="el" href="_execution_helpers_8cpp_source.xhtml#l00056">arm_compute::graph::detail::configure_all_tensors()</a>, <a class="el" href="_eltwise_layer_node_8cpp_source.xhtml#l00083">EltwiseLayerNode::configure_output()</a>, <a class="el" href="src_2graph_2_utils_8cpp_source.xhtml#l00178">arm_compute::graph::configure_tensor()</a>, <a class="el" href="tests_2_utils_8h_source.xhtml#l00489">arm_compute::test::coord2index()</a>, <a class="el" href="_helpers_8inl_source.xhtml#l00175">arm_compute::coords2index()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00461">arm_compute::graph::backends::detail::create_convolution_layer()</a>, <a class="el" href="_c_l_utils_8cpp_source.xhtml#l00029">arm_compute::create_image2d_from_buffer()</a>, <a class="el" href="runtime_2_c_l_2_c_l_helpers_8cpp_source.xhtml#l00089">arm_compute::create_opencl_context_and_device()</a>, <a class="el" href="runtime_2_g_l_e_s___c_o_m_p_u_t_e_2_g_c_helpers_8cpp_source.xhtml#l00031">arm_compute::create_opengl_display_and_context()</a>, <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00124">CLScheduler::default_init()</a>, <a class="el" href="_graph_manager_8cpp_source.xhtml#l00112">GraphManager::execute_graph()</a>, <a class="el" href="_assets_library_8h_source.xhtml#l00571">AssetsLibrary::fill()</a>, <a class="el" href="utils_2_utils_8h_source.xhtml#l00406">NPYLoader::fill_tensor()</a>, <a class="el" href="_graph_manager_8cpp_source.xhtml#l00046">GraphManager::finalize_graph()</a>, <a class="el" href="_backend_registry_8cpp_source.xhtml#l00051">BackendRegistry::get_backend()</a>, <a class="el" href="_helpers_8inl_source.xhtml#l00193">arm_compute::get_data_layout_dimension_index()</a>, <a class="el" href="src_2graph_2_utils_8cpp_source.xhtml#l00129">arm_compute::graph::get_dimension_idx()</a>, <a class="el" href="src_2graph_2_utils_8cpp_source.xhtml#l00123">arm_compute::graph::get_dimension_size()</a>, <a class="el" href="_helpers_8inl_source.xhtml#l00222">arm_compute::get_index_data_layout_dimension()</a>, <a class="el" href="_c_l_kernel_library_8cpp_source.xhtml#l01214">CLKernelLibrary::get_program()</a>, <a class="el" href="tests_2validation_2_helpers_8cpp_source.xhtml#l00377">arm_compute::test::validation::get_quantized_bounds()</a>, <a class="el" href="tests_2validation_2_helpers_8cpp_source.xhtml#l00386">arm_compute::test::validation::get_quantized_qasymm8_signed_bounds()</a>, <a class="el" href="tests_2validation_2_helpers_8cpp_source.xhtml#l00395">arm_compute::test::validation::get_symm_quantized_per_channel_bounds()</a>, <a class="el" href="_c_p_u_utils_8cpp_source.xhtml#l00414">arm_compute::utils::cpu::get_threads_hint()</a>, <a class="el" href="reference_2_h_o_g_detector_8cpp_source.xhtml#l00048">arm_compute::test::validation::reference::hog_detector()</a>, <a class="el" href="_i_distribution1_d_8cpp_source.xhtml#l00030">IDistribution1D::IDistribution1D()</a>, <a class="el" href="tests_2_utils_8h_source.xhtml#l00460">arm_compute::test::index2coord()</a>, <a class="el" href="_helpers_8inl_source.xhtml#l00156">arm_compute::index2coords()</a>, <a class="el" href="_h_o_g_info_8cpp_source.xhtml#l00044">HOGInfo::init()</a>, <a class="el" href="_pyramid_info_8cpp_source.xhtml#l00055">PyramidInfo::init()</a>, <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00150">CLScheduler::init()</a>, <a class="el" href="_graph_manager_8cpp_source.xhtml#l00137">GraphManager::invalidate_graph()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00051">CLSymbols::load_default()</a>, <a class="el" href="_pool_manager_8cpp_source.xhtml#l00039">PoolManager::lock_pool()</a>, <a class="el" href="main_8cpp_source.xhtml#l00098">main()</a>, <a class="el" href="_c_l_compile_context_8cpp_source.xhtml#l00356">CLCompileContext::max_local_workgroup_size()</a>, <a class="el" href="_g_c_scheduler_8cpp_source.xhtml#l00086">GCScheduler::memory_barrier()</a>, <a class="el" href="_memory_manager_on_demand_8cpp_source.xhtml#l00034">MemoryManagerOnDemand::MemoryManagerOnDemand()</a>, <a class="el" href="arm__compute_2core_2_utils_8h_source.xhtml#l01284">arm_compute::num_of_elements_in_range()</a>, <a class="el" href="_i_scheduler_8cpp_source.xhtml#l00053">IScheduler::num_threads_hint()</a>, <a class="el" href="_p_m_u_8cpp_source.xhtml#l00069">PMU::open()</a>, <a class="el" href="_m_l_g_o_parser_8cpp_source.xhtml#l00117">TokenStream::operator bool()</a>, <a class="el" href="utils_2_utils_8cpp_source.xhtml#l00202">arm_compute::utils::parse_ppm_header()</a>, <a class="el" href="_m_l_g_o_parser_8cpp_source.xhtml#l00134">TokenStream::peek()</a>, <a class="el" href="_memory_manager_on_demand_8cpp_source.xhtml#l00051">MemoryManagerOnDemand::populate()</a>, <a class="el" href="_heuristic_tree_8cpp_source.xhtml#l00104">HeuristicTree::query()</a>, <a class="el" href="_pool_manager_8cpp_source.xhtml#l00064">PoolManager::register_pool()</a>, <a class="el" href="_pool_manager_8cpp_source.xhtml#l00076">PoolManager::release_pool()</a>, <a class="el" href="reference_2_remap_8cpp_source.xhtml#l00041">arm_compute::test::validation::reference::remap()</a>, <a class="el" href="_i_g_c_simple_function_8cpp_source.xhtml#l00038">IGCSimpleFunction::run()</a>, <a class="el" href="_i_c_l_simple_function_8cpp_source.xhtml#l00043">ICLSimpleFunction::run()</a>, <a class="el" href="_i_weights_manager_8cpp_source.xhtml#l00051">IWeightsManager::run()</a>, <a class="el" href="_cl_pooling_8cpp_source.xhtml#l00093">ClPooling::run()</a>, <a class="el" href="_n_e_cumulative_distribution_kernel_8cpp_source.xhtml#l00072">NECumulativeDistributionKernel::run()</a>, <a class="el" href="_n_e_q_l_s_t_m_layer_normalization_kernel_8cpp_source.xhtml#l00166">NEQLSTMLayerNormalizationKernel::run()</a>, <a class="el" href="_cpu_pooling_assembly_dispatch_8cpp_source.xhtml#l00082">CpuPoolingAssemblyDispatch::run()</a>, <a class="el" href="_cpu_softmax_8cpp_source.xhtml#l00140">CpuSoftmaxGeneric&lt; IS_LOG &gt;::run()</a>, <a class="el" href="_n_e_laplacian_pyramid_8cpp_source.xhtml#l00053">NELaplacianPyramid::run()</a>, <a class="el" href="_n_e_canny_edge_8cpp_source.xhtml#l00169">NECannyEdge::run()</a>, <a class="el" href="_c_l_laplacian_pyramid_8cpp_source.xhtml#l00095">CLLaplacianPyramid::run()</a>, <a class="el" href="_n_e_optical_flow_8cpp_source.xhtml#l00128">NEOpticalFlow::run()</a>, <a class="el" href="_c_l_fast_corners_8cpp_source.xhtml#l00105">CLFastCorners::run()</a>, <a class="el" href="_n_e_crop_resize_8cpp_source.xhtml#l00104">NECropResize::run()</a>, <a class="el" href="_n_e_laplacian_reconstruct_8cpp_source.xhtml#l00089">NELaplacianReconstruct::run()</a>, <a class="el" href="_n_e_h_o_g_multi_detection_8cpp_source.xhtml#l00234">NEHOGMultiDetection::run()</a>, <a class="el" href="_n_e_harris_corners_8cpp_source.xhtml#l00189">NEHarrisCorners::run()</a>, <a class="el" href="_c_l_laplacian_reconstruct_8cpp_source.xhtml#l00092">CLLaplacianReconstruct::run()</a>, <a class="el" href="_c_l_harris_corners_8cpp_source.xhtml#l00168">CLHarrisCorners::run()</a>, <a class="el" href="_n_e_gaussian_pyramid_8cpp_source.xhtml#l00120">NEGaussianPyramidHalf::run()</a>, <a class="el" href="_c_l_gaussian_pyramid_8cpp_source.xhtml#l00122">CLGaussianPyramidHalf::run()</a>, <a class="el" href="_c_l_h_o_g_multi_detection_8cpp_source.xhtml#l00244">CLHOGMultiDetection::run()</a>, <a class="el" href="_c_l_crop_resize_8cpp_source.xhtml#l00273">CLCropResize::run()</a>, <a class="el" href="_c_l_2_helper_8h_source.xhtml#l00124">CLSynthetizeFunctionInitOutputWithZeroAndWithZeroConstantBorder&lt; K, bordersize &gt;::run()</a>, <a class="el" href="_c_l_optical_flow_8cpp_source.xhtml#l00162">CLOpticalFlow::run()</a>, <a class="el" href="_c_l_gaussian_pyramid_8cpp_source.xhtml#l00195">CLGaussianPyramidOrb::run()</a>, <a class="el" href="_n_e_gaussian_pyramid_8cpp_source.xhtml#l00187">NEGaussianPyramidOrb::run()</a>, <a class="el" href="benchmark__examples_2_run_example_8cpp_source.xhtml#l00097">arm_compute::utils::run_example()</a>, <a class="el" href="_o_m_p_scheduler_8cpp_source.xhtml#l00057">OMPScheduler::schedule_op()</a>, <a class="el" href="_graph_utils_8h_source.xhtml#l00680">arm_compute::graph_utils::set_target_hint()</a>, <a class="el" href="_i_simple_lifetime_manager_8cpp_source.xhtml#l00067">ISimpleLifetimeManager::start_lifetime()</a>, <a class="el" href="_m_l_g_o_parser_8cpp_source.xhtml#l00123">TokenStream::take()</a>, <a class="el" href="_pool_manager_8cpp_source.xhtml#l00050">PoolManager::unlock_pool()</a>, <a class="el" href="_execution_helpers_8cpp_source.xhtml#l00039">arm_compute::graph::detail::validate_all_nodes()</a>, <a class="el" href="_assets_library_8cpp_source.xhtml#l00522">arm_compute::test::detail::validate_npy_header()</a>, and <a class="el" href="reference_2_winograd_8cpp_source.xhtml#l00360">arm_compute::test::validation::reference::winograd_filter_transform()</a>.</p>

</div>
</div>
<a id="acaa348bf0c7eb9493c72092b7293d45f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acaa348bf0c7eb9493c72092b7293d45f">&#9670;&nbsp;</a></span>ARM_COMPUTE_ERROR_ON_MSG_VAR</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ARM_COMPUTE_ERROR_ON_MSG_VAR</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">cond, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">msg, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>...</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_error_8h_source.xhtml#l00457">457</a> of file <a class="el" href="_error_8h_source.xhtml">Error.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_2_i_c_l_kernel_8h_source.xhtml#l00409">ICLKernel::add_array_argument()</a>, <a class="el" href="_i_c_l_kernel_8cpp_source.xhtml#l00088">ICLKernel::add_tensor_argument()</a>, <a class="el" href="_c_l_color_convert_kernel_8cpp_source.xhtml#l00052">CLColorConvertKernel::configure()</a>, <a class="el" href="runtime_2_g_l_e_s___c_o_m_p_u_t_e_2_g_c_helpers_8cpp_source.xhtml#l00031">arm_compute::create_opengl_display_and_context()</a>, <a class="el" href="_i_g_c_kernel_8cpp_source.xhtml#l00041">arm_compute::enqueue()</a>, <a class="el" href="_g_c_kernel_library_8cpp_source.xhtml#l00140">GCKernel::GCKernel()</a>, <a class="el" href="_i_g_c_kernel_8cpp_source.xhtml#l00069">IGCKernel::kernel()</a>, <a class="el" href="_g_c_scheduler_8cpp_source.xhtml#l00086">GCScheduler::memory_barrier()</a>, <a class="el" href="_image_loader_8h_source.xhtml#l00381">PPMLoader::open()</a>, <a class="el" href="_c_p_p_detection_output_layer_8cpp_source.xhtml#l00444">CPPDetectionOutputLayer::run()</a>, and <a class="el" href="_g_c_kernel_library_8cpp_source.xhtml#l00177">GCKernel::update_shader_params()</a>.</p>

</div>
</div>
<a id="a938dcd406ce611ef5345ad2531cdb948"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a938dcd406ce611ef5345ad2531cdb948">&#9670;&nbsp;</a></span>ARM_COMPUTE_ERROR_THROW_ON</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ARM_COMPUTE_ERROR_THROW_ON</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">status</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_error_8h_source.xhtml#l00455">455</a> of file <a class="el" href="_error_8h_source.xhtml">Error.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cpu_floor_kernel_8cpp_source.xhtml#l00110">CpuFloorKernel::configure()</a>, <a class="el" href="_cpu_reshape_kernel_8cpp_source.xhtml#l00081">CpuReshapeKernel::configure()</a>, <a class="el" href="_cpu_copy_kernel_8cpp_source.xhtml#l00079">CpuCopyKernel::configure()</a>, <a class="el" href="_cpu_softmax_kernel_8cpp_source.xhtml#l00219">CpuLogits1DMaxKernel::configure()</a>, <a class="el" href="_cl_floor_kernel_8cpp_source.xhtml#l00064">ClFloorKernel::configure()</a>, <a class="el" href="_cl_reshape_kernel_8cpp_source.xhtml#l00064">ClReshapeKernel::configure()</a>, <a class="el" href="_cpu_permute_kernel_8cpp_source.xhtml#l00243">CpuPermuteKernel::configure()</a>, <a class="el" href="_cl_copy_kernel_8cpp_source.xhtml#l00071">ClCopyKernel::configure()</a>, <a class="el" href="_cl_elementwise_unary_kernel_8cpp_source.xhtml#l00065">ClElementWiseUnaryKernel::configure()</a>, <a class="el" href="_n_e_logical_kernel_8cpp_source.xhtml#l00278">NELogicalKernel::configure()</a>, <a class="el" href="_cpu_concatenate_width_kernel_8cpp_source.xhtml#l00071">CpuConcatenateWidthKernel::configure()</a>, <a class="el" href="_cpu_activation_kernel_8cpp_source.xhtml#l00210">CpuActivationKernel::configure()</a>, <a class="el" href="_cpu_concatenate_height_kernel_8cpp_source.xhtml#l00071">CpuConcatenateHeightKernel::configure()</a>, <a class="el" href="_n_e_scale_8cpp_source.xhtml#l00104">NEScale::configure()</a>, <a class="el" href="_c_l_strided_slice_kernel_8cpp_source.xhtml#l00090">CLStridedSliceKernel::configure()</a>, <a class="el" href="_c_l_transpose_kernel_8cpp_source.xhtml#l00084">CLTransposeKernel::configure()</a>, <a class="el" href="_cpu_concatenate_batch_kernel_8cpp_source.xhtml#l00155">CpuConcatenateBatchKernel::configure()</a>, <a class="el" href="_cpu_pooling_kernel_8cpp_source.xhtml#l00385">CpuPoolingKernel::configure()</a>, <a class="el" href="_cl_activation_kernel_8cpp_source.xhtml#l00095">ClActivationKernel::configure()</a>, <a class="el" href="_cl_width_concatenate2_tensors_kernel_8cpp_source.xhtml#l00071">ClWidthConcatenate2TensorsKernel::configure()</a>, <a class="el" href="_c_l_scale_kernel_8cpp_source.xhtml#l00164">CLScaleKernel::configure()</a>, <a class="el" href="_cl_height_concatenate_kernel_8cpp_source.xhtml#l00075">ClHeightConcatenateKernel::configure()</a>, <a class="el" href="_cl_pooling_kernel_8cpp_source.xhtml#l00208">ClPoolingKernel::configure()</a>, <a class="el" href="_cl_width_concatenate_kernel_8cpp_source.xhtml#l00074">ClWidthConcatenateKernel::configure()</a>, <a class="el" href="_c_p_p_detection_output_layer_8cpp_source.xhtml#l00391">CPPDetectionOutputLayer::configure()</a>, <a class="el" href="_cl_width_concatenate4_tensors_kernel_8cpp_source.xhtml#l00077">ClWidthConcatenate4TensorsKernel::configure()</a>, <a class="el" href="_cl_batch_concatenate_kernel_8cpp_source.xhtml#l00067">ClBatchConcatenateKernel::configure()</a>, <a class="el" href="_cl_depth_concatenate_kernel_8cpp_source.xhtml#l00066">ClDepthConcatenateKernel::configure()</a>, <a class="el" href="_cl_fill_kernel_8cpp_source.xhtml#l00052">ClFillKernel::configure()</a>, <a class="el" href="_n_e_dequantization_layer_kernel_8cpp_source.xhtml#l00370">NEDequantizationLayerKernel::configure()</a>, <a class="el" href="_cpu_concatenate_depth_kernel_8cpp_source.xhtml#l00155">CpuConcatenateDepthKernel::configure()</a>, <a class="el" href="_cpu_concatenate_8cpp_source.xhtml#l00050">CpuConcatenate::configure()</a>, <a class="el" href="_n_e_reverse_kernel_8cpp_source.xhtml#l00063">NEReverseKernel::configure()</a>, <a class="el" href="_n_e_tile_kernel_8cpp_source.xhtml#l00067">NETileKernel::configure()</a>, <a class="el" href="_g_c_pooling_layer_kernel_8cpp_source.xhtml#l00230">GCPoolingLayerKernel::configure()</a>, <a class="el" href="_n_e_batch_to_space_layer_kernel_8cpp_source.xhtml#l00088">NEBatchToSpaceLayerKernel::configure()</a>, <a class="el" href="_n_e_convert_quantized_signedness_kernel_8cpp_source.xhtml#l00077">NEConvertQuantizedSignednessKernel::configure()</a>, <a class="el" href="_n_e_depth_to_space_layer_kernel_8cpp_source.xhtml#l00074">NEDepthToSpaceLayerKernel::configure()</a>, <a class="el" href="_n_e_prior_box_layer_kernel_8cpp_source.xhtml#l00200">NEPriorBoxLayerKernel::configure()</a>, <a class="el" href="_n_e_space_to_depth_layer_kernel_8cpp_source.xhtml#l00077">NESpaceToDepthLayerKernel::configure()</a>, <a class="el" href="_g_c_normalize_planar_y_u_v_layer_kernel_8cpp_source.xhtml#l00096">GCNormalizePlanarYUVLayerKernel::configure()</a>, <a class="el" href="_n_e_channel_shuffle_layer_kernel_8cpp_source.xhtml#l00141">NEChannelShuffleLayerKernel::configure()</a>, <a class="el" href="_n_e_generate_proposals_layer_kernel_8cpp_source.xhtml#l00073">NEComputeAllAnchorsKernel::configure()</a>, <a class="el" href="_n_e_instance_normalization_layer_kernel_8cpp_source.xhtml#l00220">NEInstanceNormalizationLayerKernel::configure()</a>, <a class="el" href="_c_p_p_top_k_v_kernel_8cpp_source.xhtml#l00099">CPPTopKVKernel::configure()</a>, <a class="el" href="_n_e_reorg_layer_kernel_8cpp_source.xhtml#l00073">NEReorgLayerKernel::configure()</a>, <a class="el" href="_n_e_threshold_kernel_8cpp_source.xhtml#l00077">NEThresholdKernel::configure()</a>, <a class="el" href="_c_l_dequantization_layer_kernel_8cpp_source.xhtml#l00068">CLDequantizationLayerKernel::configure()</a>, <a class="el" href="_g_c_arithmetic_addition_kernel_8cpp_source.xhtml#l00094">GCArithmeticAdditionKernel::configure()</a>, <a class="el" href="_cl_concatenate_8cpp_source.xhtml#l00052">ClConcatenate::configure()</a>, <a class="el" href="_n_e_f_f_t_digit_reverse_kernel_8cpp_source.xhtml#l00077">NEFFTDigitReverseKernel::configure()</a>, <a class="el" href="_n_e_f_f_t_scale_kernel_8cpp_source.xhtml#l00094">NEFFTScaleKernel::configure()</a>, <a class="el" href="_c_l_depthwise_convolution_layer_reshape_weights_kernel_8cpp_source.xhtml#l00093">CLDepthwiseConvolutionLayerReshapeWeightsKernel::configure()</a>, <a class="el" href="_c_l_max_unpooling_layer_kernel_8cpp_source.xhtml#l00080">CLMaxUnpoolingLayerKernel::configure()</a>, <a class="el" href="_n_e_q_l_s_t_m_layer_normalization_kernel_8cpp_source.xhtml#l00084">NEQLSTMLayerNormalizationKernel::configure()</a>, <a class="el" href="_n_e_space_to_batch_layer_kernel_8cpp_source.xhtml#l00093">NESpaceToBatchLayerKernel::configure()</a>, <a class="el" href="_c_l_min_max_layer_kernel_8cpp_source.xhtml#l00095">CLMinMaxLayerKernel::configure()</a>, <a class="el" href="_c_l_channel_shuffle_layer_kernel_8cpp_source.xhtml#l00098">CLChannelShuffleLayerKernel::configure()</a>, <a class="el" href="_c_l_select_kernel_8cpp_source.xhtml#l00070">CLSelectKernel::configure()</a>, <a class="el" href="_c_p_p_permute_kernel_8cpp_source.xhtml#l00102">CPPPermuteKernel::configure()</a>, <a class="el" href="_n_e_normalization_layer_kernel_8cpp_source.xhtml#l00073">NENormalizationLayerKernel::configure()</a>, <a class="el" href="_cpu_add_kernel_8cpp_source.xhtml#l00300">CpuAddKernel::configure()</a>, <a class="el" href="_n_e_transpose_kernel_8cpp_source.xhtml#l00469">NETransposeKernel::configure()</a>, <a class="el" href="_cpu_elementwise_unary_kernel_8cpp_source.xhtml#l00111">CpuElementwiseUnaryKernel::configure()</a>, <a class="el" href="_cpu_sub_kernel_8cpp_source.xhtml#l00199">CpuSubKernel::configure()</a>, <a class="el" href="_g_c_batch_normalization_layer_kernel_8cpp_source.xhtml#l00141">GCBatchNormalizationLayerKernel::configure()</a>, <a class="el" href="_c_l_reverse_kernel_8cpp_source.xhtml#l00071">CLReverseKernel::configure()</a>, <a class="el" href="_c_l_space_to_depth_layer_kernel_8cpp_source.xhtml#l00076">CLSpaceToDepthLayerKernel::configure()</a>, <a class="el" href="_n_e_quantization_layer_kernel_8cpp_source.xhtml#l00112">NEQuantizationLayerKernel::configure()</a>, <a class="el" href="_c_l_depth_to_space_layer_kernel_8cpp_source.xhtml#l00075">CLDepthToSpaceLayerKernel::configure()</a>, <a class="el" href="_c_l_batch_to_space_layer_kernel_8cpp_source.xhtml#l00093">CLBatchToSpaceLayerKernel::configure()</a>, <a class="el" href="_n_e_reduce_mean_8cpp_source.xhtml#l00113">NEReduceMean::configure()</a>, <a class="el" href="_cl_permute_kernel_8cpp_source.xhtml#l00085">ClPermuteKernel::configure()</a>, <a class="el" href="_c_l_deconvolution_layer_upsample_kernel_8cpp_source.xhtml#l00075">CLDeconvolutionLayerUpsampleKernel::configure()</a>, <a class="el" href="_n_e_max_unpooling_layer_kernel_8cpp_source.xhtml#l00076">NEMaxUnpoolingLayerKernel::configure()</a>, <a class="el" href="_n_e_range_kernel_8cpp_source.xhtml#l00119">NERangeKernel::configure()</a>, <a class="el" href="_c_l_generate_proposals_layer_kernel_8cpp_source.xhtml#l00080">CLComputeAllAnchorsKernel::configure()</a>, <a class="el" href="_n_e_f_f_t2_d_8cpp_source.xhtml#l00042">NEFFT2D::configure()</a>, <a class="el" href="_n_e_r_n_n_layer_8cpp_source.xhtml#l00081">NERNNLayer::configure()</a>, <a class="el" href="_c_l_space_to_batch_layer_kernel_8cpp_source.xhtml#l00094">CLSpaceToBatchLayerKernel::configure()</a>, <a class="el" href="_n_e_f_f_t_radix_stage_kernel_8cpp_source.xhtml#l00987">NEFFTRadixStageKernel::configure()</a>, <a class="el" href="_c_l_f_f_t_scale_kernel_8cpp_source.xhtml#l00084">CLFFTScaleKernel::configure()</a>, <a class="el" href="_n_e_mean_std_dev_normalization_kernel_8cpp_source.xhtml#l00156">NEMeanStdDevNormalizationKernel::configure()</a>, <a class="el" href="_n_e_unstack_8cpp_source.xhtml#l00062">NEUnstack::configure()</a>, <a class="el" href="_c_l_gather_kernel_8cpp_source.xhtml#l00086">CLGatherKernel::configure()</a>, <a class="el" href="_c_l_normalization_layer_kernel_8cpp_source.xhtml#l00116">CLNormalizationLayerKernel::configure()</a>, <a class="el" href="_c_l_reduce_mean_8cpp_source.xhtml#l00112">CLReduceMean::configure()</a>, <a class="el" href="_c_l_q_l_s_t_m_layer_normalization_kernel_8cpp_source.xhtml#l00088">CLQLSTMLayerNormalizationKernel::configure()</a>, <a class="el" href="_n_e_bounding_box_transform_kernel_8cpp_source.xhtml#l00088">NEBoundingBoxTransformKernel::configure()</a>, <a class="el" href="_c_l_tile_kernel_8cpp_source.xhtml#l00067">CLTileKernel::configure()</a>, <a class="el" href="_n_e_min_max_layer_kernel_8cpp_source.xhtml#l00096">NEMinMaxLayerKernel::configure()</a>, <a class="el" href="_n_e_pad_layer_kernel_8cpp_source.xhtml#l00186">NEPadLayerKernel::configure()</a>, <a class="el" href="_n_e_scale_kernel_8cpp_source.xhtml#l00199">NEScaleKernel::configure()</a>, <a class="el" href="_c_l_comparison_kernel_8cpp_source.xhtml#l00116">CLComparisonKernel::configure()</a>, <a class="el" href="_n_e_stack_layer_kernel_8cpp_source.xhtml#l00092">NEStackLayerKernel::configure()</a>, <a class="el" href="_c_l_unstack_8cpp_source.xhtml#l00067">CLUnstack::configure()</a>, <a class="el" href="_g_c_g_e_m_m_matrix_multiply_kernel_8cpp_source.xhtml#l00188">GCGEMMMatrixMultiplyKernel::configure()</a>, <a class="el" href="_n_e_reduction_operation_8cpp_source.xhtml#l00104">NEReductionOperation::configure()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_quantize_down_int32_scale_by_fixed_point_kernel_8cpp_source.xhtml#l00080">CLGEMMLowpQuantizeDownInt32ScaleByFixedPointKernel::configure()</a>, <a class="el" href="_n_e_convert_fully_connected_weights_kernel_8cpp_source.xhtml#l00038">NEConvertFullyConnectedWeightsKernel::configure()</a>, <a class="el" href="_n_e_direct_convolution_layer_output_stage_kernel_8cpp_source.xhtml#l00385">NEDirectConvolutionLayerOutputStageKernel::configure()</a>, <a class="el" href="_n_e_direct_convolution_layer_kernel_8cpp_source.xhtml#l01232">NEDirectConvolutionLayerKernel::configure()</a>, <a class="el" href="_n_e_gather_kernel_8cpp_source.xhtml#l00135">NEGatherKernel::configure()</a>, <a class="el" href="_n_e_g_e_m_m_matrix_addition_kernel_8cpp_source.xhtml#l00118">NEGEMMMatrixAdditionKernel::configure()</a>, <a class="el" href="_c_p_p_non_maximum_suppression_kernel_8cpp_source.xhtml#l00062">CPPNonMaximumSuppressionKernel::configure()</a>, <a class="el" href="_c_l_f_f_t_digit_reverse_kernel_8cpp_source.xhtml#l00081">CLFFTDigitReverseKernel::configure()</a>, <a class="el" href="_n_e_reduction_operation_kernel_8cpp_source.xhtml#l01660">NEReductionOperationKernel::configure()</a>, <a class="el" href="_n_e_select_kernel_8cpp_source.xhtml#l00168">NESelectKernel::configure()</a>, <a class="el" href="_c_p_p_detection_post_process_layer_8cpp_source.xhtml#l00216">CPPDetectionPostProcessLayer::configure()</a>, <a class="el" href="_n_e_depthwise_convolution_assembly_dispatch_8cpp_source.xhtml#l00347">NEDepthwiseConvolutionAssemblyDispatch::configure()</a>, <a class="el" href="_c_l_quantization_layer_kernel_8cpp_source.xhtml#l00067">CLQuantizationLayerKernel::configure()</a>, <a class="el" href="_c_l_reorg_layer_kernel_8cpp_source.xhtml#l00078">CLReorgLayerKernel::configure()</a>, <a class="el" href="_n_e_fuse_batch_normalization_kernel_8cpp_source.xhtml#l00422">NEFuseBatchNormalizationKernel::configure()</a>, <a class="el" href="_n_e_g_e_m_m_matrix_multiply_kernel_8cpp_source.xhtml#l01093">NEGEMMMatrixMultiplyKernel::configure()</a>, <a class="el" href="_c_l_instance_normalization_layer_kernel_8cpp_source.xhtml#l00084">CLInstanceNormalizationLayerKernel::configure()</a>, <a class="el" href="_c_l_mean_std_dev_normalization_kernel_8cpp_source.xhtml#l00090">CLMeanStdDevNormalizationKernel::configure()</a>, <a class="el" href="_n_e_crop_resize_8cpp_source.xhtml#l00057">NECropResize::configure()</a>, <a class="el" href="_cl_crop_kernel_8cpp_source.xhtml#l00050">ClCropKernel::configure()</a>, <a class="el" href="_n_e_crop_kernel_8cpp_source.xhtml#l00243">NECropKernel::configure()</a>, <a class="el" href="_c_l_softmax_layer_kernel_8cpp_source.xhtml#l00163">CLLogits1DMaxShiftExpSumKernel::configure()</a>, <a class="el" href="_n_e_r_o_i_align_layer_kernel_8cpp_source.xhtml#l00084">NEROIAlignLayerKernel::configure()</a>, <a class="el" href="_c_l_range_kernel_8cpp_source.xhtml#l00078">CLRangeKernel::configure()</a>, <a class="el" href="_c_l_normalize_planar_y_u_v_layer_kernel_8cpp_source.xhtml#l00104">CLNormalizePlanarYUVLayerKernel::configure()</a>, <a class="el" href="_n_e_batch_normalization_layer_kernel_8cpp_source.xhtml#l00312">NEBatchNormalizationLayerKernel::configure()</a>, <a class="el" href="_n_e_f_f_t1_d_8cpp_source.xhtml#l00043">NEFFT1D::configure()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_matrix_multiply_kernel_8cpp_source.xhtml#l00903">NEGEMMLowpMatrixMultiplyKernel::configure()</a>, <a class="el" href="_n_e_strided_slice_kernel_8cpp_source.xhtml#l00135">NEStridedSliceKernel::configure()</a>, <a class="el" href="_c_l_mean_std_dev_kernel_8cpp_source.xhtml#l00069">CLMeanStdDevKernel::configure()</a>, <a class="el" href="_c_l_pad_layer_kernel_8cpp_source.xhtml#l00077">CLPadLayerKernel::configure()</a>, <a class="el" href="_cpu_softmax_8cpp_source.xhtml#l00045">CpuSoftmaxGeneric&lt; IS_LOG &gt;::configure()</a>, <a class="el" href="_n_e_detection_post_process_layer_8cpp_source.xhtml#l00041">NEDetectionPostProcessLayer::configure()</a>, <a class="el" href="_c_l_convert_fully_connected_weights_kernel_8cpp_source.xhtml#l00048">CLConvertFullyConnectedWeightsKernel::configure()</a>, <a class="el" href="_c_l_f_f_t_radix_stage_kernel_8cpp_source.xhtml#l00092">CLFFTRadixStageKernel::configure()</a>, <a class="el" href="_c_l_prior_box_layer_kernel_8cpp_source.xhtml#l00109">CLPriorBoxLayerKernel::configure()</a>, <a class="el" href="_c_l_reduction_operation_kernel_8cpp_source.xhtml#l00136">CLReductionOperationKernel::configure()</a>, <a class="el" href="_c_l_f_f_t2_d_8cpp_source.xhtml#l00047">CLFFT2D::configure()</a>, <a class="el" href="_c_l_l2_normalize_layer_kernel_8cpp_source.xhtml#l00104">CLL2NormalizeLayerKernel::configure()</a>, <a class="el" href="_n_e_depth_convert_layer_kernel_8cpp_source.xhtml#l00110">NEDepthConvertLayerKernel::configure()</a>, <a class="el" href="_c_l_bounding_box_transform_kernel_8cpp_source.xhtml#l00097">CLBoundingBoxTransformKernel::configure()</a>, <a class="el" href="_n_e_g_e_m_m_convolution_layer_8cpp_source.xhtml#l00060">NEConvolutionLayerReshapeWeights::configure()</a>, <a class="el" href="_c_l_r_n_n_layer_8cpp_source.xhtml#l00091">CLRNNLayer::configure()</a>, <a class="el" href="_n_e_depthwise_convolution_layer_native_kernel_8cpp_source.xhtml#l00775">NEDepthwiseConvolutionLayerNativeKernel::configure()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_quantize_down_int32_scale_kernel_8cpp_source.xhtml#l00263">NEGEMMLowpQuantizeDownInt32ScaleKernel::configure()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_matrix_multiply_native_kernel_8cpp_source.xhtml#l00167">CLGEMMLowpMatrixMultiplyNativeKernel::configure()</a>, <a class="el" href="_n_e_g_e_m_m_interleave4x4_kernel_8cpp_source.xhtml#l00073">NEGEMMInterleave4x4Kernel::configure()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_offset_contribution_kernel_8cpp_source.xhtml#l00363">NEGEMMLowpOffsetContributionKernel::configure()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_quantize_down_int32_to_int16_scale_by_fixed_point_kernel_8cpp_source.xhtml#l00196">NEGEMMLowpQuantizeDownInt32ToInt16ScaleByFixedPointKernel::configure()</a>, <a class="el" href="_n_e_pad_layer_8cpp_source.xhtml#l00167">NEPadLayer::configure()</a>, <a class="el" href="_c_l_f_f_t1_d_8cpp_source.xhtml#l00055">CLFFT1D::configure()</a>, <a class="el" href="_c_l_stack_layer_kernel_8cpp_source.xhtml#l00086">CLStackLayerKernel::configure()</a>, <a class="el" href="_c_l_g_e_m_m_reshape_l_h_s_matrix_kernel_8cpp_source.xhtml#l00121">CLGEMMReshapeLHSMatrixKernel::configure()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_quantize_down_int32_to_int8_scale_by_fixed_point_kernel_8cpp_source.xhtml#l00204">NEGEMMLowpQuantizeDownInt32ToInt8ScaleByFixedPointKernel::configure()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_quantize_down_int32_to_uint8_scale_by_fixed_point_kernel_8cpp_source.xhtml#l00206">NEGEMMLowpQuantizeDownInt32ToUint8ScaleByFixedPointKernel::configure()</a>, <a class="el" href="_c_l_depth_convert_layer_kernel_8cpp_source.xhtml#l00081">CLDepthConvertLayerKernel::configure()</a>, <a class="el" href="_c_l_depthwise_convolution_layer3x3_n_c_h_w_kernel_8cpp_source.xhtml#l00255">CLDepthwiseConvolutionLayer3x3NCHWKernel::configure()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_quantize_down_int32_scale_kernel_8cpp_source.xhtml#l00084">CLGEMMLowpQuantizeDownInt32ScaleKernel::configure()</a>, <a class="el" href="_n_e_g_e_m_m_conv2d_8cpp_source.xhtml#l00093">NEGEMMConv2d::configure()</a>, <a class="el" href="_c_l_arg_min_max_layer_kernel_8cpp_source.xhtml#l00079">CLArgMinMaxLayerKernel::configure()</a>, <a class="el" href="_c_l_depthwise_convolution_layer3x3_n_h_w_c_kernel_8cpp_source.xhtml#l00202">CLDepthwiseConvolutionLayer3x3NHWCKernel::configure()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_quantize_down_int32_scale_by_float_kernel_8cpp_source.xhtml#l00090">CLGEMMLowpQuantizeDownInt32ScaleByFloatKernel::configure()</a>, <a class="el" href="_n_e_col2_im_kernel_8cpp_source.xhtml#l00109">NECol2ImKernel::configure()</a>, <a class="el" href="_g_c_g_e_m_m_8cpp_source.xhtml#l00081">GCGEMM::configure()</a>, <a class="el" href="_c_l_r_o_i_pooling_layer_kernel_8cpp_source.xhtml#l00080">CLROIPoolingLayerKernel::configure()</a>, <a class="el" href="_n_e_winograd_convolution_layer_8cpp_source.xhtml#l00310">NEWinogradConvolutionLayer::configure()</a>, <a class="el" href="_g_c_im2_col_kernel_8cpp_source.xhtml#l00069">GCIm2ColKernel::configure()</a>, <a class="el" href="_c_l_pad_layer_8cpp_source.xhtml#l00043">CLPadLayer::configure()</a>, <a class="el" href="_c_l_deconvolution_reshape_output_kernel_8cpp_source.xhtml#l00124">CLDeconvolutionReshapeOutputKernel::configure()</a>, <a class="el" href="_n_e_pixel_wise_multiplication_kernel_8cpp_source.xhtml#l01482">NEPixelWiseMultiplicationKernel::configure()</a>, <a class="el" href="_cpu_softmax_kernel_8cpp_source.xhtml#l00312">CpuLogits1DSoftmaxKernel&lt; IS_LOG &gt;::configure()</a>, <a class="el" href="_c_l_r_o_i_align_layer_kernel_8cpp_source.xhtml#l00091">CLROIAlignLayerKernel::configure()</a>, <a class="el" href="_c_l_winograd_input_transform_kernel_8cpp_source.xhtml#l00113">CLWinogradInputTransformKernel::configure()</a>, <a class="el" href="_c_l_fuse_batch_normalization_kernel_8cpp_source.xhtml#l00116">CLFuseBatchNormalizationKernel::configure()</a>, <a class="el" href="_c_l_col2_im_kernel_8cpp_source.xhtml#l00097">CLCol2ImKernel::configure()</a>, <a class="el" href="_c_l_batch_normalization_layer_kernel_8cpp_source.xhtml#l00120">CLBatchNormalizationLayerKernel::configure()</a>, <a class="el" href="_n_e_weights_reshape_kernel_8cpp_source.xhtml#l00093">NEWeightsReshapeKernel::configure()</a>, <a class="el" href="_c_l_g_e_m_m_matrix_multiply_native_kernel_8cpp_source.xhtml#l00213">CLGEMMMatrixMultiplyNativeKernel::configure()</a>, <a class="el" href="_c_l_g_e_m_m_convolution_layer_8cpp_source.xhtml#l00071">CLConvolutionLayerReshapeWeights::configure()</a>, <a class="el" href="_c_l_winograd_filter_transform_kernel_8cpp_source.xhtml#l00102">CLWinogradFilterTransformKernel::configure()</a>, <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8cpp_source.xhtml#l00281">CLGEMMMatrixMultiplyKernel::configure()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_matrix_multiply_reshaped_kernel_8cpp_source.xhtml#l00141">CLGEMMLowpMatrixMultiplyReshapedKernel::configure()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_offset_contribution_kernel_8cpp_source.xhtml#l00108">CLGEMMLowpOffsetContributionKernel::configure()</a>, <a class="el" href="_n_e_generate_proposals_layer_8cpp_source.xhtml#l00070">NEGenerateProposalsLayer::configure()</a>, <a class="el" href="_c_l_winograd_output_transform_kernel_8cpp_source.xhtml#l00132">CLWinogradOutputTransformKernel::configure()</a>, <a class="el" href="_c_l_depthwise_convolution_layer_native_kernel_8cpp_source.xhtml#l00147">CLDepthwiseConvolutionLayerNativeKernel::configure()</a>, <a class="el" href="_n_e_im2_col_kernel_8cpp_source.xhtml#l00363">NEIm2ColKernel::configure()</a>, <a class="el" href="_c_l_softmax_layer_8cpp_source.xhtml#l00065">CLSoftmaxLayerGeneric&lt; IS_LOG &gt;::configure()</a>, <a class="el" href="_n_e_g_e_m_m_8cpp_source.xhtml#l00072">NEGEMM::configure()</a>, <a class="el" href="_c_l_direct_convolution_layer_kernel_8cpp_source.xhtml#l00334">CLDirectConvolutionLayerKernel::configure()</a>, <a class="el" href="_n_e_g_e_m_m_transpose1x_w_kernel_8cpp_source.xhtml#l00067">NEGEMMTranspose1xWKernel::configure()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_offset_contribution_output_stage_kernel_8cpp_source.xhtml#l00140">CLGEMMLowpOffsetContributionOutputStageKernel::configure()</a>, <a class="el" href="_c_l_weights_reshape_kernel_8cpp_source.xhtml#l00079">CLWeightsReshapeKernel::configure()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_offset_contribution_output_stage_kernel_8cpp_source.xhtml#l00869">NEGEMMLowpOffsetContributionOutputStageKernel::configure()</a>, <a class="el" href="_c_l_crop_resize_8cpp_source.xhtml#l00090">CLCropResize::configure()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_matrix_multiply_core_8cpp_source.xhtml#l00077">NEGEMMLowpMatrixMultiplyCore::configure()</a>, <a class="el" href="_n_e_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00069">NELSTMLayerQuantized::configure()</a>, <a class="el" href="_n_e_l_s_t_m_layer_8cpp_source.xhtml#l00066">NELSTMLayer::configure()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_matrix_multiply_core_8cpp_source.xhtml#l00228">CLGEMMLowpMatrixMultiplyCore::configure()</a>, <a class="el" href="_c_l_g_e_m_m_reshape_r_h_s_matrix_kernel_8cpp_source.xhtml#l00119">CLGEMMReshapeRHSMatrixKernel::configure()</a>, <a class="el" href="_c_l_im2_col_kernel_8cpp_source.xhtml#l00313">CLIm2ColKernel::configure()</a>, <a class="el" href="_n_e_deconvolution_layer_8cpp_source.xhtml#l00150">NEDeconvolutionLayer::configure()</a>, <a class="el" href="_c_l_pixel_wise_multiplication_kernel_8cpp_source.xhtml#l00154">CLPixelWiseMultiplicationKernel::configure()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_matrix_multiply_reshaped_only_r_h_s_kernel_8cpp_source.xhtml#l00303">CLGEMMLowpMatrixMultiplyReshapedOnlyRHSKernel::configure()</a>, <a class="el" href="_cpu_elementwise_kernel_8cpp_source.xhtml#l00213">CpuArithmeticKernel::configure()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_reduction_kernel_8cpp_source.xhtml#l00069">NEGEMMLowpMatrixAReductionKernel::configure()</a>, <a class="el" href="_n_e_convolution_layer_8cpp_source.xhtml#l00048">NEConvolutionLayer::configure()</a>, <a class="el" href="_c_l_f_f_t_convolution_layer_8cpp_source.xhtml#l00111">CLFFTConvolutionLayer::configure()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_reduction_kernel_8cpp_source.xhtml#l00075">CLGEMMLowpMatrixAReductionKernel::configure()</a>, <a class="el" href="_cl_elementwise_kernel_8cpp_source.xhtml#l00336">ClLogicalBinaryKernel::configure()</a>, <a class="el" href="_c_l_generate_proposals_layer_8cpp_source.xhtml#l00078">CLGenerateProposalsLayer::configure()</a>, <a class="el" href="_c_l_g_e_m_m_matrix_multiply_reshaped_only_r_h_s_kernel_8cpp_source.xhtml#l00198">CLGEMMMatrixMultiplyReshapedOnlyRHSKernel::configure()</a>, <a class="el" href="_c_l_g_e_m_m_deconvolution_layer_8cpp_source.xhtml#l00235">CLGEMMDeconvolutionLayer::configure()</a>, <a class="el" href="_c_l_direct_deconvolution_layer_8cpp_source.xhtml#l00116">CLDirectDeconvolutionLayer::configure()</a>, <a class="el" href="_n_e_q_l_s_t_m_layer_8cpp_source.xhtml#l00152">NEQLSTMLayer::configure()</a>, <a class="el" href="_c_l_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00077">CLLSTMLayerQuantized::configure()</a>, <a class="el" href="_c_l_g_e_m_m_matrix_multiply_reshaped_kernel_8cpp_source.xhtml#l00219">CLGEMMMatrixMultiplyReshapedKernel::configure()</a>, <a class="el" href="_c_l_convolution_layer_8cpp_source.xhtml#l00054">CLConvolutionLayer::configure()</a>, <a class="el" href="_c_p_p_split_8h_source.xhtml#l00133">CPPSplit&lt; CLSlice, ICLTensor &gt;::configure()</a>, <a class="el" href="_c_l_softmax_layer_kernel_8cpp_source.xhtml#l00292">CLLogits1DNormKernel::configure()</a>, <a class="el" href="_cpu_elementwise_kernel_8cpp_source.xhtml#l00264">CpuDivisionKernel::configure()</a>, <a class="el" href="_cl_elementwise_kernel_8cpp_source.xhtml#l00392">ClSaturatedArithmeticKernel::configure()</a>, <a class="el" href="_n_e_fully_connected_layer_8cpp_source.xhtml#l00231">NEFullyConnectedLayer::configure()</a>, <a class="el" href="_c_l_l_s_t_m_layer_8cpp_source.xhtml#l00082">CLLSTMLayer::configure()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_reduction_kernel_8cpp_source.xhtml#l00156">CLGEMMLowpMatrixBReductionKernel::configure()</a>, <a class="el" href="_c_l_g_e_m_m_8cpp_source.xhtml#l00671">CLGEMM::configure()</a>, <a class="el" href="_c_l_q_l_s_t_m_layer_8cpp_source.xhtml#l00175">CLQLSTMLayer::configure()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_reduction_kernel_8cpp_source.xhtml#l00186">NEGEMMLowpMatrixBReductionKernel::configure()</a>, <a class="el" href="_n_e_pixel_wise_multiplication_kernel_8cpp_source.xhtml#l01690">NEComplexPixelWiseMultiplicationKernel::configure()</a>, <a class="el" href="_c_l_pixel_wise_multiplication_kernel_8cpp_source.xhtml#l00391">CLComplexPixelWiseMultiplicationKernel::configure()</a>, <a class="el" href="_cpu_elementwise_kernel_8cpp_source.xhtml#l00285">CpuPowerKernel::configure()</a>, <a class="el" href="_c_l_fully_connected_layer_8cpp_source.xhtml#l00245">CLFullyConnectedLayer::configure()</a>, <a class="el" href="_cl_elementwise_kernel_8cpp_source.xhtml#l00446">ClArithmeticKernel::configure()</a>, <a class="el" href="_n_e_g_e_m_m_convolution_layer_8cpp_source.xhtml#l00258">NEGEMMConvolutionLayer::configure()</a>, <a class="el" href="_cpu_elementwise_kernel_8cpp_source.xhtml#l00306">CpuComparisonKernel::configure()</a>, <a class="el" href="_c_l_g_e_m_m_convolution_layer_8cpp_source.xhtml#l00212">CLGEMMConvolutionLayer::configure()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_output_stage_8cpp_source.xhtml#l00081">NEGEMMLowpOutputStage::configure()</a>, and <a class="el" href="_i_c_p_p_simple_kernel_8cpp_source.xhtml#l00052">ICPPSimpleKernel::ICPPSimpleKernel()</a>.</p>

</div>
</div>
<a id="abd040a16dc0dbc75733e07aff93048a8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abd040a16dc0dbc75733e07aff93048a8">&#9670;&nbsp;</a></span>ARM_COMPUTE_ERROR_VAR</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ARM_COMPUTE_ERROR_VAR</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">msg, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>...</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;<a class="el" href="_error_8h.xhtml#a86513cce33cfea9d3dd6eac3366b8253">ARM_COMPUTE_THROW_ERROR_VAR</a>(__func__, __FILE__, __LINE__, msg, __VA_ARGS__)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Print the given message then throw an std::runtime_error. </p>
<p>Accepts a message format and a variable list of arguments matching the format description.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">msg</td><td>Error description message format. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">...</td><td>List of arguments matching the format description. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_error_8h_source.xhtml#l00346">346</a> of file <a class="el" href="_error_8h_source.xhtml">Error.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_g_c_kernel_library_8cpp_source.xhtml#l00078">GCProgram::compile_shader()</a>, <a class="el" href="_n_e_canny_edge_8cpp_source.xhtml#l00065">NECannyEdge::configure()</a>, <a class="el" href="_c_l_canny_edge_8cpp_source.xhtml#l00069">CLCannyEdge::configure()</a>, <a class="el" href="_g_c_kernel_library_8cpp_source.xhtml#l00366">GCKernelLibrary::create_kernel()</a>, <a class="el" href="src_2core_2_utils_8cpp_source.xhtml#l00326">arm_compute::data_type_from_name()</a>, <a class="el" href="_graph_utils_8cpp_source.xhtml#l00513">DetectionOutputAccessor::DetectionOutputAccessor()</a>, <a class="el" href="utils_2_utils_8h_source.xhtml#l00406">NPYLoader::fill_tensor()</a>, <a class="el" href="utils_2_utils_8cpp_source.xhtml#l00167">arm_compute::utils::get_image_type_from_file()</a>, <a class="el" href="_c_l_kernel_library_8cpp_source.xhtml#l01214">CLKernelLibrary::get_program()</a>, <a class="el" href="_c_l_kernel_library_8cpp_source.xhtml#l01133">CLKernelLibrary::get_program_name()</a>, <a class="el" href="_g_c_kernel_library_8cpp_source.xhtml#l00047">GCProgram::link_program()</a>, <a class="el" href="_c_l_tuner_8cpp_source.xhtml#l00280">CLTuner::load_from_file()</a>, <a class="el" href="utils_2_utils_8h_source.xhtml#l00682">arm_compute::utils::load_trained_data()</a>, <a class="el" href="_p_m_u_8cpp_source.xhtml#l00069">PMU::open()</a>, <a class="el" href="utils_2_utils_8h_source.xhtml#l00342">NPYLoader::open()</a>, <a class="el" href="_image_loader_8h_source.xhtml#l00456">JPEGLoader::open()</a>, <a class="el" href="src_2core_2_utils_8cpp_source.xhtml#l00038">arm_compute::read_file()</a>, <a class="el" href="_p_m_u_8cpp_source.xhtml#l00092">PMU::reset()</a>, <a class="el" href="_c_p_p_detection_output_layer_8cpp_source.xhtml#l00444">CPPDetectionOutputLayer::run()</a>, <a class="el" href="_graph_utils_8cpp_source.xhtml#l00584">TopNPredictionsAccessor::TopNPredictionsAccessor()</a>, <a class="el" href="_graph_utils_8cpp_source.xhtml#l00301">ValidationInputAccessor::ValidationInputAccessor()</a>, and <a class="el" href="_graph_utils_8cpp_source.xhtml#l00384">ValidationOutputAccessor::ValidationOutputAccessor()</a>.</p>

</div>
</div>
<a id="a292b758f9eba8b487d71eae4b37326fc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a292b758f9eba8b487d71eae4b37326fc">&#9670;&nbsp;</a></span>ARM_COMPUTE_EXIT_ON_MSG</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ARM_COMPUTE_EXIT_ON_MSG</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">cond, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">msg&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line"><span class="keywordflow">do</span>                                     \</div><div class="line">    {                                      \</div><div class="line">        if(cond)                           \</div><div class="line">        {                                  \</div><div class="line">            ARM_COMPUTE_ERROR(msg);        \</div><div class="line">        }                                  \</div><div class="line">    } <span class="keywordflow">while</span>(<span class="keyword">false</span>)</div></div><!-- fragment -->
<p>If the condition is true, the given message is printed and program exits. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cond</td><td>Condition to evaluate. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">msg</td><td>Message to display. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_error_8h_source.xhtml#l00379">379</a> of file <a class="el" href="_error_8h_source.xhtml">Error.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_graph_utils_8cpp_source.xhtml#l00258">ImageAccessor::access_tensor()</a>, <a class="el" href="_graph_utils_8cpp_source.xhtml#l00301">ValidationInputAccessor::ValidationInputAccessor()</a>, and <a class="el" href="_graph_utils_8cpp_source.xhtml#l00384">ValidationOutputAccessor::ValidationOutputAccessor()</a>.</p>

</div>
</div>
<a id="ac75ba282eb0cacd31fd4c6e6a47dbbc8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac75ba282eb0cacd31fd4c6e6a47dbbc8">&#9670;&nbsp;</a></span>ARM_COMPUTE_EXIT_ON_MSG_VAR</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ARM_COMPUTE_EXIT_ON_MSG_VAR</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">cond, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">msg, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>...</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line"><span class="keywordflow">do</span>                                               \</div><div class="line">    {                                                \</div><div class="line">        if(cond)                                     \</div><div class="line">        {                                            \</div><div class="line">            ARM_COMPUTE_ERROR_VAR(msg, __VA_ARGS__); \</div><div class="line">        }                                            \</div><div class="line">    } <span class="keywordflow">while</span>(<span class="keyword">false</span>)</div></div><!-- fragment -->
<p>If the condition is true, the given message is printed and program exits. </p>
<p>Accepts a message format and a variable list of arguments matching the format description.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cond</td><td>Condition to evaluate. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">msg</td><td>Error description message format. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">...</td><td>List of arguments matching the format description. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_error_8h_source.xhtml#l00395">395</a> of file <a class="el" href="_error_8h_source.xhtml">Error.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_graph_utils_8cpp_source.xhtml#l00258">ImageAccessor::access_tensor()</a>, <a class="el" href="_graph_utils_8cpp_source.xhtml#l00339">ValidationInputAccessor::access_tensor()</a>, and <a class="el" href="utils_2_utils_8h_source.xhtml#l00342">NPYLoader::open()</a>.</p>

</div>
</div>
<a id="a9561091f3566e78ad3aa39259bc4126a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9561091f3566e78ad3aa39259bc4126a">&#9670;&nbsp;</a></span>ARM_COMPUTE_RETURN_ERROR_MSG</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ARM_COMPUTE_RETURN_ERROR_MSG</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>...</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line"><span class="keywordflow">do</span>                                                                                       \</div><div class="line">    {                                                                                        \</div><div class="line">        return <a class="code" href="_error_8h.xhtml#af1b8ff8eb557a2ad11272f1505f45d34">ARM_COMPUTE_CREATE_ERROR</a>(<a class="code" href="namespacearm__compute.xhtml#a59e56af19e754a6aa26a612ebf91d05fa62be47fdd89da032cf78dfce82239579">arm_compute::ErrorCode::RUNTIME_ERROR</a>, __VA_ARGS__); \</div><div class="line">    } <span class="keywordflow">while</span>(<span class="keyword">false</span>)</div><div class="ttc" id="namespacearm__compute_xhtml_a59e56af19e754a6aa26a612ebf91d05fa62be47fdd89da032cf78dfce82239579"><div class="ttname"><a href="namespacearm__compute.xhtml#a59e56af19e754a6aa26a612ebf91d05fa62be47fdd89da032cf78dfce82239579">arm_compute::ErrorCode::RUNTIME_ERROR</a></div><div class="ttdoc">Generic runtime error. </div></div>
<div class="ttc" id="_error_8h_xhtml_af1b8ff8eb557a2ad11272f1505f45d34"><div class="ttname"><a href="_error_8h.xhtml#af1b8ff8eb557a2ad11272f1505f45d34">ARM_COMPUTE_CREATE_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_CREATE_ERROR(error_code, msg)</div><div class="ttdoc">Creates an error with a given message. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00159">Error.h:159</a></div></div>
</div><!-- fragment -->
<p>An error is returned with the given description. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">...</td><td>Error description message. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_error_8h_source.xhtml#l00194">194</a> of file <a class="el" href="_error_8h_source.xhtml">Error.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cpu_pooling_assembly_wrapper_kernel_8cpp_source.xhtml#l00091">CpuPoolingAssemblyWrapperKernel::validate()</a>, <a class="el" href="_n_e_winograd_convolution_layer_8cpp_source.xhtml#l00647">NEWinogradConvolutionLayer::validate()</a>, <a class="el" href="_c_l_g_e_m_m_8cpp_source.xhtml#l00727">CLGEMM::validate()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_quantize_down_int32_scale_kernel_8cpp_source.xhtml#l00045">arm_compute::validate_arguments()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00137">arm_compute::graph::backends::detail::validate_convolution_layer()</a>, and <a class="el" href="_validate_helpers_8h_source.xhtml#l00195">arm_compute::graph::backends::detail::validate_depthwise_convolution_layer()</a>.</p>

</div>
</div>
<a id="a206d6e247e0957ac3dee45d27756fc25"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a206d6e247e0957ac3dee45d27756fc25">&#9670;&nbsp;</a></span>ARM_COMPUTE_RETURN_ERROR_ON</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ARM_COMPUTE_RETURN_ERROR_ON</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">cond</td><td>)</td>
          <td>&#160;&#160;&#160;<a class="el" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(cond, #cond)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>If the condition is true, an error is returned. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cond</td><td>Condition to evaluate </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_error_8h_source.xhtml#l00296">296</a> of file <a class="el" href="_error_8h_source.xhtml">Error.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_pixel_wise_multiplication_kernel_8cpp_source.xhtml#l00319">CLPixelWiseMultiplicationKernel::border_size()</a>, <a class="el" href="_asymm_helpers_8cpp_source.xhtml#l00095">arm_compute::quantization::calculate_quantized_multiplier_greater_than_one()</a>, <a class="el" href="_asymm_helpers_8cpp_source.xhtml#l00053">arm_compute::quantization::calculate_quantized_multiplier_less_than_one()</a>, <a class="el" href="_asymm_helpers_8cpp_source.xhtml#l00120">arm_compute::quantization::calculate_quantized_multipliers()</a>, <a class="el" href="src_2runtime_2_tensor_allocator_8cpp_source.xhtml#l00153">TensorAllocator::import_memory()</a>, <a class="el" href="_c_l_tensor_allocator_8cpp_source.xhtml#l00167">CLTensorAllocator::import_memory()</a>, <a class="el" href="_cpu_softmax_kernel_8cpp_source.xhtml#l00260">CpuLogits1DMaxKernel::name()</a>, <a class="el" href="arm__compute_2graph_2_utils_8h_source.xhtml#l00062">arm_compute::graph::set_tensor_accessor()</a>, <a class="el" href="_c_p_p_split_8h_source.xhtml#l00058">CPPSplit&lt; CLSlice, ICLTensor &gt;::validate()</a>, <a class="el" href="_n_e_scale_8cpp_source.xhtml#l00175">NEScale::validate()</a>, <a class="el" href="_n_e_logical_kernel_8cpp_source.xhtml#l00301">NELogicalKernel::validate()</a>, <a class="el" href="_g_c_arithmetic_addition_8cpp_source.xhtml#l00040">GCArithmeticAddition::validate()</a>, <a class="el" href="_cl_fill_kernel_8cpp_source.xhtml#l00090">ClFillKernel::validate()</a>, <a class="el" href="_n_e_slice_8cpp_source.xhtml#l00048">NESlice::validate()</a>, <a class="el" href="_cpu_concatenate_8cpp_source.xhtml#l00104">CpuConcatenate::validate()</a>, <a class="el" href="_split_layer_node_8cpp_source.xhtml#l00131">SplitLayerNode::validate()</a>, <a class="el" href="_c_l_slice_8cpp_source.xhtml#l00047">CLSlice::validate()</a>, <a class="el" href="_n_e_elementwise_operations_8cpp_source.xhtml#l00060">NEElementwiseMax::validate()</a>, <a class="el" href="_n_e_q_l_s_t_m_layer_normalization_kernel_8cpp_source.xhtml#l00140">NEQLSTMLayerNormalizationKernel::validate()</a>, <a class="el" href="_cpu_add_8cpp_source.xhtml#l00040">CpuAdd::validate()</a>, <a class="el" href="_cpu_elementwise_unary_kernel_8cpp_source.xhtml#l00130">CpuElementwiseUnaryKernel::validate()</a>, <a class="el" href="_cl_concatenate_8cpp_source.xhtml#l00146">ClConcatenate::validate()</a>, <a class="el" href="_c_l_deconvolution_layer_upsample_kernel_8cpp_source.xhtml#l00041">CLDeconvolutionLayerUpsampleKernel::validate()</a>, <a class="el" href="_n_e_unstack_8cpp_source.xhtml#l00090">NEUnstack::validate()</a>, <a class="el" href="_c_l_unstack_8cpp_source.xhtml#l00095">CLUnstack::validate()</a>, <a class="el" href="_n_e_convert_fully_connected_weights_kernel_8cpp_source.xhtml#l00068">NEConvertFullyConnectedWeightsKernel::validate()</a>, <a class="el" href="_n_e_r_n_n_layer_8cpp_source.xhtml#l00054">NERNNLayer::validate()</a>, <a class="el" href="_n_e_select_kernel_8cpp_source.xhtml#l00231">NESelectKernel::validate()</a>, <a class="el" href="_cpu_pooling_assembly_wrapper_kernel_8cpp_source.xhtml#l00091">CpuPoolingAssemblyWrapperKernel::validate()</a>, <a class="el" href="_n_e_f_f_t1_d_8cpp_source.xhtml#l00109">NEFFT1D::validate()</a>, <a class="el" href="_n_e_stack_layer_8cpp_source.xhtml#l00061">NEStackLayer::validate()</a>, <a class="el" href="_c_l_convert_fully_connected_weights_kernel_8cpp_source.xhtml#l00091">CLConvertFullyConnectedWeightsKernel::validate()</a>, <a class="el" href="_cpu_sub_8cpp_source.xhtml#l00040">CpuSub::validate()</a>, <a class="el" href="_cpu_softmax_8cpp_source.xhtml#l00102">CpuSoftmaxGeneric&lt; IS_LOG &gt;::validate()</a>, <a class="el" href="_cl_crop_kernel_8cpp_source.xhtml#l00091">ClCropKernel::validate()</a>, <a class="el" href="_n_e_crop_kernel_8cpp_source.xhtml#l00285">NECropKernel::validate()</a>, <a class="el" href="_c_l_f_f_t1_d_8cpp_source.xhtml#l00118">CLFFT1D::validate()</a>, <a class="el" href="_n_e_g_e_m_m_convolution_layer_8cpp_source.xhtml#l00076">NEConvolutionLayerReshapeWeights::validate()</a>, <a class="el" href="_n_e_depthwise_convolution_assembly_dispatch_8cpp_source.xhtml#l00400">NEDepthwiseConvolutionAssemblyDispatch::validate()</a>, <a class="el" href="_c_l_r_n_n_layer_8cpp_source.xhtml#l00056">CLRNNLayer::validate()</a>, <a class="el" href="_n_e_pad_layer_8cpp_source.xhtml#l00206">NEPadLayer::validate()</a>, <a class="el" href="_n_e_crop_resize_8cpp_source.xhtml#l00040">NECropResize::validate()</a>, <a class="el" href="_c_l_stack_layer_8cpp_source.xhtml#l00068">CLStackLayer::validate()</a>, <a class="el" href="_n_e_g_e_m_m_conv2d_8cpp_source.xhtml#l00119">NEGEMMConv2d::validate()</a>, <a class="el" href="_c_l_g_e_m_m_convolution_layer_8cpp_source.xhtml#l00088">CLConvolutionLayerReshapeWeights::validate()</a>, <a class="el" href="_c_l_softmax_layer_8cpp_source.xhtml#l00123">CLSoftmaxLayerGeneric&lt; IS_LOG &gt;::validate()</a>, <a class="el" href="_n_e_g_e_m_m_8cpp_source.xhtml#l00190">NEGEMM::validate()</a>, <a class="el" href="_n_e_generate_proposals_layer_8cpp_source.xhtml#l00210">NEGenerateProposalsLayer::validate()</a>, <a class="el" href="_n_e_pixel_wise_multiplication_8cpp_source.xhtml#l00043">NEPixelWiseMultiplication::validate()</a>, <a class="el" href="_n_e_f_f_t_convolution_layer_8cpp_source.xhtml#l00261">NEFFTConvolutionLayer::validate()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_matrix_multiply_core_8cpp_source.xhtml#l00305">NEGEMMLowpMatrixMultiplyCore::validate()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_matrix_multiply_core_8cpp_source.xhtml#l00437">CLGEMMLowpMatrixMultiplyCore::validate()</a>, <a class="el" href="_n_e_deconvolution_layer_8cpp_source.xhtml#l00084">NEDeconvolutionLayer::validate()</a>, <a class="el" href="_c_l_crop_resize_8cpp_source.xhtml#l00065">CLCropResize::validate()</a>, <a class="el" href="_n_e_elementwise_operations_8cpp_source.xhtml#l00101">NEElementwiseMin::validate()</a>, <a class="el" href="_c_l_g_e_m_m_deconvolution_layer_8cpp_source.xhtml#l00135">CLGEMMDeconvolutionLayer::validate()</a>, <a class="el" href="_n_e_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00247">NELSTMLayerQuantized::validate()</a>, <a class="el" href="_c_l_f_f_t_convolution_layer_8cpp_source.xhtml#l00269">CLFFTConvolutionLayer::validate()</a>, <a class="el" href="_c_l_generate_proposals_layer_8cpp_source.xhtml#l00207">CLGenerateProposalsLayer::validate()</a>, <a class="el" href="_c_l_direct_deconvolution_layer_8cpp_source.xhtml#l00058">CLDirectDeconvolutionLayer::validate()</a>, <a class="el" href="_n_e_pixel_wise_multiplication_8cpp_source.xhtml#l00058">NEComplexPixelWiseMultiplication::validate()</a>, <a class="el" href="_n_e_l_s_t_m_layer_8cpp_source.xhtml#l00377">NELSTMLayer::validate()</a>, <a class="el" href="_c_l_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00275">CLLSTMLayerQuantized::validate()</a>, <a class="el" href="_cl_elementwise_kernel_8cpp_source.xhtml#l00407">ClSaturatedArithmeticKernel::validate()</a>, <a class="el" href="_n_e_elementwise_operations_8cpp_source.xhtml#l00142">NEElementwiseSquaredDiff::validate()</a>, <a class="el" href="_n_e_q_l_s_t_m_layer_8cpp_source.xhtml#l00579">NEQLSTMLayer::validate()</a>, <a class="el" href="_n_e_fully_connected_layer_8cpp_source.xhtml#l00327">NEFullyConnectedLayer::validate()</a>, <a class="el" href="_c_l_fully_connected_layer_8cpp_source.xhtml#l00341">CLFullyConnectedLayer::validate()</a>, <a class="el" href="_c_l_l_s_t_m_layer_8cpp_source.xhtml#l00404">CLLSTMLayer::validate()</a>, <a class="el" href="_cl_elementwise_kernel_8cpp_source.xhtml#l00459">ClArithmeticKernel::validate()</a>, <a class="el" href="_c_p_p_box_with_non_maxima_suppression_limit_8cpp_source.xhtml#l00210">arm_compute::validate()</a>, <a class="el" href="_n_e_elementwise_operations_8cpp_source.xhtml#l00183">NEElementwiseDivision::validate()</a>, <a class="el" href="_c_l_q_l_s_t_m_layer_8cpp_source.xhtml#l00598">CLQLSTMLayer::validate()</a>, <a class="el" href="_n_e_g_e_m_m_convolution_layer_8cpp_source.xhtml#l00426">NEGEMMConvolutionLayer::validate()</a>, <a class="el" href="_c_l_g_e_m_m_convolution_layer_8cpp_source.xhtml#l00431">CLGEMMConvolutionLayer::validate()</a>, <a class="el" href="_n_e_elementwise_operations_8cpp_source.xhtml#l00224">NEElementwisePower::validate()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_output_stage_8cpp_source.xhtml#l00147">NEGEMMLowpOutputStage::validate()</a>, <a class="el" href="_n_e_winograd_convolution_layer_kernel_8cpp_source.xhtml#l00180">INEWinogradLayerTransformWeightsKernel::validate()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00064">arm_compute::graph::backends::detail::validate_arg_min_max_layer()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_quantize_down_int32_scale_kernel_8cpp_source.xhtml#l00045">arm_compute::validate_arguments()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00087">arm_compute::graph::backends::detail::validate_bounding_box_transform_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00111">arm_compute::graph::backends::detail::validate_channel_shuffle_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00137">arm_compute::graph::backends::detail::validate_convolution_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00234">arm_compute::graph::backends::detail::validate_depth_to_space_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00195">arm_compute::graph::backends::detail::validate_depthwise_convolution_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00255">arm_compute::graph::backends::detail::validate_dequantization_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00276">arm_compute::graph::backends::detail::validate_detection_output_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00300">arm_compute::graph::backends::detail::validate_detection_post_process_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00664">arm_compute::graph::backends::detail::validate_eltwise_Layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00328">arm_compute::graph::backends::detail::validate_generate_proposals_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00355">arm_compute::graph::backends::detail::validate_l2_normalize_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00380">arm_compute::graph::backends::detail::validate_normalize_planar_yuv_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00405">arm_compute::graph::backends::detail::validate_pad_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00428">arm_compute::graph::backends::detail::validate_permute_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00451">arm_compute::graph::backends::detail::validate_prelu_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00474">arm_compute::graph::backends::detail::validate_priorbox_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00498">arm_compute::graph::backends::detail::validate_quantization_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00521">arm_compute::graph::backends::detail::validate_reduction_operation_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00545">arm_compute::graph::backends::detail::validate_reorg_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00568">arm_compute::graph::backends::detail::validate_reshape_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00591">arm_compute::graph::backends::detail::validate_roi_align_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00616">arm_compute::graph::backends::detail::validate_slice_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00640">arm_compute::graph::backends::detail::validate_strided_slice_layer()</a>, and <a class="el" href="_validate_helpers_8h_source.xhtml#l00710">arm_compute::graph::backends::detail::validate_unary_eltwise_layer()</a>.</p>

</div>
</div>
<a id="aab9171b209dda7cc9bb560486674c9f6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aab9171b209dda7cc9bb560486674c9f6">&#9670;&nbsp;</a></span>ARM_COMPUTE_RETURN_ERROR_ON_LOC</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ARM_COMPUTE_RETURN_ERROR_ON_LOC</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">cond, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><a class="el" href="_cpu_floor_kernel_8cpp.xhtml#a89746721cac623cd0ffa90c03fc7a657">func</a>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">file, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">line&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;<a class="el" href="_error_8h.xhtml#a3cbe27c31092df3dc1fa26c75f47e047">ARM_COMPUTE_RETURN_ERROR_ON_LOC_MSG</a>(cond, <a class="el" href="_cpu_floor_kernel_8cpp.xhtml#a89746721cac623cd0ffa90c03fc7a657">func</a>, file, line, #cond)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>If the condition is true, an error is returned. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cond</td><td>Condition to evaluate. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">func</td><td>Function in which the error occurred. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">file</td><td>File in which the error occurred. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">line</td><td>Line in which the error occurred. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_error_8h_source.xhtml#l00306">306</a> of file <a class="el" href="_error_8h_source.xhtml">Error.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00873">arm_compute::error_on_channel_not_in()</a>, <a class="el" href="_validate_8cpp_source.xhtml#l00113">arm_compute::error_on_channel_not_in_known_format()</a>, <a class="el" href="_validate_8cpp_source.xhtml#l00070">arm_compute::error_on_coordinates_dimensions_gte()</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00709">arm_compute::error_on_data_layout_not_in()</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00783">arm_compute::error_on_data_type_channel_not_in()</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00657">arm_compute::error_on_data_type_not_in()</a>, <a class="el" href="_validate_8cpp_source.xhtml#l00144">arm_compute::error_on_invalid_multi_hog()</a>, <a class="el" href="_validate_8cpp_source.xhtml#l00176">arm_compute::error_on_invalid_subtensor()</a>, <a class="el" href="_validate_8cpp_source.xhtml#l00189">arm_compute::error_on_invalid_subtensor_valid_region()</a>, <a class="el" href="_validate_8cpp_source.xhtml#l00041">arm_compute::error_on_invalid_subwindow()</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00457">arm_compute::error_on_mismatching_data_layouts()</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00508">arm_compute::error_on_mismatching_data_types()</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00403">arm_compute::error_on_mismatching_shapes()</a>, <a class="el" href="_validate_8cpp_source.xhtml#l00026">arm_compute::error_on_mismatching_windows()</a>, <a class="el" href="_validate_8cpp_source.xhtml#l00092">arm_compute::error_on_tensor_not_2d()</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00303">arm_compute::error_on_tensors_not_even()</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00336">arm_compute::error_on_tensors_not_subsampled()</a>, <a class="el" href="_validate_8cpp_source.xhtml#l00166">arm_compute::error_on_unconfigured_kernel()</a>, <a class="el" href="src_2core_2_c_p_p_2_validate_8h_source.xhtml#l00060">arm_compute::error_on_unsupported_cpu_bf16()</a>, <a class="el" href="src_2core_2_c_p_p_2_validate_8h_source.xhtml#l00040">arm_compute::error_on_unsupported_cpu_fp16()</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00805">arm_compute::error_on_unsupported_fp16()</a>, and <a class="el" href="_validate_8cpp_source.xhtml#l00057">arm_compute::error_on_window_not_collapsable_at_dimension()</a>.</p>

</div>
</div>
<a id="a3cbe27c31092df3dc1fa26c75f47e047"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3cbe27c31092df3dc1fa26c75f47e047">&#9670;&nbsp;</a></span>ARM_COMPUTE_RETURN_ERROR_ON_LOC_MSG</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ARM_COMPUTE_RETURN_ERROR_ON_LOC_MSG</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">cond, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><a class="el" href="_cpu_floor_kernel_8cpp.xhtml#a89746721cac623cd0ffa90c03fc7a657">func</a>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">file, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">line, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">msg&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line"><span class="keywordflow">do</span>                                                                                             \</div><div class="line">    {                                                                                              \</div><div class="line">        if(cond)                                                                                   \</div><div class="line">        {                                                                                          \</div><div class="line">            return <a class="code" href="namespacearm__compute.xhtml#af9b3e9f3ef6409e72c71aeacebf58f3b">arm_compute::create_error_msg</a>(ErrorCode::RUNTIME_ERROR, <a class="code" href="_cpu_floor_kernel_8cpp.xhtml#a89746721cac623cd0ffa90c03fc7a657">func</a>, file, line, msg); \</div><div class="line">        }                                                                                          \</div><div class="line">    } <span class="keywordflow">while</span>(<span class="keyword">false</span>)</div><div class="ttc" id="namespacearm__compute_xhtml_af9b3e9f3ef6409e72c71aeacebf58f3b"><div class="ttname"><a href="namespacearm__compute.xhtml#af9b3e9f3ef6409e72c71aeacebf58f3b">arm_compute::create_error_msg</a></div><div class="ttdeci">Status create_error_msg(ErrorCode error_code, const char *func, const char *file, int line, const char *msg)</div><div class="ttdoc">Creates an error and the error message. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8cpp_source.xhtml#l00039">Error.cpp:39</a></div></div>
<div class="ttc" id="_cpu_floor_kernel_8cpp_xhtml_a89746721cac623cd0ffa90c03fc7a657"><div class="ttname"><a href="_cpu_floor_kernel_8cpp.xhtml#a89746721cac623cd0ffa90c03fc7a657">func</a></div><div class="ttdeci">FloorUKernelPtr func</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_floor_kernel_8cpp_source.xhtml#l00057">CpuFloorKernel.cpp:57</a></div></div>
</div><!-- fragment -->
<p>If the condition is true, an error is thrown. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cond</td><td>Condition to evaluate. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">func</td><td>Function in which the error occurred. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">file</td><td>File in which the error occurred. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">line</td><td>Line in which the error occurred. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">msg</td><td>Message to display. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_error_8h_source.xhtml#l00283">283</a> of file <a class="el" href="_error_8h_source.xhtml">Error.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_validate_8cpp_source.xhtml#l00144">arm_compute::error_on_invalid_multi_hog()</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00457">arm_compute::error_on_mismatching_data_layouts()</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00508">arm_compute::error_on_mismatching_data_types()</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00562">arm_compute::error_on_mismatching_quantization_info()</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00403">arm_compute::error_on_mismatching_shapes()</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00151">arm_compute::error_on_nullptr()</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00303">arm_compute::error_on_tensors_not_even()</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00336">arm_compute::error_on_tensors_not_subsampled()</a>, <a class="el" href="_validate_8cpp_source.xhtml#l00166">arm_compute::error_on_unconfigured_kernel()</a>, <a class="el" href="src_2core_2_c_p_p_2_validate_8h_source.xhtml#l00060">arm_compute::error_on_unsupported_cpu_bf16()</a>, <a class="el" href="src_2core_2_c_p_p_2_validate_8h_source.xhtml#l00040">arm_compute::error_on_unsupported_cpu_fp16()</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00805">arm_compute::error_on_unsupported_fp16()</a>, and <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00093">compare_dimension&lt; T &gt;::operator()()</a>.</p>

</div>
</div>
<a id="a5e3e8db314706c6f3d822bafa3d8d761"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5e3e8db314706c6f3d822bafa3d8d761">&#9670;&nbsp;</a></span>ARM_COMPUTE_RETURN_ERROR_ON_LOC_MSG_VAR</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ARM_COMPUTE_RETURN_ERROR_ON_LOC_MSG_VAR</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">cond, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><a class="el" href="_cpu_floor_kernel_8cpp.xhtml#a89746721cac623cd0ffa90c03fc7a657">func</a>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">file, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">line, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">msg, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>...</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line"><span class="keywordflow">do</span>                                                                                           \</div><div class="line">    {                                                                                            \</div><div class="line">        if(cond)                                                                                 \</div><div class="line">        {                                                                                        \</div><div class="line">            std::array&lt;char, 512&gt; out{ 0 };                                                      \</div><div class="line">            int <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a> = <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#a9429515817425d10f4b662eaa069cc5c">snprintf</a>(out.data(), out.size(), <span class="stringliteral">&quot;in %s %s:%d: &quot;</span>, <a class="code" href="_cpu_floor_kernel_8cpp.xhtml#a89746721cac623cd0ffa90c03fc7a657">func</a>, file, line);    \</div><div class="line">            snprintf(out.data() + <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>, out.size() - <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>, msg, __VA_ARGS__);                \</div><div class="line">            return <a class="code" href="namespacearm__compute.xhtml#a49cdbfceec3cb9949d00dbd1a17c5604">arm_compute::create_error</a>(ErrorCode::RUNTIME_ERROR, std::string(out.data())); \</div><div class="line">        }                                                                                        \</div><div class="line">    } <span class="keywordflow">while</span>(<span class="keyword">false</span>)</div><div class="ttc" id="src_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml_a009469e4d9b8fce3b6d5e97d2077827d"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a></div><div class="ttdeci">__global uchar * offset(const Image *img, int x, int y)</div><div class="ttdoc">Get the pointer position of a Image. </div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00846">helpers.h:846</a></div></div>
<div class="ttc" id="_cpu_floor_kernel_8cpp_xhtml_a89746721cac623cd0ffa90c03fc7a657"><div class="ttname"><a href="_cpu_floor_kernel_8cpp.xhtml#a89746721cac623cd0ffa90c03fc7a657">func</a></div><div class="ttdeci">FloorUKernelPtr func</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_floor_kernel_8cpp_source.xhtml#l00057">CpuFloorKernel.cpp:57</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a49cdbfceec3cb9949d00dbd1a17c5604"><div class="ttname"><a href="namespacearm__compute.xhtml#a49cdbfceec3cb9949d00dbd1a17c5604">arm_compute::create_error</a></div><div class="ttdeci">Status create_error(ErrorCode error_code, std::string msg)</div><div class="ttdoc">Creates an error containing the error message. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8cpp_source.xhtml#l00034">Error.cpp:34</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1support_1_1cpp11_xhtml_a9429515817425d10f4b662eaa069cc5c"><div class="ttname"><a href="namespacearm__compute_1_1support_1_1cpp11.xhtml#a9429515817425d10f4b662eaa069cc5c">arm_compute::support::cpp11::snprintf</a></div><div class="ttdeci">int snprintf(char *s, std::size_t n, const char *fmt, Ts &amp;&amp;... args)</div><div class="ttdoc">Loads the data from the given location, converts them to character string equivalents and writes the ...</div><div class="ttdef"><b>Definition:</b> <a href="_toolchain_support_8h_source.xhtml#l00239">ToolchainSupport.h:239</a></div></div>
</div><!-- fragment -->
<p>If the condition is true, an error is thrown. </p>
<p>Accepts a message format and a variable list of arguments matching the format description.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cond</td><td>Condition to evaluate. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">func</td><td>Function in which the error occurred. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">file</td><td>File in which the error occurred. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">line</td><td>Line in which the error occurred. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">msg</td><td>Error description message format. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">...</td><td>List of arguments matching the format description. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_error_8h_source.xhtml#l00263">263</a> of file <a class="el" href="_error_8h_source.xhtml">Error.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00709">arm_compute::error_on_data_layout_not_in()</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00762">arm_compute::error_on_data_type_channel_not_in()</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00657">arm_compute::error_on_data_type_not_in()</a>, <a class="el" href="_validate_8cpp_source.xhtml#l00092">arm_compute::error_on_tensor_not_2d()</a>, and <a class="el" href="_validate_8cpp_source.xhtml#l00080">arm_compute::error_on_window_dimensions_gte()</a>.</p>

</div>
</div>
<a id="a1c69762a42ab8add645d0a949b6f4b1f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1c69762a42ab8add645d0a949b6f4b1f">&#9670;&nbsp;</a></span>ARM_COMPUTE_RETURN_ERROR_ON_MSG</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ARM_COMPUTE_RETURN_ERROR_ON_MSG</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">cond, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">msg&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line"><span class="keywordflow">do</span>                                                                                                                      \</div><div class="line">    {                                                                                                                       \</div><div class="line">        if(cond)                                                                                                            \</div><div class="line">        {                                                                                                                   \</div><div class="line">            return <a class="code" href="namespacearm__compute.xhtml#af9b3e9f3ef6409e72c71aeacebf58f3b">arm_compute::create_error_msg</a>(<a class="code" href="namespacearm__compute.xhtml#a59e56af19e754a6aa26a612ebf91d05fa62be47fdd89da032cf78dfce82239579">arm_compute::ErrorCode::RUNTIME_ERROR</a>, __func__, __FILE__, __LINE__, msg); \</div><div class="line">        }                                                                                                                   \</div><div class="line">    } <span class="keywordflow">while</span>(<span class="keyword">false</span>)</div><div class="ttc" id="namespacearm__compute_xhtml_af9b3e9f3ef6409e72c71aeacebf58f3b"><div class="ttname"><a href="namespacearm__compute.xhtml#af9b3e9f3ef6409e72c71aeacebf58f3b">arm_compute::create_error_msg</a></div><div class="ttdeci">Status create_error_msg(ErrorCode error_code, const char *func, const char *file, int line, const char *msg)</div><div class="ttdoc">Creates an error and the error message. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8cpp_source.xhtml#l00039">Error.cpp:39</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a59e56af19e754a6aa26a612ebf91d05fa62be47fdd89da032cf78dfce82239579"><div class="ttname"><a href="namespacearm__compute.xhtml#a59e56af19e754a6aa26a612ebf91d05fa62be47fdd89da032cf78dfce82239579">arm_compute::ErrorCode::RUNTIME_ERROR</a></div><div class="ttdoc">Generic runtime error. </div></div>
</div><!-- fragment -->
<p>If the condition is true, an error is returned. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cond</td><td>Condition to evaluate. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">msg</td><td>Error description message </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_error_8h_source.xhtml#l00244">244</a> of file <a class="el" href="_error_8h_source.xhtml">Error.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_pixel_wise_multiplication_kernel_8cpp_source.xhtml#l00319">CLPixelWiseMultiplicationKernel::border_size()</a>, <a class="el" href="_n_e_pixel_wise_multiplication_kernel_8cpp_source.xhtml#l01644">NEPixelWiseMultiplicationKernel::run_op()</a>, <a class="el" href="_n_e_logical_kernel_8cpp_source.xhtml#l00301">NELogicalKernel::validate()</a>, <a class="el" href="_split_layer_node_8cpp_source.xhtml#l00131">SplitLayerNode::validate()</a>, <a class="el" href="_n_e_reduction_operation_8cpp_source.xhtml#l00065">NEReductionOperation::validate()</a>, <a class="el" href="_cpu_pooling_assembly_wrapper_kernel_8cpp_source.xhtml#l00091">CpuPoolingAssemblyWrapperKernel::validate()</a>, <a class="el" href="_n_e_arg_min_max_layer_8cpp_source.xhtml#l00048">NEArgMinMaxLayer::validate()</a>, <a class="el" href="_cpu_softmax_8cpp_source.xhtml#l00102">CpuSoftmaxGeneric&lt; IS_LOG &gt;::validate()</a>, <a class="el" href="_c_l_arg_min_max_layer_8cpp_source.xhtml#l00046">CLArgMinMaxLayer::validate()</a>, <a class="el" href="_c_l_reduction_operation_8cpp_source.xhtml#l00048">CLReductionOperation::validate()</a>, <a class="el" href="_n_e_g_e_m_m_conv2d_8cpp_source.xhtml#l00119">NEGEMMConv2d::validate()</a>, <a class="el" href="_n_e_g_e_m_m_assembly_dispatch_8cpp_source.xhtml#l00750">NEGEMMAssemblyDispatch::validate()</a>, <a class="el" href="_c_l_softmax_layer_8cpp_source.xhtml#l00123">CLSoftmaxLayerGeneric&lt; IS_LOG &gt;::validate()</a>, <a class="el" href="_n_e_direct_convolution_layer_8cpp_source.xhtml#l00083">NEDirectConvolutionLayer::validate()</a>, <a class="el" href="_n_e_g_e_m_m_8cpp_source.xhtml#l00190">NEGEMM::validate()</a>, <a class="el" href="_n_e_winograd_convolution_layer_8cpp_source.xhtml#l00647">NEWinogradConvolutionLayer::validate()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_matrix_multiply_core_8cpp_source.xhtml#l00437">CLGEMMLowpMatrixMultiplyCore::validate()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_matrix_multiply_core_8cpp_source.xhtml#l00305">NEGEMMLowpMatrixMultiplyCore::validate()</a>, <a class="el" href="_n_e_deconvolution_layer_8cpp_source.xhtml#l00084">NEDeconvolutionLayer::validate()</a>, <a class="el" href="_c_l_winograd_convolution_layer_8cpp_source.xhtml#l00167">CLWinogradConvolutionLayer::validate()</a>, <a class="el" href="_c_l_direct_deconvolution_layer_8cpp_source.xhtml#l00058">CLDirectDeconvolutionLayer::validate()</a>, <a class="el" href="_n_e_convolution_layer_8cpp_source.xhtml#l00101">NEConvolutionLayer::validate()</a>, <a class="el" href="_c_l_convolution_layer_8cpp_source.xhtml#l00101">CLConvolutionLayer::validate()</a>, <a class="el" href="_n_e_q_l_s_t_m_layer_8cpp_source.xhtml#l00579">NEQLSTMLayer::validate()</a>, <a class="el" href="_c_l_q_l_s_t_m_layer_8cpp_source.xhtml#l00598">CLQLSTMLayer::validate()</a>, <a class="el" href="_n_e_g_e_m_m_convolution_layer_8cpp_source.xhtml#l00426">NEGEMMConvolutionLayer::validate()</a>, <a class="el" href="_c_l_g_e_m_m_convolution_layer_8cpp_source.xhtml#l00431">CLGEMMConvolutionLayer::validate()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_output_stage_8cpp_source.xhtml#l00147">NEGEMMLowpOutputStage::validate()</a>, <a class="el" href="_n_e_winograd_convolution_layer_kernel_8cpp_source.xhtml#l00180">INEWinogradLayerTransformWeightsKernel::validate()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00137">arm_compute::graph::backends::detail::validate_convolution_layer()</a>, and <a class="el" href="_c_l_g_e_m_m_helpers_8cpp_source.xhtml#l00084">arm_compute::cl_gemm::validate_image2d_support_on_rhs()</a>.</p>

</div>
</div>
<a id="ab7f9a52dc65a6a76f1576d99828fa1ea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab7f9a52dc65a6a76f1576d99828fa1ea">&#9670;&nbsp;</a></span>ARM_COMPUTE_RETURN_ERROR_ON_MSG_VAR</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ARM_COMPUTE_RETURN_ERROR_ON_MSG_VAR</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">cond, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">msg, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>...</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line"><span class="keywordflow">do</span>                                                                                                        \</div><div class="line">    {                                                                                                         \</div><div class="line">        if(cond)                                                                                              \</div><div class="line">        {                                                                                                     \</div><div class="line">            std::array&lt;char, 512&gt; out{ 0 };                                                                   \</div><div class="line">            int <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a> = <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#a9429515817425d10f4b662eaa069cc5c">snprintf</a>(out.data(), out.size(), <span class="stringliteral">&quot;in %s %s:%d: &quot;</span>, __func__, __FILE__, __LINE__);     \</div><div class="line">            snprintf(out.data() + <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>, out.size() - <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>, msg, __VA_ARGS__);                             \</div><div class="line">            return <a class="code" href="namespacearm__compute.xhtml#a49cdbfceec3cb9949d00dbd1a17c5604">arm_compute::create_error</a>(<a class="code" href="namespacearm__compute.xhtml#a59e56af19e754a6aa26a612ebf91d05fa62be47fdd89da032cf78dfce82239579">arm_compute::ErrorCode::RUNTIME_ERROR</a>, std::string(out.data())); \</div><div class="line">        }                                                                                                     \</div><div class="line">    } <span class="keywordflow">while</span>(<span class="keyword">false</span>)</div><div class="ttc" id="src_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml_a009469e4d9b8fce3b6d5e97d2077827d"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a></div><div class="ttdeci">__global uchar * offset(const Image *img, int x, int y)</div><div class="ttdoc">Get the pointer position of a Image. </div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00846">helpers.h:846</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a59e56af19e754a6aa26a612ebf91d05fa62be47fdd89da032cf78dfce82239579"><div class="ttname"><a href="namespacearm__compute.xhtml#a59e56af19e754a6aa26a612ebf91d05fa62be47fdd89da032cf78dfce82239579">arm_compute::ErrorCode::RUNTIME_ERROR</a></div><div class="ttdoc">Generic runtime error. </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a49cdbfceec3cb9949d00dbd1a17c5604"><div class="ttname"><a href="namespacearm__compute.xhtml#a49cdbfceec3cb9949d00dbd1a17c5604">arm_compute::create_error</a></div><div class="ttdeci">Status create_error(ErrorCode error_code, std::string msg)</div><div class="ttdoc">Creates an error containing the error message. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8cpp_source.xhtml#l00034">Error.cpp:34</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1support_1_1cpp11_xhtml_a9429515817425d10f4b662eaa069cc5c"><div class="ttname"><a href="namespacearm__compute_1_1support_1_1cpp11.xhtml#a9429515817425d10f4b662eaa069cc5c">arm_compute::support::cpp11::snprintf</a></div><div class="ttdeci">int snprintf(char *s, std::size_t n, const char *fmt, Ts &amp;&amp;... args)</div><div class="ttdoc">Loads the data from the given location, converts them to character string equivalents and writes the ...</div><div class="ttdef"><b>Definition:</b> <a href="_toolchain_support_8h_source.xhtml#l00239">ToolchainSupport.h:239</a></div></div>
</div><!-- fragment -->
<p>If the condition is true, an error is returned. </p>
<p>Accepts a message format and a variable list of arguments matching the format description.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cond</td><td>Condition to evaluate. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">msg</td><td>Error description message format. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">...</td><td>List of arguments matching the format description. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_error_8h_source.xhtml#l00227">227</a> of file <a class="el" href="_error_8h_source.xhtml">Error.h</a>.</p>

</div>
</div>
<a id="a8a1e1c105f0bdaf37db408c7cfcb77a4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8a1e1c105f0bdaf37db408c7cfcb77a4">&#9670;&nbsp;</a></span>ARM_COMPUTE_RETURN_ON_ERROR</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ARM_COMPUTE_RETURN_ON_ERROR</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">status</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line"><span class="keywordflow">do</span>                                      \</div><div class="line">    {                                       \</div><div class="line">        if(!<span class="keywordtype">bool</span>(status))                   \</div><div class="line">        {                                   \</div><div class="line">            return status;                  \</div><div class="line">        }                                   \</div><div class="line">    } <span class="keywordflow">while</span>(<span class="keyword">false</span>)</div></div><!-- fragment -->
<p>Checks if a status contains an error and returns it. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">status</td><td>Status value to check </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_error_8h_source.xhtml#l00204">204</a> of file <a class="el" href="_error_8h_source.xhtml">Error.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_asymm_helpers_8cpp_source.xhtml#l00120">arm_compute::quantization::calculate_quantized_multipliers()</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00737">arm_compute::error_on_data_layout_not_in()</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00762">arm_compute::error_on_data_type_channel_not_in()</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00685">arm_compute::error_on_data_type_not_in()</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00457">arm_compute::error_on_mismatching_data_layouts()</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00508">arm_compute::error_on_mismatching_data_types()</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00280">arm_compute::error_on_mismatching_dimensions()</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00601">arm_compute::error_on_mismatching_quantization_info()</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00403">arm_compute::error_on_mismatching_shapes()</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00303">arm_compute::error_on_tensors_not_even()</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00336">arm_compute::error_on_tensors_not_subsampled()</a>, <a class="el" href="src_2core_2_c_p_p_2_validate_8h_source.xhtml#l00097">arm_compute::error_on_unsupported_cpu_bf16()</a>, <a class="el" href="src_2core_2_c_p_p_2_validate_8h_source.xhtml#l00080">arm_compute::error_on_unsupported_cpu_fp16()</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00824">arm_compute::error_on_unsupported_fp16()</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00114">arm_compute::detail::for_each_error()</a>, <a class="el" href="_i_c_p_p_simple_kernel_8cpp_source.xhtml#l00052">ICPPSimpleKernel::ICPPSimpleKernel()</a>, <a class="el" href="_cpu_floor_kernel_8cpp_source.xhtml#l00140">CpuFloorKernel::validate()</a>, <a class="el" href="_cpu_reshape_kernel_8cpp_source.xhtml#l00095">CpuReshapeKernel::validate()</a>, <a class="el" href="_cpu_softmax_kernel_8cpp_source.xhtml#l00239">CpuLogits1DMaxKernel::validate()</a>, <a class="el" href="_cpu_copy_kernel_8cpp_source.xhtml#l00100">CpuCopyKernel::validate()</a>, <a class="el" href="_c_p_p_split_8h_source.xhtml#l00058">CPPSplit&lt; CLSlice, ICLTensor &gt;::validate()</a>, <a class="el" href="_cl_floor_kernel_8cpp_source.xhtml#l00091">ClFloorKernel::validate()</a>, <a class="el" href="_cl_reshape_kernel_8cpp_source.xhtml#l00104">ClReshapeKernel::validate()</a>, <a class="el" href="_cl_copy_kernel_8cpp_source.xhtml#l00124">ClCopyKernel::validate()</a>, <a class="el" href="_cl_elementwise_unary_kernel_8cpp_source.xhtml#l00128">ClElementWiseUnaryKernel::validate()</a>, <a class="el" href="_cpu_concatenate_height_kernel_8cpp_source.xhtml#l00087">CpuConcatenateHeightKernel::validate()</a>, <a class="el" href="_cpu_concatenate_width_kernel_8cpp_source.xhtml#l00087">CpuConcatenateWidthKernel::validate()</a>, <a class="el" href="_n_e_quantization_layer_8cpp_source.xhtml#l00033">NEQuantizationLayer::validate()</a>, <a class="el" href="_n_e_scale_8cpp_source.xhtml#l00175">NEScale::validate()</a>, <a class="el" href="_c_l_transpose_kernel_8cpp_source.xhtml#l00072">CLTransposeKernel::validate()</a>, <a class="el" href="_cpu_activation_kernel_8cpp_source.xhtml#l00224">CpuActivationKernel::validate()</a>, <a class="el" href="_cpu_permute_kernel_8cpp_source.xhtml#l00266">CpuPermuteKernel::validate()</a>, <a class="el" href="_cl_width_concatenate2_tensors_kernel_8cpp_source.xhtml#l00065">ClWidthConcatenate2TensorsKernel::validate()</a>, <a class="el" href="_cpu_concatenate_batch_kernel_8cpp_source.xhtml#l00193">CpuConcatenateBatchKernel::validate()</a>, <a class="el" href="_cl_width_concatenate_kernel_8cpp_source.xhtml#l00068">ClWidthConcatenateKernel::validate()</a>, <a class="el" href="_cl_activation_kernel_8cpp_source.xhtml#l00224">ClActivationKernel::validate()</a>, <a class="el" href="_cl_height_concatenate_kernel_8cpp_source.xhtml#l00069">ClHeightConcatenateKernel::validate()</a>, <a class="el" href="_cl_pooling_kernel_8cpp_source.xhtml#l00418">ClPoolingKernel::validate()</a>, <a class="el" href="_c_l_scale_kernel_8cpp_source.xhtml#l00139">CLScaleKernel::validate()</a>, <a class="el" href="_cpu_pooling_kernel_8cpp_source.xhtml#l00441">CpuPoolingKernel::validate()</a>, <a class="el" href="_n_e_dequantization_layer_kernel_8cpp_source.xhtml#l00386">NEDequantizationLayerKernel::validate()</a>, <a class="el" href="_c_p_p_detection_output_layer_8cpp_source.xhtml#l00438">CPPDetectionOutputLayer::validate()</a>, <a class="el" href="_cl_batch_concatenate_kernel_8cpp_source.xhtml#l00122">ClBatchConcatenateKernel::validate()</a>, <a class="el" href="_cl_depth_concatenate_kernel_8cpp_source.xhtml#l00107">ClDepthConcatenateKernel::validate()</a>, <a class="el" href="_cl_width_concatenate4_tensors_kernel_8cpp_source.xhtml#l00071">ClWidthConcatenate4TensorsKernel::validate()</a>, <a class="el" href="_cpu_concatenate_depth_kernel_8cpp_source.xhtml#l00190">CpuConcatenateDepthKernel::validate()</a>, <a class="el" href="_n_e_reshape_layer_8cpp_source.xhtml#l00058">NEReshapeLayer::validate()</a>, <a class="el" href="_n_e_convert_quantized_signedness_kernel_8cpp_source.xhtml#l00090">NEConvertQuantizedSignednessKernel::validate()</a>, <a class="el" href="_n_e_tile_kernel_8cpp_source.xhtml#l00086">NETileKernel::validate()</a>, <a class="el" href="_n_e_copy_8cpp_source.xhtml#l00058">NECopy::validate()</a>, <a class="el" href="_n_e_channel_shuffle_layer_kernel_8cpp_source.xhtml#l00165">NEChannelShuffleLayerKernel::validate()</a>, <a class="el" href="_n_e_depth_to_space_layer_kernel_8cpp_source.xhtml#l00094">NEDepthToSpaceLayerKernel::validate()</a>, <a class="el" href="_n_e_reverse_kernel_8cpp_source.xhtml#l00080">NEReverseKernel::validate()</a>, <a class="el" href="_n_e_space_to_depth_layer_kernel_8cpp_source.xhtml#l00096">NESpaceToDepthLayerKernel::validate()</a>, <a class="el" href="_c_l_dequantization_layer_kernel_8cpp_source.xhtml#l00127">CLDequantizationLayerKernel::validate()</a>, <a class="el" href="_n_e_prior_box_layer_kernel_8cpp_source.xhtml#l00221">NEPriorBoxLayerKernel::validate()</a>, <a class="el" href="_n_e_threshold_kernel_8cpp_source.xhtml#l00105">NEThresholdKernel::validate()</a>, <a class="el" href="_g_c_pooling_layer_kernel_8cpp_source.xhtml#l00327">GCPoolingLayerKernel::validate()</a>, <a class="el" href="_n_e_f_f_t_scale_kernel_8cpp_source.xhtml#l00111">NEFFTScaleKernel::validate()</a>, <a class="el" href="_n_e_generate_proposals_layer_kernel_8cpp_source.xhtml#l00098">NEComputeAllAnchorsKernel::validate()</a>, <a class="el" href="_n_e_instance_normalization_layer_kernel_8cpp_source.xhtml#l00262">NEInstanceNormalizationLayerKernel::validate()</a>, <a class="el" href="_c_l_strided_slice_kernel_8cpp_source.xhtml#l00167">CLStridedSliceKernel::validate()</a>, <a class="el" href="_n_e_transpose_kernel_8cpp_source.xhtml#l00457">NETransposeKernel::validate()</a>, <a class="el" href="_g_c_arithmetic_addition_kernel_8cpp_source.xhtml#l00126">GCArithmeticAdditionKernel::validate()</a>, <a class="el" href="_cpu_concatenate_8cpp_source.xhtml#l00104">CpuConcatenate::validate()</a>, <a class="el" href="_c_l_min_max_layer_kernel_8cpp_source.xhtml#l00118">CLMinMaxLayerKernel::validate()</a>, <a class="el" href="_n_e_space_to_depth_layer_8cpp_source.xhtml#l00050">NESpaceToDepthLayer::validate()</a>, <a class="el" href="_c_l_channel_shuffle_layer_kernel_8cpp_source.xhtml#l00151">CLChannelShuffleLayerKernel::validate()</a>, <a class="el" href="_n_e_quantization_layer_kernel_8cpp_source.xhtml#l00163">NEQuantizationLayerKernel::validate()</a>, <a class="el" href="_n_e_reorg_layer_kernel_8cpp_source.xhtml#l00097">NEReorgLayerKernel::validate()</a>, <a class="el" href="_c_p_p_permute_kernel_8cpp_source.xhtml#l00143">CPPPermuteKernel::validate()</a>, <a class="el" href="_c_p_p_top_k_v_kernel_8cpp_source.xhtml#l00118">CPPTopKVKernel::validate()</a>, <a class="el" href="_g_c_normalize_planar_y_u_v_layer_kernel_8cpp_source.xhtml#l00127">GCNormalizePlanarYUVLayerKernel::validate()</a>, <a class="el" href="_c_l_depthwise_convolution_layer_reshape_weights_kernel_8cpp_source.xhtml#l00115">CLDepthwiseConvolutionLayerReshapeWeightsKernel::validate()</a>, <a class="el" href="_c_l_reverse_kernel_8cpp_source.xhtml#l00116">CLReverseKernel::validate()</a>, <a class="el" href="_n_e_f_f_t_digit_reverse_kernel_8cpp_source.xhtml#l00137">NEFFTDigitReverseKernel::validate()</a>, <a class="el" href="_c_l_select_kernel_8cpp_source.xhtml#l00129">CLSelectKernel::validate()</a>, <a class="el" href="_c_l_space_to_depth_layer_kernel_8cpp_source.xhtml#l00107">CLSpaceToDepthLayerKernel::validate()</a>, <a class="el" href="_cpu_add_kernel_8cpp_source.xhtml#l00313">CpuAddKernel::validate()</a>, <a class="el" href="_c_l_depth_to_space_layer_kernel_8cpp_source.xhtml#l00108">CLDepthToSpaceLayerKernel::validate()</a>, <a class="el" href="_c_l_reshape_layer_8cpp_source.xhtml#l00065">CLReshapeLayer::validate()</a>, <a class="el" href="_n_e_softmax_layer_8cpp_source.xhtml#l00129">NESoftmaxLayerGeneric&lt; IS_LOG &gt;::validate()</a>, <a class="el" href="_cl_concatenate_8cpp_source.xhtml#l00146">ClConcatenate::validate()</a>, <a class="el" href="_n_e_f_f_t2_d_8cpp_source.xhtml#l00062">NEFFT2D::validate()</a>, <a class="el" href="_n_e_permute_8cpp_source.xhtml#l00059">NEPermute::validate()</a>, <a class="el" href="_n_e_r_o_i_align_layer_8cpp_source.xhtml#l00031">NEROIAlignLayer::validate()</a>, <a class="el" href="_n_e_unstack_8cpp_source.xhtml#l00090">NEUnstack::validate()</a>, <a class="el" href="_c_l_f_f_t_scale_kernel_8cpp_source.xhtml#l00123">CLFFTScaleKernel::validate()</a>, <a class="el" href="_n_e_f_f_t_radix_stage_kernel_8cpp_source.xhtml#l01025">NEFFTRadixStageKernel::validate()</a>, <a class="el" href="_n_e_max_unpooling_layer_kernel_8cpp_source.xhtml#l00126">NEMaxUnpoolingLayerKernel::validate()</a>, <a class="el" href="_n_e_normalization_layer_kernel_8cpp_source.xhtml#l00281">NENormalizationLayerKernel::validate()</a>, <a class="el" href="_n_e_range_kernel_8cpp_source.xhtml#l00174">NERangeKernel::validate()</a>, <a class="el" href="_c_l_generate_proposals_layer_kernel_8cpp_source.xhtml#l00130">CLComputeAllAnchorsKernel::validate()</a>, <a class="el" href="_c_l_max_unpooling_layer_kernel_8cpp_source.xhtml#l00122">CLMaxUnpoolingLayerKernel::validate()</a>, <a class="el" href="_cl_permute_kernel_8cpp_source.xhtml#l00121">ClPermuteKernel::validate()</a>, <a class="el" href="_c_l_q_l_s_t_m_layer_normalization_kernel_8cpp_source.xhtml#l00141">CLQLSTMLayerNormalizationKernel::validate()</a>, <a class="el" href="_n_e_batch_to_space_layer_kernel_8cpp_source.xhtml#l00124">NEBatchToSpaceLayerKernel::validate()</a>, <a class="el" href="_c_l_quantization_layer_kernel_8cpp_source.xhtml#l00155">CLQuantizationLayerKernel::validate()</a>, <a class="el" href="_n_e_mean_std_dev_normalization_kernel_8cpp_source.xhtml#l00189">NEMeanStdDevNormalizationKernel::validate()</a>, <a class="el" href="_n_e_min_max_layer_kernel_8cpp_source.xhtml#l00111">NEMinMaxLayerKernel::validate()</a>, <a class="el" href="_c_l_unstack_8cpp_source.xhtml#l00095">CLUnstack::validate()</a>, <a class="el" href="_c_l_gather_kernel_8cpp_source.xhtml#l00114">CLGatherKernel::validate()</a>, <a class="el" href="_c_l_comparison_kernel_8cpp_source.xhtml#l00166">CLComparisonKernel::validate()</a>, <a class="el" href="_c_l_normalization_layer_kernel_8cpp_source.xhtml#l00187">CLNormalizationLayerKernel::validate()</a>, <a class="el" href="_c_l_f_f_t_digit_reverse_kernel_8cpp_source.xhtml#l00115">CLFFTDigitReverseKernel::validate()</a>, <a class="el" href="_n_e_gather_kernel_8cpp_source.xhtml#l00192">NEGatherKernel::validate()</a>, <a class="el" href="_n_e_r_n_n_layer_8cpp_source.xhtml#l00054">NERNNLayer::validate()</a>, <a class="el" href="_c_l_tile_kernel_8cpp_source.xhtml#l00128">CLTileKernel::validate()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_quantize_down_int32_scale_by_fixed_point_kernel_8cpp_source.xhtml#l00071">CLGEMMLowpQuantizeDownInt32ScaleByFixedPointKernel::validate()</a>, <a class="el" href="_n_e_reduction_operation_8cpp_source.xhtml#l00065">NEReductionOperation::validate()</a>, <a class="el" href="_n_e_g_e_m_m_matrix_addition_kernel_8cpp_source.xhtml#l00146">NEGEMMMatrixAdditionKernel::validate()</a>, <a class="el" href="_c_l_instance_normalization_layer_kernel_8cpp_source.xhtml#l00119">CLInstanceNormalizationLayerKernel::validate()</a>, <a class="el" href="_n_e_l2_normalize_layer_8cpp_source.xhtml#l00059">NEL2NormalizeLayer::validate()</a>, <a class="el" href="_c_l_mean_std_dev_normalization_kernel_8cpp_source.xhtml#l00128">CLMeanStdDevNormalizationKernel::validate()</a>, <a class="el" href="_n_e_bounding_box_transform_kernel_8cpp_source.xhtml#l00113">NEBoundingBoxTransformKernel::validate()</a>, <a class="el" href="_c_l_range_kernel_8cpp_source.xhtml#l00123">CLRangeKernel::validate()</a>, <a class="el" href="_c_l_reorg_layer_kernel_8cpp_source.xhtml#l00121">CLReorgLayerKernel::validate()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_matrix_multiply_kernel_8cpp_source.xhtml#l00940">NEGEMMLowpMatrixMultiplyKernel::validate()</a>, <a class="el" href="_c_l_softmax_layer_kernel_8cpp_source.xhtml#l00238">CLLogits1DMaxShiftExpSumKernel::validate()</a>, <a class="el" href="_n_e_pad_layer_kernel_8cpp_source.xhtml#l00246">NEPadLayerKernel::validate()</a>, <a class="el" href="_n_e_reduction_operation_kernel_8cpp_source.xhtml#l01687">NEReductionOperationKernel::validate()</a>, <a class="el" href="_c_p_p_non_maximum_suppression_kernel_8cpp_source.xhtml#l00085">CPPNonMaximumSuppressionKernel::validate()</a>, <a class="el" href="_n_e_stack_layer_8cpp_source.xhtml#l00061">NEStackLayer::validate()</a>, <a class="el" href="_g_c_batch_normalization_layer_kernel_8cpp_source.xhtml#l00193">GCBatchNormalizationLayerKernel::validate()</a>, <a class="el" href="_g_c_g_e_m_m_matrix_multiply_kernel_8cpp_source.xhtml#l00289">GCGEMMMatrixMultiplyKernel::validate()</a>, <a class="el" href="_c_l_f_f_t_radix_stage_kernel_8cpp_source.xhtml#l00141">CLFFTRadixStageKernel::validate()</a>, <a class="el" href="_n_e_normalization_layer_8cpp_source.xhtml#l00062">NENormalizationLayer::validate()</a>, <a class="el" href="_n_e_scale_kernel_8cpp_source.xhtml#l00576">NEScaleKernel::validate()</a>, <a class="el" href="_n_e_stack_layer_kernel_8cpp_source.xhtml#l00109">NEStackLayerKernel::validate()</a>, <a class="el" href="_n_e_direct_convolution_layer_kernel_8cpp_source.xhtml#l01273">NEDirectConvolutionLayerKernel::validate()</a>, <a class="el" href="_n_e_direct_convolution_layer_output_stage_kernel_8cpp_source.xhtml#l00497">NEDirectConvolutionLayerOutputStageKernel::validate()</a>, <a class="el" href="_n_e_g_e_m_m_matrix_multiply_kernel_8cpp_source.xhtml#l01136">NEGEMMMatrixMultiplyKernel::validate()</a>, <a class="el" href="_c_l_deconvolution_layer_8cpp_source.xhtml#l00077">CLDeconvolutionLayer::validate()</a>, <a class="el" href="_c_l_f_f_t2_d_8cpp_source.xhtml#l00067">CLFFT2D::validate()</a>, <a class="el" href="_n_e_space_to_batch_layer_kernel_8cpp_source.xhtml#l00131">NESpaceToBatchLayerKernel::validate()</a>, <a class="el" href="_c_l_normalize_planar_y_u_v_layer_kernel_8cpp_source.xhtml#l00156">CLNormalizePlanarYUVLayerKernel::validate()</a>, <a class="el" href="_c_l_prior_box_layer_kernel_8cpp_source.xhtml#l00196">CLPriorBoxLayerKernel::validate()</a>, <a class="el" href="_c_l_pad_layer_kernel_8cpp_source.xhtml#l00180">CLPadLayerKernel::validate()</a>, <a class="el" href="_c_p_p_detection_post_process_layer_8cpp_source.xhtml#l00266">CPPDetectionPostProcessLayer::validate()</a>, <a class="el" href="_cpu_softmax_8cpp_source.xhtml#l00102">CpuSoftmaxGeneric&lt; IS_LOG &gt;::validate()</a>, <a class="el" href="_n_e_depth_convert_layer_kernel_8cpp_source.xhtml#l00133">NEDepthConvertLayerKernel::validate()</a>, <a class="el" href="_n_e_g_e_m_m_interleave4x4_kernel_8cpp_source.xhtml#l00111">NEGEMMInterleave4x4Kernel::validate()</a>, <a class="el" href="_c_l_reduction_operation_kernel_8cpp_source.xhtml#l00246">CLReductionOperationKernel::validate()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_quantize_down_int32_scale_kernel_8cpp_source.xhtml#l00307">NEGEMMLowpQuantizeDownInt32ScaleKernel::validate()</a>, <a class="el" href="_n_e_r_o_i_align_layer_kernel_8cpp_source.xhtml#l00112">NEROIAlignLayerKernel::validate()</a>, <a class="el" href="_n_e_detection_post_process_layer_8cpp_source.xhtml#l00072">NEDetectionPostProcessLayer::validate()</a>, <a class="el" href="_cpu_sub_kernel_8cpp_source.xhtml#l00222">CpuSubKernel::validate()</a>, <a class="el" href="_n_e_space_to_batch_layer_8cpp_source.xhtml#l00072">NESpaceToBatchLayer::validate()</a>, <a class="el" href="_n_e_batch_normalization_layer_kernel_8cpp_source.xhtml#l00369">NEBatchNormalizationLayerKernel::validate()</a>, <a class="el" href="_c_l_l2_normalize_layer_kernel_8cpp_source.xhtml#l00159">CLL2NormalizeLayerKernel::validate()</a>, <a class="el" href="_c_l_bounding_box_transform_kernel_8cpp_source.xhtml#l00156">CLBoundingBoxTransformKernel::validate()</a>, <a class="el" href="_c_l_depth_convert_layer_kernel_8cpp_source.xhtml#l00154">CLDepthConvertLayerKernel::validate()</a>, <a class="el" href="_c_l_r_n_n_layer_8cpp_source.xhtml#l00056">CLRNNLayer::validate()</a>, <a class="el" href="_n_e_fuse_batch_normalization_kernel_8cpp_source.xhtml#l00498">NEFuseBatchNormalizationKernel::validate()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_offset_contribution_kernel_8cpp_source.xhtml#l00396">NEGEMMLowpOffsetContributionKernel::validate()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_quantize_down_int32_to_int16_scale_by_fixed_point_kernel_8cpp_source.xhtml#l00221">NEGEMMLowpQuantizeDownInt32ToInt16ScaleByFixedPointKernel::validate()</a>, <a class="el" href="_n_e_strided_slice_kernel_8cpp_source.xhtml#l00158">NEStridedSliceKernel::validate()</a>, <a class="el" href="_n_e_col2_im_kernel_8cpp_source.xhtml#l00140">NECol2ImKernel::validate()</a>, <a class="el" href="_n_e_crop_resize_8cpp_source.xhtml#l00040">NECropResize::validate()</a>, <a class="el" href="_c_l_batch_to_space_layer_kernel_8cpp_source.xhtml#l00154">CLBatchToSpaceLayerKernel::validate()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_quantize_down_int32_scale_by_float_kernel_8cpp_source.xhtml#l00075">CLGEMMLowpQuantizeDownInt32ScaleByFloatKernel::validate()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_quantize_down_int32_scale_kernel_8cpp_source.xhtml#l00071">CLGEMMLowpQuantizeDownInt32ScaleKernel::validate()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_quantize_down_int32_to_uint8_scale_by_fixed_point_kernel_8cpp_source.xhtml#l00232">NEGEMMLowpQuantizeDownInt32ToUint8ScaleByFixedPointKernel::validate()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_quantize_down_int32_to_int8_scale_by_fixed_point_kernel_8cpp_source.xhtml#l00230">NEGEMMLowpQuantizeDownInt32ToInt8ScaleByFixedPointKernel::validate()</a>, <a class="el" href="_c_l_stack_layer_kernel_8cpp_source.xhtml#l00114">CLStackLayerKernel::validate()</a>, <a class="el" href="_n_e_batch_normalization_layer_8cpp_source.xhtml#l00051">NEBatchNormalizationLayer::validate()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_matrix_multiply_native_kernel_8cpp_source.xhtml#l00263">CLGEMMLowpMatrixMultiplyNativeKernel::validate()</a>, <a class="el" href="_c_l_arg_min_max_layer_8cpp_source.xhtml#l00046">CLArgMinMaxLayer::validate()</a>, <a class="el" href="_c_l_stack_layer_8cpp_source.xhtml#l00068">CLStackLayer::validate()</a>, <a class="el" href="_c_l_r_o_i_align_layer_8cpp_source.xhtml#l00032">CLROIAlignLayer::validate()</a>, <a class="el" href="_c_l_arg_min_max_layer_kernel_8cpp_source.xhtml#l00148">CLArgMinMaxLayerKernel::validate()</a>, <a class="el" href="_n_e_depthwise_convolution_layer_native_kernel_8cpp_source.xhtml#l00857">NEDepthwiseConvolutionLayerNativeKernel::validate()</a>, <a class="el" href="_c_l_l2_normalize_layer_8cpp_source.xhtml#l00075">CLL2NormalizeLayer::validate()</a>, <a class="el" href="_g_c_g_e_m_m_8cpp_source.xhtml#l00155">GCGEMM::validate()</a>, <a class="el" href="_c_l_g_e_m_m_reshape_l_h_s_matrix_kernel_8cpp_source.xhtml#l00189">CLGEMMReshapeLHSMatrixKernel::validate()</a>, <a class="el" href="_c_l_reduction_operation_8cpp_source.xhtml#l00048">CLReductionOperation::validate()</a>, <a class="el" href="_cpu_softmax_kernel_8cpp_source.xhtml#l00342">CpuLogits1DSoftmaxKernel&lt; IS_LOG &gt;::validate()</a>, <a class="el" href="_c_l_col2_im_kernel_8cpp_source.xhtml#l00140">CLCol2ImKernel::validate()</a>, <a class="el" href="_c_l_pad_layer_8cpp_source.xhtml#l00062">CLPadLayer::validate()</a>, <a class="el" href="_n_e_g_e_m_m_conv2d_8cpp_source.xhtml#l00119">NEGEMMConv2d::validate()</a>, <a class="el" href="_c_l_deconvolution_reshape_output_kernel_8cpp_source.xhtml#l00180">CLDeconvolutionReshapeOutputKernel::validate()</a>, <a class="el" href="_c_l_winograd_input_transform_8cpp_source.xhtml#l00046">CLWinogradInputTransform::validate()</a>, <a class="el" href="_c_l_r_o_i_align_layer_kernel_8cpp_source.xhtml#l00148">CLROIAlignLayerKernel::validate()</a>, <a class="el" href="_c_l_space_to_batch_layer_kernel_8cpp_source.xhtml#l00174">CLSpaceToBatchLayerKernel::validate()</a>, <a class="el" href="_n_e_weights_reshape_kernel_8cpp_source.xhtml#l00115">NEWeightsReshapeKernel::validate()</a>, <a class="el" href="_g_c_im2_col_kernel_8cpp_source.xhtml#l00213">GCIm2ColKernel::validate()</a>, <a class="el" href="_c_l_direct_convolution_layer_8cpp_source.xhtml#l00079">CLDirectConvolutionLayer::validate()</a>, <a class="el" href="_c_l_batch_normalization_layer_kernel_8cpp_source.xhtml#l00204">CLBatchNormalizationLayerKernel::validate()</a>, <a class="el" href="_n_e_g_e_m_m_transpose1x_w_kernel_8cpp_source.xhtml#l00092">NEGEMMTranspose1xWKernel::validate()</a>, <a class="el" href="_c_l_depthwise_convolution_layer3x3_n_h_w_c_kernel_8cpp_source.xhtml#l00361">CLDepthwiseConvolutionLayer3x3NHWCKernel::validate()</a>, <a class="el" href="_c_l_depthwise_convolution_layer3x3_n_c_h_w_kernel_8cpp_source.xhtml#l00371">CLDepthwiseConvolutionLayer3x3NCHWKernel::validate()</a>, <a class="el" href="_c_l_softmax_layer_8cpp_source.xhtml#l00123">CLSoftmaxLayerGeneric&lt; IS_LOG &gt;::validate()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_offset_contribution_kernel_8cpp_source.xhtml#l00173">CLGEMMLowpOffsetContributionKernel::validate()</a>, <a class="el" href="_c_l_winograd_input_transform_kernel_8cpp_source.xhtml#l00210">CLWinogradInputTransformKernel::validate()</a>, <a class="el" href="_c_l_fuse_batch_normalization_kernel_8cpp_source.xhtml#l00181">CLFuseBatchNormalizationKernel::validate()</a>, <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8cpp_source.xhtml#l00458">CLGEMMMatrixMultiplyKernel::validate()</a>, <a class="el" href="_n_e_direct_convolution_layer_8cpp_source.xhtml#l00083">NEDirectConvolutionLayer::validate()</a>, <a class="el" href="_n_e_winograd_convolution_layer_8cpp_source.xhtml#l00647">NEWinogradConvolutionLayer::validate()</a>, <a class="el" href="_c_l_winograd_filter_transform_kernel_8cpp_source.xhtml#l00135">CLWinogradFilterTransformKernel::validate()</a>, <a class="el" href="_n_e_generate_proposals_layer_8cpp_source.xhtml#l00210">NEGenerateProposalsLayer::validate()</a>, <a class="el" href="_n_e_g_e_m_m_8cpp_source.xhtml#l00190">NEGEMM::validate()</a>, <a class="el" href="_n_e_im2_col_kernel_8cpp_source.xhtml#l00446">NEIm2ColKernel::validate()</a>, <a class="el" href="_c_l_g_e_m_m_matrix_multiply_native_kernel_8cpp_source.xhtml#l00325">CLGEMMMatrixMultiplyNativeKernel::validate()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_matrix_multiply_reshaped_kernel_8cpp_source.xhtml#l00233">CLGEMMLowpMatrixMultiplyReshapedKernel::validate()</a>, <a class="el" href="_c_l_direct_convolution_layer_kernel_8cpp_source.xhtml#l00516">CLDirectConvolutionLayerKernel::validate()</a>, <a class="el" href="_n_e_f_f_t_convolution_layer_8cpp_source.xhtml#l00261">NEFFTConvolutionLayer::validate()</a>, <a class="el" href="_c_l_space_to_batch_layer_8cpp_source.xhtml#l00080">CLSpaceToBatchLayer::validate()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_matrix_multiply_core_8cpp_source.xhtml#l00305">NEGEMMLowpMatrixMultiplyCore::validate()</a>, <a class="el" href="_c_l_weights_reshape_kernel_8cpp_source.xhtml#l00117">CLWeightsReshapeKernel::validate()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_matrix_multiply_core_8cpp_source.xhtml#l00437">CLGEMMLowpMatrixMultiplyCore::validate()</a>, <a class="el" href="_n_e_deconvolution_layer_8cpp_source.xhtml#l00084">NEDeconvolutionLayer::validate()</a>, <a class="el" href="_n_e_pixel_wise_multiplication_kernel_8cpp_source.xhtml#l01635">NEPixelWiseMultiplicationKernel::validate()</a>, <a class="el" href="_c_l_winograd_output_transform_kernel_8cpp_source.xhtml#l00217">CLWinogradOutputTransformKernel::validate()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_offset_contribution_output_stage_kernel_8cpp_source.xhtml#l00908">NEGEMMLowpOffsetContributionOutputStageKernel::validate()</a>, <a class="el" href="_c_l_depthwise_convolution_layer_native_kernel_8cpp_source.xhtml#l00264">CLDepthwiseConvolutionLayerNativeKernel::validate()</a>, <a class="el" href="_cpu_elementwise_kernel_8cpp_source.xhtml#l00231">CpuArithmeticKernel::validate()</a>, <a class="el" href="_c_l_crop_resize_8cpp_source.xhtml#l00065">CLCropResize::validate()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_offset_contribution_output_stage_kernel_8cpp_source.xhtml#l00229">CLGEMMLowpOffsetContributionOutputStageKernel::validate()</a>, <a class="el" href="_c_l_im2_col_kernel_8cpp_source.xhtml#l00366">CLIm2ColKernel::validate()</a>, <a class="el" href="_cl_elementwise_kernel_8cpp_source.xhtml#l00344">ClLogicalBinaryKernel::validate()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_reduction_kernel_8cpp_source.xhtml#l00090">NEGEMMLowpMatrixAReductionKernel::validate()</a>, <a class="el" href="_c_l_winograd_convolution_layer_8cpp_source.xhtml#l00167">CLWinogradConvolutionLayer::validate()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_reduction_kernel_8cpp_source.xhtml#l00119">CLGEMMLowpMatrixAReductionKernel::validate()</a>, <a class="el" href="_c_l_g_e_m_m_reshape_r_h_s_matrix_kernel_8cpp_source.xhtml#l00151">CLGEMMReshapeRHSMatrixKernel::validate()</a>, <a class="el" href="_c_l_g_e_m_m_deconvolution_layer_8cpp_source.xhtml#l00135">CLGEMMDeconvolutionLayer::validate()</a>, <a class="el" href="_c_l_f_f_t_convolution_layer_8cpp_source.xhtml#l00269">CLFFTConvolutionLayer::validate()</a>, <a class="el" href="_n_e_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00247">NELSTMLayerQuantized::validate()</a>, <a class="el" href="_c_l_generate_proposals_layer_8cpp_source.xhtml#l00207">CLGenerateProposalsLayer::validate()</a>, <a class="el" href="_c_l_direct_deconvolution_layer_8cpp_source.xhtml#l00058">CLDirectDeconvolutionLayer::validate()</a>, <a class="el" href="_n_e_convolution_layer_8cpp_source.xhtml#l00101">NEConvolutionLayer::validate()</a>, <a class="el" href="_c_l_pixel_wise_multiplication_kernel_8cpp_source.xhtml#l00262">CLPixelWiseMultiplicationKernel::validate()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_matrix_multiply_reshaped_only_r_h_s_kernel_8cpp_source.xhtml#l00463">CLGEMMLowpMatrixMultiplyReshapedOnlyRHSKernel::validate()</a>, <a class="el" href="_n_e_l_s_t_m_layer_8cpp_source.xhtml#l00377">NELSTMLayer::validate()</a>, <a class="el" href="_c_l_g_e_m_m_matrix_multiply_reshaped_only_r_h_s_kernel_8cpp_source.xhtml#l00329">CLGEMMMatrixMultiplyReshapedOnlyRHSKernel::validate()</a>, <a class="el" href="_c_l_softmax_layer_kernel_8cpp_source.xhtml#l00341">CLLogits1DNormKernel::validate()</a>, <a class="el" href="_c_l_convolution_layer_8cpp_source.xhtml#l00101">CLConvolutionLayer::validate()</a>, <a class="el" href="_c_l_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00275">CLLSTMLayerQuantized::validate()</a>, <a class="el" href="_cpu_elementwise_kernel_8cpp_source.xhtml#l00277">CpuDivisionKernel::validate()</a>, <a class="el" href="_cl_elementwise_kernel_8cpp_source.xhtml#l00407">ClSaturatedArithmeticKernel::validate()</a>, <a class="el" href="_c_l_g_e_m_m_matrix_multiply_reshaped_kernel_8cpp_source.xhtml#l00336">CLGEMMMatrixMultiplyReshapedKernel::validate()</a>, <a class="el" href="_n_e_q_l_s_t_m_layer_8cpp_source.xhtml#l00579">NEQLSTMLayer::validate()</a>, <a class="el" href="_n_e_fully_connected_layer_8cpp_source.xhtml#l00327">NEFullyConnectedLayer::validate()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_reduction_kernel_8cpp_source.xhtml#l00191">CLGEMMLowpMatrixBReductionKernel::validate()</a>, <a class="el" href="_c_l_g_e_m_m_8cpp_source.xhtml#l00727">CLGEMM::validate()</a>, <a class="el" href="_n_e_pixel_wise_multiplication_kernel_8cpp_source.xhtml#l01712">NEComplexPixelWiseMultiplicationKernel::validate()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_reduction_kernel_8cpp_source.xhtml#l00211">NEGEMMLowpMatrixBReductionKernel::validate()</a>, <a class="el" href="_c_l_pixel_wise_multiplication_kernel_8cpp_source.xhtml#l00419">CLComplexPixelWiseMultiplicationKernel::validate()</a>, <a class="el" href="_cpu_elementwise_kernel_8cpp_source.xhtml#l00298">CpuPowerKernel::validate()</a>, <a class="el" href="_c_l_fully_connected_layer_8cpp_source.xhtml#l00341">CLFullyConnectedLayer::validate()</a>, <a class="el" href="_c_l_l_s_t_m_layer_8cpp_source.xhtml#l00404">CLLSTMLayer::validate()</a>, <a class="el" href="_cl_elementwise_kernel_8cpp_source.xhtml#l00459">ClArithmeticKernel::validate()</a>, <a class="el" href="_n_e_winograd_convolution_layer_kernel_8cpp_source.xhtml#l00397">NEWinogradLayerTransformInputKernel&lt; T, OutputTileRows, OutputTileCols, KernelRows, KernelCols &gt;::validate()</a>, <a class="el" href="_c_l_q_l_s_t_m_layer_8cpp_source.xhtml#l00598">CLQLSTMLayer::validate()</a>, <a class="el" href="_cpu_elementwise_kernel_8cpp_source.xhtml#l00324">CpuComparisonKernel::validate()</a>, <a class="el" href="_n_e_g_e_m_m_convolution_layer_8cpp_source.xhtml#l00426">NEGEMMConvolutionLayer::validate()</a>, <a class="el" href="_c_l_g_e_m_m_convolution_layer_8cpp_source.xhtml#l00431">CLGEMMConvolutionLayer::validate()</a>, <a class="el" href="_n_e_winograd_convolution_layer_kernel_8cpp_source.xhtml#l00528">NEWinogradLayerTransformOutputKernel&lt; T, OutputTileRows, OutputTileCols, KernelRows, KernelCols &gt;::validate()</a>, and <a class="el" href="_n_e_winograd_convolution_layer_kernel_8cpp_source.xhtml#l00259">NEWinogradLayerTransformWeightsKernel&lt; T, OutputTileRows, OutputTileCols, KernelRows, KernelCols &gt;::validate()</a>.</p>

</div>
</div>
<a id="ad5518fdae84a33ce6fbed540c6e89479"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad5518fdae84a33ce6fbed540c6e89479">&#9670;&nbsp;</a></span>ARM_COMPUTE_THROW</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ARM_COMPUTE_THROW</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">ex</td><td>)</td>
          <td>&#160;&#160;&#160;throw(ex)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_error_8h_source.xhtml#l00480">480</a> of file <a class="el" href="_error_8h_source.xhtml">Error.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cast_8h_source.xhtml#l00047">arm_compute::utils::cast::polymorphic_cast()</a>, <a class="el" href="_cast_8h_source.xhtml#l00087">arm_compute::utils::cast::polymorphic_cast_unique_ptr()</a>, and <a class="el" href="_error_8cpp_source.xhtml#l00046">arm_compute::throw_error()</a>.</p>

</div>
</div>
<a id="adfd4354a6e0f46eddd353913a1470219"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adfd4354a6e0f46eddd353913a1470219">&#9670;&nbsp;</a></span>ARM_COMPUTE_THROW_ERROR</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ARM_COMPUTE_THROW_ERROR</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><a class="el" href="_cpu_floor_kernel_8cpp.xhtml#a89746721cac623cd0ffa90c03fc7a657">func</a>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">file, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">line, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">msg&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line"><span class="keywordflow">do</span>                                                                                                                         \</div><div class="line">    {                                                                                                                          <a class="code" href="namespacearm__compute.xhtml#a61e7f5901fd23f6009db8eac1a400be9">\</a></div><div class="line"><a class="code" href="namespacearm__compute.xhtml#a61e7f5901fd23f6009db8eac1a400be9">        arm_compute::throw_error</a>(<a class="code" href="namespacearm__compute.xhtml#af9b3e9f3ef6409e72c71aeacebf58f3b">arm_compute::create_error_msg</a>(<a class="code" href="namespacearm__compute.xhtml#a59e56af19e754a6aa26a612ebf91d05fa62be47fdd89da032cf78dfce82239579">arm_compute::ErrorCode::RUNTIME_ERROR</a>, <a class="code" href="_cpu_floor_kernel_8cpp.xhtml#a89746721cac623cd0ffa90c03fc7a657">func</a>, file, line, msg)); \</div><div class="line">    } <span class="keywordflow">while</span>(<span class="keyword">false</span>)</div><div class="ttc" id="namespacearm__compute_xhtml_af9b3e9f3ef6409e72c71aeacebf58f3b"><div class="ttname"><a href="namespacearm__compute.xhtml#af9b3e9f3ef6409e72c71aeacebf58f3b">arm_compute::create_error_msg</a></div><div class="ttdeci">Status create_error_msg(ErrorCode error_code, const char *func, const char *file, int line, const char *msg)</div><div class="ttdoc">Creates an error and the error message. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8cpp_source.xhtml#l00039">Error.cpp:39</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a61e7f5901fd23f6009db8eac1a400be9"><div class="ttname"><a href="namespacearm__compute.xhtml#a61e7f5901fd23f6009db8eac1a400be9">arm_compute::throw_error</a></div><div class="ttdeci">void throw_error(Status err)</div><div class="ttdoc">Throw an std::runtime_error. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8cpp_source.xhtml#l00046">Error.cpp:46</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a59e56af19e754a6aa26a612ebf91d05fa62be47fdd89da032cf78dfce82239579"><div class="ttname"><a href="namespacearm__compute.xhtml#a59e56af19e754a6aa26a612ebf91d05fa62be47fdd89da032cf78dfce82239579">arm_compute::ErrorCode::RUNTIME_ERROR</a></div><div class="ttdoc">Generic runtime error. </div></div>
<div class="ttc" id="_cpu_floor_kernel_8cpp_xhtml_a89746721cac623cd0ffa90c03fc7a657"><div class="ttname"><a href="_cpu_floor_kernel_8cpp.xhtml#a89746721cac623cd0ffa90c03fc7a657">func</a></div><div class="ttdeci">FloorUKernelPtr func</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_floor_kernel_8cpp_source.xhtml#l00057">CpuFloorKernel.cpp:57</a></div></div>
</div><!-- fragment -->
<p>Print the given message then throw an std::runtime_error. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">func</td><td>Function in which the error occurred. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">file</td><td>File in which the error occurred. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">line</td><td>Line in which the error occurred. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">msg</td><td>Message to display. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_error_8h_source.xhtml#l00316">316</a> of file <a class="el" href="_error_8h_source.xhtml">Error.h</a>.</p>

</div>
</div>
<a id="a86513cce33cfea9d3dd6eac3366b8253"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a86513cce33cfea9d3dd6eac3366b8253">&#9670;&nbsp;</a></span>ARM_COMPUTE_THROW_ERROR_VAR</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ARM_COMPUTE_THROW_ERROR_VAR</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><a class="el" href="_cpu_floor_kernel_8cpp.xhtml#a89746721cac623cd0ffa90c03fc7a657">func</a>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">file, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">line, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">msg, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>...</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line"><span class="keywordflow">do</span>                                                                                                                 \</div><div class="line">    {                                                                                                                  \</div><div class="line">        std::array&lt;char, 512&gt; out{ 0 };                                                                                \</div><div class="line">        int <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a> = <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#a9429515817425d10f4b662eaa069cc5c">snprintf</a>(out.data(), out.size(), <span class="stringliteral">&quot;in %s %s:%d: &quot;</span>, <a class="code" href="_cpu_floor_kernel_8cpp.xhtml#a89746721cac623cd0ffa90c03fc7a657">func</a>, file, line);                              \</div><div class="line">        snprintf(out.data() + <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>, out.size() - <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>, msg, __VA_ARGS__);                                          <a class="code" href="namespacearm__compute.xhtml#a61e7f5901fd23f6009db8eac1a400be9">\</a></div><div class="line"><a class="code" href="namespacearm__compute.xhtml#a61e7f5901fd23f6009db8eac1a400be9">        arm_compute::throw_error</a>(<a class="code" href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a>(<a class="code" href="namespacearm__compute.xhtml#a59e56af19e754a6aa26a612ebf91d05fa62be47fdd89da032cf78dfce82239579">arm_compute::ErrorCode::RUNTIME_ERROR</a>, std::string(out.data()))); \</div><div class="line">    } <span class="keywordflow">while</span>(<span class="keyword">false</span>)</div><div class="ttc" id="src_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml_a009469e4d9b8fce3b6d5e97d2077827d"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a></div><div class="ttdeci">__global uchar * offset(const Image *img, int x, int y)</div><div class="ttdoc">Get the pointer position of a Image. </div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00846">helpers.h:846</a></div></div>
<div class="ttc" id="classarm__compute_1_1_status_xhtml"><div class="ttname"><a href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a></div><div class="ttdoc">Status class. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00052">Error.h:52</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a61e7f5901fd23f6009db8eac1a400be9"><div class="ttname"><a href="namespacearm__compute.xhtml#a61e7f5901fd23f6009db8eac1a400be9">arm_compute::throw_error</a></div><div class="ttdeci">void throw_error(Status err)</div><div class="ttdoc">Throw an std::runtime_error. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8cpp_source.xhtml#l00046">Error.cpp:46</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a59e56af19e754a6aa26a612ebf91d05fa62be47fdd89da032cf78dfce82239579"><div class="ttname"><a href="namespacearm__compute.xhtml#a59e56af19e754a6aa26a612ebf91d05fa62be47fdd89da032cf78dfce82239579">arm_compute::ErrorCode::RUNTIME_ERROR</a></div><div class="ttdoc">Generic runtime error. </div></div>
<div class="ttc" id="_cpu_floor_kernel_8cpp_xhtml_a89746721cac623cd0ffa90c03fc7a657"><div class="ttname"><a href="_cpu_floor_kernel_8cpp.xhtml#a89746721cac623cd0ffa90c03fc7a657">func</a></div><div class="ttdeci">FloorUKernelPtr func</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_floor_kernel_8cpp_source.xhtml#l00057">CpuFloorKernel.cpp:57</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1support_1_1cpp11_xhtml_a9429515817425d10f4b662eaa069cc5c"><div class="ttname"><a href="namespacearm__compute_1_1support_1_1cpp11.xhtml#a9429515817425d10f4b662eaa069cc5c">arm_compute::support::cpp11::snprintf</a></div><div class="ttdeci">int snprintf(char *s, std::size_t n, const char *fmt, Ts &amp;&amp;... args)</div><div class="ttdoc">Loads the data from the given location, converts them to character string equivalents and writes the ...</div><div class="ttdef"><b>Definition:</b> <a href="_toolchain_support_8h_source.xhtml#l00239">ToolchainSupport.h:239</a></div></div>
</div><!-- fragment -->
<p>Print the given message then throw an std::runtime_error. </p>
<p>Accepts a message format and a variable list of arguments matching the format description.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">func</td><td>Function in which the error occurred. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">file</td><td>File in which the error occurred. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">line</td><td>Line in which the error occurred. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">msg</td><td>Error description message format. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">...</td><td>List of arguments matching the format description. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_error_8h_source.xhtml#l00331">331</a> of file <a class="el" href="_error_8h_source.xhtml">Error.h</a>.</p>

</div>
</div>
<a id="a51e206ee52bcfb358919ee478d9fdc47"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a51e206ee52bcfb358919ee478d9fdc47">&#9670;&nbsp;</a></span>ARM_COMPUTE_THROW_ON_ERROR</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ARM_COMPUTE_THROW_ON_ERROR</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">error</td><td>)</td>
          <td>&#160;&#160;&#160;error.throw_if_error();</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Checks if an error value is valid if not throws an exception with the error. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">error</td><td>Error value to check. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_error_8h_source.xhtml#l00217">217</a> of file <a class="el" href="_error_8h_source.xhtml">Error.h</a>.</p>

</div>
</div>
<a id="a6dc630a6ae9cc063b3924bcea8dee9d6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6dc630a6ae9cc063b3924bcea8dee9d6">&#9670;&nbsp;</a></span>ARM_COMPUTE_UNUSED</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ARM_COMPUTE_UNUSED</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>...</em></td><td>)</td>
          <td>&#160;&#160;&#160;::<a class="el" href="namespacearm__compute.xhtml#a053a24bb37402fa4b4d8d5963976ba17">arm_compute::ignore_unused</a>(__VA_ARGS__)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>To avoid unused variables warnings. </p>
<p>This is useful if for example a variable is only used in debug builds and generates a warning in release builds.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">...</td><td>Variables which are unused. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_error_8h_source.xhtml#l00152">152</a> of file <a class="el" href="_error_8h_source.xhtml">Error.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_graph_utils_8cpp_source.xhtml#l00165">DummyAccessor::access_tensor()</a>, <a class="el" href="reference_2_activation_layer_8cpp_source.xhtml#l00038">arm_compute::test::validation::reference::activation_layer()</a>, <a class="el" href="_c_l_2_i_c_l_kernel_8h_source.xhtml#l00409">ICLKernel::add_array_argument()</a>, <a class="el" href="cpu_2kernels_2add_2neon_2qasymm8_8cpp_source.xhtml#l00035">arm_compute::cpu::add_qasymm8_neon()</a>, <a class="el" href="cpu_2kernels_2add_2neon_2qasymm8__signed_8cpp_source.xhtml#l00035">arm_compute::cpu::add_qasymm8_signed_neon()</a>, <a class="el" href="add_2neon_2qsymm16_8cpp_source.xhtml#l00035">arm_compute::cpu::add_qsymm16_neon()</a>, <a class="el" href="_i_c_l_kernel_8cpp_source.xhtml#l00088">ICLKernel::add_tensor_argument()</a>, <a class="el" href="_allocator_8cpp_source.xhtml#l00033">Allocator::allocate()</a>, <a class="el" href="_g_c_buffer_allocator_8cpp_source.xhtml#l00034">GCBufferAllocator::allocate()</a>, <a class="el" href="_c_l_buffer_allocator_8cpp_source.xhtml#l00041">CLBufferAllocator::allocate()</a>, <a class="el" href="_n_e_box3x3_kernel_8cpp_source.xhtml#l00039">calculate_kernel()</a>, <a class="el" href="src_2core_2_utils_8cpp_source.xhtml#l00357">arm_compute::calculate_same_pad()</a>, <a class="el" href="_shape_calculator_8h_source.xhtml#l00925">arm_compute::misc::shape_calculator::compute_mm_shape()</a>, <a class="el" href="_access_window_auto_padding_8cpp_source.xhtml#l00036">AccessWindowAutoPadding::compute_valid_region()</a>, <a class="el" href="_access_window_static_8cpp_source.xhtml#l00037">AccessWindowStatic::compute_valid_region()</a>, <a class="el" href="_c_l_g_e_m_m_default_config_reshaped_valhall_8cpp_source.xhtml#l00043">CLGEMMDefaultConfigReshapedValhall::configure()</a>, <a class="el" href="_c_l_g_e_m_m_default_config_reshaped_r_h_s_only_bifrost_8cpp_source.xhtml#l00048">CLGEMMDefaultConfigReshapedRHSOnlyBifrost::configure()</a>, <a class="el" href="_c_l_g_e_m_m_default_config_reshaped_r_h_s_only_valhall_8cpp_source.xhtml#l00048">CLGEMMDefaultConfigReshapedRHSOnlyValhall::configure()</a>, <a class="el" href="_c_l_g_e_m_m_default_config_native_bifrost_8cpp_source.xhtml#l00043">CLGEMMDefaultConfigNativeBifrost::configure()</a>, <a class="el" href="_c_l_g_e_m_m_default_config_native_valhall_8cpp_source.xhtml#l00043">CLGEMMDefaultConfigNativeValhall::configure()</a>, <a class="el" href="_c_l_g_e_m_m_default_config_native_midgard_8cpp_source.xhtml#l00043">CLGEMMDefaultConfigNativeMidgard::configure()</a>, <a class="el" href="_c_l_g_e_m_m_default_config_reshaped_bifrost_8cpp_source.xhtml#l00048">CLGEMMDefaultConfigReshapedBifrost::configure()</a>, <a class="el" href="_g_c_pixel_wise_multiplication_8cpp_source.xhtml#l00032">GCPixelWiseMultiplication::configure()</a>, <a class="el" href="_cpu_concatenate_height_kernel_8cpp_source.xhtml#l00071">CpuConcatenateHeightKernel::configure()</a>, <a class="el" href="_g_c_arithmetic_addition_8cpp_source.xhtml#l00032">GCArithmeticAddition::configure()</a>, <a class="el" href="_cpu_sub_8cpp_source.xhtml#l00032">CpuSub::configure()</a>, <a class="el" href="_g_c_arithmetic_addition_kernel_8cpp_source.xhtml#l00094">GCArithmeticAdditionKernel::configure()</a>, <a class="el" href="_cpu_add_8cpp_source.xhtml#l00032">CpuAdd::configure()</a>, <a class="el" href="_n_e_elementwise_operations_8cpp_source.xhtml#l00050">NEElementwiseMax::configure()</a>, <a class="el" href="_g_c_depthwise_convolution_layer_8cpp_source.xhtml#l00037">GCDepthwiseConvolutionLayer3x3::configure()</a>, <a class="el" href="_g_c_softmax_layer_8cpp_source.xhtml#l00037">GCSoftmaxLayer::configure()</a>, <a class="el" href="_n_e_canny_edge_kernel_8cpp_source.xhtml#l00875">NEGradientKernel::configure()</a>, <a class="el" href="_c_l_non_linear_filter_kernel_8cpp_source.xhtml#l00062">CLNonLinearFilterKernel::configure()</a>, <a class="el" href="_c_p_p_box_with_non_maxima_suppression_limit_kernel_8cpp_source.xhtml#l00349">CPPBoxWithNonMaximaSuppressionLimitKernel::configure()</a>, <a class="el" href="_n_e_depthwise_convolution_assembly_dispatch_8cpp_source.xhtml#l00347">NEDepthwiseConvolutionAssemblyDispatch::configure()</a>, <a class="el" href="_c_l_remap_kernel_8cpp_source.xhtml#l00054">CLRemapKernel::configure()</a>, <a class="el" href="_n_e_pixel_wise_multiplication_8cpp_source.xhtml#l00035">NEPixelWiseMultiplication::configure()</a>, <a class="el" href="_n_e_pixel_wise_multiplication_kernel_8cpp_source.xhtml#l01482">NEPixelWiseMultiplicationKernel::configure()</a>, <a class="el" href="_n_e_f_f_t_convolution_layer_8cpp_source.xhtml#l00104">NEFFTConvolutionLayer::configure()</a>, <a class="el" href="_n_e_im2_col_kernel_8cpp_source.xhtml#l00363">NEIm2ColKernel::configure()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_matrix_multiply_core_8cpp_source.xhtml#l00077">NEGEMMLowpMatrixMultiplyCore::configure()</a>, <a class="el" href="_c_l_harris_corners_8cpp_source.xhtml#l00074">CLHarrisCorners::configure()</a>, <a class="el" href="_n_e_convolution_layer_8cpp_source.xhtml#l00048">NEConvolutionLayer::configure()</a>, <a class="el" href="_c_l_f_f_t_convolution_layer_8cpp_source.xhtml#l00111">CLFFTConvolutionLayer::configure()</a>, <a class="el" href="_n_e_elementwise_operations_8cpp_source.xhtml#l00091">NEElementwiseMin::configure()</a>, <a class="el" href="_g_c_convolution_layer_8cpp_source.xhtml#l00089">GCConvolutionLayer::configure()</a>, <a class="el" href="_n_e_pixel_wise_multiplication_8cpp_source.xhtml#l00050">NEComplexPixelWiseMultiplication::configure()</a>, <a class="el" href="_n_e_elementwise_operations_8cpp_source.xhtml#l00132">NEElementwiseSquaredDiff::configure()</a>, <a class="el" href="_n_e_g_e_m_m_convolution_layer_8cpp_source.xhtml#l00258">NEGEMMConvolutionLayer::configure()</a>, <a class="el" href="_n_e_elementwise_operations_8cpp_source.xhtml#l00173">NEElementwiseDivision::configure()</a>, <a class="el" href="_c_l_g_e_m_m_convolution_layer_8cpp_source.xhtml#l00212">CLGEMMConvolutionLayer::configure()</a>, <a class="el" href="_n_e_elementwise_operations_8cpp_source.xhtml#l00214">NEElementwisePower::configure()</a>, <a class="el" href="_n_e_o_n_2_convolution_layer_8cpp_source.xhtml#l00052">arm_compute::test::validation::detail::configure_conv_function&lt; NEGEMMConv2d, Tensor &gt;()</a>, <a class="el" href="_flatten_layer_node_8cpp_source.xhtml#l00051">FlattenLayerNode::configure_output()</a>, <a class="el" href="_normalize_planar_y_u_v_layer_node_8cpp_source.xhtml#l00052">NormalizePlanarYUVLayerNode::configure_output()</a>, <a class="el" href="_output_node_8cpp_source.xhtml#l00045">OutputNode::configure_output()</a>, <a class="el" href="_p_relu_layer_node_8cpp_source.xhtml#l00051">PReluLayerNode::configure_output()</a>, <a class="el" href="_const_node_8cpp_source.xhtml#l00051">ConstNode::configure_output()</a>, <a class="el" href="_input_node_8cpp_source.xhtml#l00051">InputNode::configure_output()</a>, <a class="el" href="src_2graph_2nodes_2_reshape_layer_8cpp_source.xhtml#l00052">ReshapeLayerNode::configure_output()</a>, <a class="el" href="_dequantization_layer_node_8cpp_source.xhtml#l00053">DequantizationLayerNode::configure_output()</a>, <a class="el" href="_channel_shuffle_layer_node_8cpp_source.xhtml#l00057">ChannelShuffleLayerNode::configure_output()</a>, <a class="el" href="_detection_post_process_layer_node_8cpp_source.xhtml#l00063">DetectionPostProcessLayerNode::configure_output()</a>, <a class="el" href="_normalization_layer_node_8cpp_source.xhtml#l00058">NormalizationLayerNode::configure_output()</a>, <a class="el" href="_softmax_layer_node_8cpp_source.xhtml#l00058">SoftmaxLayerNode::configure_output()</a>, <a class="el" href="_bounding_box_transform_layer_node_8cpp_source.xhtml#l00059">BoundingBoxTransformLayerNode::configure_output()</a>, <a class="el" href="_dummy_node_8cpp_source.xhtml#l00054">DummyNode::configure_output()</a>, <a class="el" href="_permute_layer_node_8cpp_source.xhtml#l00059">PermuteLayerNode::configure_output()</a>, <a class="el" href="_quantization_layer_node_8cpp_source.xhtml#l00059">QuantizationLayerNode::configure_output()</a>, <a class="el" href="_resize_layer_node_8cpp_source.xhtml#l00063">ResizeLayerNode::configure_output()</a>, <a class="el" href="_activation_layer_node_8cpp_source.xhtml#l00057">ActivationLayerNode::configure_output()</a>, <a class="el" href="_depth_to_space_layer_node_8cpp_source.xhtml#l00073">DepthToSpaceLayerNode::configure_output()</a>, <a class="el" href="_pad_layer_node_8cpp_source.xhtml#l00064">PadLayerNode::configure_output()</a>, <a class="el" href="_reduction_layer_node_8cpp_source.xhtml#l00069">ReductionLayerNode::configure_output()</a>, <a class="el" href="_r_o_i_align_layer_node_8cpp_source.xhtml#l00060">ROIAlignLayerNode::configure_output()</a>, <a class="el" href="_detection_output_layer_node_8cpp_source.xhtml#l00071">DetectionOutputLayerNode::configure_output()</a>, <a class="el" href="_pooling_layer_node_8cpp_source.xhtml#l00080">PoolingLayerNode::configure_output()</a>, <a class="el" href="_prior_box_layer_node_8cpp_source.xhtml#l00074">PriorBoxLayerNode::configure_output()</a>, <a class="el" href="_reorg_layer_node_8cpp_source.xhtml#l00077">ReorgLayerNode::configure_output()</a>, <a class="el" href="_stack_layer_node_8cpp_source.xhtml#l00077">StackLayerNode::configure_output()</a>, <a class="el" href="_batch_normalization_layer_node_8cpp_source.xhtml#l00068">BatchNormalizationLayerNode::configure_output()</a>, <a class="el" href="_deconvolution_layer_node_8cpp_source.xhtml#l00082">DeconvolutionLayerNode::configure_output()</a>, <a class="el" href="_arg_min_max_layer_node_8cpp_source.xhtml#l00069">ArgMinMaxLayerNode::configure_output()</a>, <a class="el" href="_print_layer_node_8cpp_source.xhtml#l00069">PrintLayerNode::configure_output()</a>, <a class="el" href="_slice_layer_node_8cpp_source.xhtml#l00075">SliceLayerNode::configure_output()</a>, <a class="el" href="_l2_normalize_layer_node_8cpp_source.xhtml#l00062">L2NormalizeLayerNode::configure_output()</a>, <a class="el" href="_split_layer_node_8cpp_source.xhtml#l00104">SplitLayerNode::configure_output()</a>, <a class="el" href="_concatenate_layer_node_8cpp_source.xhtml#l00098">ConcatenateLayerNode::configure_output()</a>, <a class="el" href="_eltwise_layer_node_8cpp_source.xhtml#l00083">EltwiseLayerNode::configure_output()</a>, <a class="el" href="_strided_slice_layer_node_8cpp_source.xhtml#l00092">StridedSliceLayerNode::configure_output()</a>, <a class="el" href="src_2graph_2nodes_2_fully_connected_layer_8cpp_source.xhtml#l00122">FullyConnectedLayerNode::configure_output()</a>, <a class="el" href="_depthwise_convolution_layer_node_8cpp_source.xhtml#l00110">DepthwiseConvolutionLayerNode::configure_output()</a>, <a class="el" href="_convolution_layer_node_8cpp_source.xhtml#l00121">ConvolutionLayerNode::configure_output()</a>, <a class="el" href="_eltwise_layer_node_8cpp_source.xhtml#l00147">UnaryEltwiseLayerNode::configure_output()</a>, <a class="el" href="_fused_depthwise_convolution_batch_normalization_node_8cpp_source.xhtml#l00117">FusedDepthwiseConvolutionBatchNormalizationNode::configure_output()</a>, <a class="el" href="_fused_convolution_batch_normalization_node_8cpp_source.xhtml#l00126">FusedConvolutionBatchNormalizationNode::configure_output()</a>, <a class="el" href="_convolution3d_8h_source.xhtml#l00049">arm_compute::test::convolution_3d::detail::convolution3d()</a>, <a class="el" href="_n_e_direct_convolution_detail_8h_source.xhtml#l00353">arm_compute::detail::convolve_3x3()</a>, <a class="el" href="_helpers_8inl_source.xhtml#l00175">arm_compute::coords2index()</a>, <a class="el" href="_c_l_utils_8cpp_source.xhtml#l00029">arm_compute::create_image2d_from_buffer()</a>, <a class="el" href="_c_l_compile_context_8cpp_source.xhtml#l00152">CLCompileContext::create_kernel()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01140">arm_compute::graph::backends::detail::create_normalization_layer()</a>, <a class="el" href="runtime_2_g_l_e_s___c_o_m_p_u_t_e_2_g_c_helpers_8cpp_source.xhtml#l00031">arm_compute::create_opengl_display_and_context()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01375">arm_compute::graph::backends::detail::create_print_layer()</a>, <a class="el" href="_g_c_device_backend_8cpp_source.xhtml#l00118">GCDeviceBackend::create_subtensor()</a>, <a class="el" href="graph__validate__utils_8h_source.xhtml#l00402">VerifyAccessor&lt; D &gt;::create_tensors()</a>, <a class="el" href="_log_msg_decorators_8h_source.xhtml#l00120">ThreadIdDecorator::decorate()</a>, <a class="el" href="_validate_example_8h_source.xhtml#l00051">ValidateExample::do_setup()</a>, <a class="el" href="utils_2_utils_8h_source.xhtml#l00088">Example::do_setup()</a>, <a class="el" href="_n_e_activation_function_detail_8h_source.xhtml#l00044">dummy&lt; T, S &gt;::dummy()</a>, <a class="el" href="neon_2elementwise__quantized__list_8h_source.xhtml#l00266">arm_compute::cpu::elementwise_comp_op_quantized_broadcast_loop()</a>, <a class="el" href="neon_2elementwise__quantized__list_8h_source.xhtml#l00230">arm_compute::cpu::elementwise_comp_op_quantized_loop()</a>, <a class="el" href="neon_2elementwise__quantized__list_8h_source.xhtml#l00141">arm_compute::cpu::elementwise_comp_op_quantized_scalar()</a>, <a class="el" href="neon_2elementwise__quantized__list_8h_source.xhtml#l00283">arm_compute::cpu::elementwise_comp_op_quantized_signed_broadcast_loop()</a>, <a class="el" href="neon_2elementwise__quantized__list_8h_source.xhtml#l00248">arm_compute::cpu::elementwise_comp_op_quantized_signed_loop()</a>, <a class="el" href="_i_g_c_kernel_8cpp_source.xhtml#l00041">arm_compute::enqueue()</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00623">arm_compute::error_on_format_not_in()</a>, <a class="el" href="_c_l_memory_region_8cpp_source.xhtml#l00056">ICLMemoryRegion::extract_subregion()</a>, <a class="el" href="_g_c_memory_region_8cpp_source.xhtml#l00091">GCBufferMemoryRegion::extract_subregion()</a>, <a class="el" href="_image_loader_8h_source.xhtml#l00257">IImageLoader::fill_planar_tensor()</a>, <a class="el" href="utils_2_utils_8h_source.xhtml#l00406">NPYLoader::fill_tensor()</a>, <a class="el" href="_c_l_compile_context_8cpp_source.xhtml#l00271">CLCompileContext::fp16_supported()</a>, <a class="el" href="tests_2validation_2reference_2_fully_connected_layer_8cpp_source.xhtml#l00115">arm_compute::test::validation::reference::fully_connected_layer()</a>, <a class="el" href="_n_e_convolution_layer_8cpp_source.xhtml#l00132">NEConvolutionLayer::get_convolution_method()</a>, <a class="el" href="_c_l_convolution_layer_8cpp_source.xhtml#l00145">CLConvolutionLayer::get_convolution_method()</a>, <a class="el" href="_c_p_u_utils_8cpp_source.xhtml#l00359">arm_compute::utils::cpu::get_cpu_configuration()</a>, <a class="el" href="_c_l_deconvolution_layer_8cpp_source.xhtml#l00103">CLDeconvolutionLayer::get_deconvolution_method()</a>, <a class="el" href="_graph_utils_8h_source.xhtml#l00577">arm_compute::graph_utils::get_detection_output_accessor()</a>, <a class="el" href="_graph_utils_8h_source.xhtml#l00543">arm_compute::graph_utils::get_output_accessor()</a>, <a class="el" href="_c_p_u_utils_8cpp_source.xhtml#l00414">arm_compute::utils::cpu::get_threads_hint()</a>, <a class="el" href="_scheduler_timer_8cpp_source.xhtml#l00039">SchedulerClock&lt; output_timestamps &gt;::id()</a>, <a class="el" href="_cpu_floor_kernel_8cpp_source.xhtml#l00130">CpuFloorKernel::infer_window()</a>, <a class="el" href="src_2runtime_2_tensor_allocator_8cpp_source.xhtml#l00107">TensorAllocator::init()</a>, <a class="el" href="_i_g_c_kernel_8cpp_source.xhtml#l00069">IGCKernel::kernel()</a>, <a class="el" href="_n_e_direct_convolution_detail_8h_source.xhtml#l00046">arm_compute::detail::load_matrix_row()</a>, <a class="el" href="_logger_8cpp_source.xhtml#l00045">Logger::Logger()</a>, <a class="el" href="_n_e_activation_function_detail_8h_source.xhtml#l00160">logistic&lt; T, S &gt;::logistic()</a>, <a class="el" href="_utility_8h_source.xhtml#l00084">arm_compute::utility::make_array()</a>, <a class="el" href="_g_c_buffer_allocator_8cpp_source.xhtml#l00054">GCBufferAllocator::make_region()</a>, <a class="el" href="_c_l_buffer_allocator_8cpp_source.xhtml#l00062">CLBufferAllocator::make_region()</a>, <a class="el" href="_c_l_sub_tensor_handle_8cpp_source.xhtml#l00053">CLSubTensorHandle::manage()</a>, <a class="el" href="_n_e_sub_tensor_handle_8cpp_source.xhtml#l00050">NESubTensorHandle::manage()</a>, <a class="el" href="_n_e_tensor_handle_8cpp_source.xhtml#l00059">NETensorHandle::map()</a>, <a class="el" href="_n_e_sub_tensor_handle_8cpp_source.xhtml#l00056">NESubTensorHandle::map()</a>, <a class="el" href="_g_c_memory_region_8cpp_source.xhtml#l00069">GCBufferMemoryRegion::map()</a>, <a class="el" href="utils_2_utils_8h_source.xhtml#l00216">arm_compute::utils::map()</a>, <a class="el" href="_c_l_compile_context_8cpp_source.xhtml#l00356">CLCompileContext::max_local_workgroup_size()</a>, <a class="el" href="reference_2_max_unpooling_layer_8cpp_source.xhtml#l00041">arm_compute::test::validation::reference::max_unpooling_layer_internal()</a>, <a class="el" href="_g_c_scheduler_8cpp_source.xhtml#l00086">GCScheduler::memory_barrier()</a>, <a class="el" href="_cpu_softmax_kernel_8cpp_source.xhtml#l00260">CpuLogits1DMaxKernel::name()</a>, <a class="el" href="_n_e_arg_min_max_layer_8cpp_source.xhtml#l00038">NEArgMinMaxLayer::NEArgMinMaxLayer()</a>, <a class="el" href="_n_e_gather_kernel_8cpp_source.xhtml#l00085">NEGatherKernel::NEGatherKernel()</a>, <a class="el" href="reference_2_non_linear_filter_8cpp_source.xhtml#l00036">arm_compute::test::validation::reference::non_linear_filter()</a>, <a class="el" href="_i_scheduler_8cpp_source.xhtml#l00053">IScheduler::num_threads_hint()</a>, <a class="el" href="_n_e_activation_function_detail_8h_source.xhtml#l00053">dummy&lt; T, S &gt;::operator()()</a>, <a class="el" href="utils_2_utils_8cpp_source.xhtml#l00202">arm_compute::utils::parse_ppm_header()</a>, <a class="el" href="reference_2_pixel_wise_multiplication_8cpp_source.xhtml#l00217">arm_compute::test::validation::reference::pixel_wise_multiplication()</a>, <a class="el" href="reference_2_pooling_layer_8cpp_source.xhtml#l00184">arm_compute::test::validation::reference::pooling_layer()</a>, <a class="el" href="quantized_8h_source.xhtml#l00182">arm_compute::cpu::poolingMxN_q8_neon_nhwc()</a>, <a class="el" href="core_2_c_l_2_c_l_helpers_8cpp_source.xhtml#l00361">arm_compute::preferred_dummy_work_items_support()</a>, <a class="el" href="_c_l_operator_8cpp_source.xhtml#l00048">ICLOperator::prepare()</a>, <a class="el" href="_i_n_e_operator_8cpp_source.xhtml#l00050">INEOperator::prepare()</a>, <a class="el" href="_dot_graph_printer_8cpp_source.xhtml#l00124">DotGraphPrinter::print()</a>, <a class="el" href="_validate_example_8h_source.xhtml#l00069">ValidateExample::print_parameters()</a>, <a class="el" href="activation_2_n_e_o_n_2qsymm16_8cpp_source.xhtml#l00041">arm_compute::cpu::qsymm16_neon_activation()</a>, <a class="el" href="reference_2_reduction_operation_8cpp_source.xhtml#l00272">arm_compute::test::validation::reference::reduction_operation()</a>, <a class="el" href="_n_e_device_backend_8cpp_source.xhtml#l00068">NEDeviceBackend::release_backend_context()</a>, <a class="el" href="_g_c_device_backend_8cpp_source.xhtml#l00066">GCDeviceBackend::release_backend_context()</a>, <a class="el" href="_c_l_device_backend_8cpp_source.xhtml#l00095">CLDeviceBackend::release_backend_context()</a>, <a class="el" href="_n_e_activation_function_detail_8h_source.xhtml#l00200">relu&lt; T, S &gt;::relu()</a>, <a class="el" href="reference_2_r_o_i_align_layer_8cpp_source.xhtml#l00140">arm_compute::test::validation::reference::roi_align_layer()</a>, <a class="el" href="_i_c_p_p_kernel_8h_source.xhtml#l00055">ICPPKernel::run()</a>, <a class="el" href="_n_e_box3x3_kernel_8cpp_source.xhtml#l00156">NEBox3x3Kernel::run()</a>, <a class="el" href="_n_e_dilate_kernel_8cpp_source.xhtml#l00069">NEDilateKernel::run()</a>, <a class="el" href="_n_e_erode_kernel_8cpp_source.xhtml#l00069">NEErodeKernel::run()</a>, <a class="el" href="_n_e_integral_image_kernel_8cpp_source.xhtml#l00076">NEIntegralImageKernel::run()</a>, <a class="el" href="_n_e_gaussian3x3_kernel_8cpp_source.xhtml#l00069">NEGaussian3x3Kernel::run()</a>, <a class="el" href="_n_e_gaussian_pyramid_kernel_8cpp_source.xhtml#l00110">NEGaussianPyramidHorKernel::run()</a>, <a class="el" href="_n_e_median3x3_kernel_8cpp_source.xhtml#l00079">NEMedian3x3Kernel::run()</a>, <a class="el" href="_n_e_gaussian5x5_kernel_8cpp_source.xhtml#l00078">NEGaussian5x5HorKernel::run()</a>, <a class="el" href="_c_p_p_sort_euclidean_distance_kernel_8cpp_source.xhtml#l00071">CPPSortEuclideanDistanceKernel::run()</a>, <a class="el" href="_n_e_table_lookup_kernel_8cpp_source.xhtml#l00136">NETableLookupKernel::run()</a>, <a class="el" href="_n_e_warp_kernel_8cpp_source.xhtml#l00060">INEWarpKernel::run()</a>, <a class="el" href="_c_p_p_upsample_kernel_8cpp_source.xhtml#l00063">CPPUpsampleKernel::run()</a>, <a class="el" href="_n_e_bitwise_not_kernel_8cpp_source.xhtml#l00086">NEBitwiseNotKernel::run()</a>, <a class="el" href="_n_e_bitwise_and_kernel_8cpp_source.xhtml#l00102">NEBitwiseAndKernel::run()</a>, <a class="el" href="_n_e_bitwise_xor_kernel_8cpp_source.xhtml#l00094">NEBitwiseXorKernel::run()</a>, <a class="el" href="_n_e_h_o_g_descriptor_kernel_8cpp_source.xhtml#l00680">NEHOGOrientationBinningKernel::run()</a>, <a class="el" href="_n_e_remap_kernel_8cpp_source.xhtml#l00229">NERemapKernel::run()</a>, <a class="el" href="_n_e_bitwise_or_kernel_8cpp_source.xhtml#l00098">NEBitwiseOrKernel::run()</a>, <a class="el" href="_n_e_derivative_kernel_8cpp_source.xhtml#l00223">NEDerivativeKernel::run()</a>, <a class="el" href="_n_e_absolute_difference_kernel_8cpp_source.xhtml#l00200">NEAbsoluteDifferenceKernel::run()</a>, <a class="el" href="_n_e_accumulate_kernel_8cpp_source.xhtml#l00263">NEAccumulateKernel::run()</a>, <a class="el" href="_n_e_fast_corners_kernel_8cpp_source.xhtml#l00391">NEFastCornersKernel::run()</a>, <a class="el" href="_n_e_fill_array_kernel_8cpp_source.xhtml#l00062">NEFillArrayKernel::run()</a>, <a class="el" href="_n_e_magnitude_phase_kernel_8cpp_source.xhtml#l00477">NEMagnitudePhaseKernel&lt; mag_type, phase_type &gt;::run()</a>, <a class="el" href="_n_e_non_maxima_suppression3x3_kernel_8cpp_source.xhtml#l00500">NENonMaximaSuppression3x3Kernel::run()</a>, <a class="el" href="_n_e_sobel5x5_kernel_8cpp_source.xhtml#l00095">NESobel5x5HorKernel::run()</a>, <a class="el" href="_n_e_sobel7x7_kernel_8cpp_source.xhtml#l00198">NESobel7x7HorKernel::run()</a>, <a class="el" href="_n_e_canny_edge_kernel_8cpp_source.xhtml#l00940">NEGradientKernel::run()</a>, <a class="el" href="_n_e_dequantization_layer_kernel_8cpp_source.xhtml#l00393">NEDequantizationLayerKernel::run()</a>, <a class="el" href="_n_e_mean_std_dev_kernel_8cpp_source.xhtml#l00125">NEMeanStdDevKernel::run()</a>, <a class="el" href="_n_e_non_linear_filter_kernel_8cpp_source.xhtml#l00941">NENonLinearFilterKernel::run()</a>, <a class="el" href="_c_p_p_detection_window_non_maxima_suppression_kernel_8cpp_source.xhtml#l00080">CPPDetectionWindowNonMaximaSuppressionKernel::run()</a>, <a class="el" href="_n_e_h_o_g_detector_kernel_8cpp_source.xhtml#l00097">NEHOGDetectorKernel::run()</a>, <a class="el" href="_n_e_min_max_location_kernel_8cpp_source.xhtml#l00086">NEMinMaxKernel::run()</a>, <a class="el" href="_c_p_p_box_with_non_maxima_suppression_limit_kernel_8cpp_source.xhtml#l00398">CPPBoxWithNonMaximaSuppressionLimitKernel::run()</a>, <a class="el" href="_n_e_convert_quantized_signedness_kernel_8cpp_source.xhtml#l00097">NEConvertQuantizedSignednessKernel::run()</a>, <a class="el" href="_n_e_tile_kernel_8cpp_source.xhtml#l00092">NETileKernel::run()</a>, <a class="el" href="_c_p_p_corner_candidates_kernel_8cpp_source.xhtml#l00090">CPPCornerCandidatesKernel::run()</a>, <a class="el" href="_n_e_channel_shuffle_layer_kernel_8cpp_source.xhtml#l00171">NEChannelShuffleLayerKernel::run()</a>, <a class="el" href="_n_e_depth_to_space_layer_kernel_8cpp_source.xhtml#l00101">NEDepthToSpaceLayerKernel::run()</a>, <a class="el" href="_n_e_reverse_kernel_8cpp_source.xhtml#l00145">NEReverseKernel::run()</a>, <a class="el" href="_n_e_r_o_i_pooling_layer_kernel_8cpp_source.xhtml#l00089">NEROIPoolingLayerKernel::run()</a>, <a class="el" href="_n_e_space_to_depth_layer_kernel_8cpp_source.xhtml#l00102">NESpaceToDepthLayerKernel::run()</a>, <a class="el" href="_n_e_channel_extract_kernel_8cpp_source.xhtml#l00182">NEChannelExtractKernel::run()</a>, <a class="el" href="_n_e_cumulative_distribution_kernel_8cpp_source.xhtml#l00072">NECumulativeDistributionKernel::run()</a>, <a class="el" href="_n_e_threshold_kernel_8cpp_source.xhtml#l00208">NEThresholdKernel::run()</a>, <a class="el" href="_n_e_prior_box_layer_kernel_8cpp_source.xhtml#l00228">NEPriorBoxLayerKernel::run()</a>, <a class="el" href="_n_e_transpose_kernel_8cpp_source.xhtml#l00514">NETransposeKernel::run()</a>, <a class="el" href="_n_e_f_f_t_scale_kernel_8cpp_source.xhtml#l00120">NEFFTScaleKernel::run()</a>, <a class="el" href="_n_e_generate_proposals_layer_kernel_8cpp_source.xhtml#l00169">NEComputeAllAnchorsKernel::run()</a>, <a class="el" href="_n_e_instance_normalization_layer_kernel_8cpp_source.xhtml#l00269">NEInstanceNormalizationLayerKernel::run()</a>, <a class="el" href="_n_e_q_l_s_t_m_layer_normalization_kernel_8cpp_source.xhtml#l00166">NEQLSTMLayerNormalizationKernel::run()</a>, <a class="el" href="_c_p_p_top_k_v_kernel_8cpp_source.xhtml#l00129">CPPTopKVKernel::run()</a>, <a class="el" href="_n_e_reorg_layer_kernel_8cpp_source.xhtml#l00103">NEReorgLayerKernel::run()</a>, <a class="el" href="_n_e_scharr3x3_kernel_8cpp_source.xhtml#l00140">NEScharr3x3Kernel::run()</a>, <a class="el" href="_n_e_sobel3x3_kernel_8cpp_source.xhtml#l00093">NESobel3x3Kernel::run()</a>, <a class="el" href="_c_p_p_permute_kernel_8cpp_source.xhtml#l00149">CPPPermuteKernel::run()</a>, <a class="el" href="_n_e_quantization_layer_kernel_8cpp_source.xhtml#l00257">NEQuantizationLayerKernel::run()</a>, <a class="el" href="_n_e_f_f_t_digit_reverse_kernel_8cpp_source.xhtml#l00254">NEFFTDigitReverseKernel::run()</a>, <a class="el" href="_n_e_channel_combine_kernel_8cpp_source.xhtml#l00274">NEChannelCombineKernel::run()</a>, <a class="el" href="_n_e_max_unpooling_layer_kernel_8cpp_source.xhtml#l00133">NEMaxUnpoolingLayerKernel::run()</a>, <a class="el" href="_n_e_normalization_layer_kernel_8cpp_source.xhtml#l00288">NENormalizationLayerKernel::run()</a>, <a class="el" href="_n_e_range_kernel_8cpp_source.xhtml#l00183">NERangeKernel::run()</a>, <a class="el" href="_n_e_convert_fully_connected_weights_kernel_8cpp_source.xhtml#l00104">NEConvertFullyConnectedWeightsKernel::run()</a>, <a class="el" href="_n_e_mean_std_dev_normalization_kernel_8cpp_source.xhtml#l00196">NEMeanStdDevNormalizationKernel::run()</a>, <a class="el" href="_c_l_comparison_kernel_8cpp_source.xhtml#l00176">CLComparisonKernel::run()</a>, <a class="el" href="_n_e_fill_border_kernel_8cpp_source.xhtml#l00122">NEFillBorderKernel::run()</a>, <a class="el" href="_n_e_gather_kernel_8cpp_source.xhtml#l00198">NEGatherKernel::run()</a>, <a class="el" href="_n_e_min_max_layer_kernel_8cpp_source.xhtml#l00119">NEMinMaxLayerKernel::run()</a>, <a class="el" href="_n_e_g_e_m_m_matrix_addition_kernel_8cpp_source.xhtml#l00153">NEGEMMMatrixAdditionKernel::run()</a>, <a class="el" href="_n_e_select_kernel_8cpp_source.xhtml#l00253">NESelectKernel::run()</a>, <a class="el" href="_n_e_bounding_box_transform_kernel_8cpp_source.xhtml#l00230">NEBoundingBoxTransformKernel::run()</a>, <a class="el" href="_n_e_f_f_t_radix_stage_kernel_8cpp_source.xhtml#l01042">NEFFTRadixStageKernel::run()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_matrix_multiply_kernel_8cpp_source.xhtml#l00947">NEGEMMLowpMatrixMultiplyKernel::run()</a>, <a class="el" href="_n_e_pad_layer_kernel_8cpp_source.xhtml#l00253">NEPadLayerKernel::run()</a>, <a class="el" href="_n_e_reduction_operation_kernel_8cpp_source.xhtml#l01694">NEReductionOperationKernel::run()</a>, <a class="el" href="_n_e_color_convert_kernel_8cpp_source.xhtml#l00582">NEColorConvertKernel::run()</a>, <a class="el" href="_n_e_stack_layer_kernel_8cpp_source.xhtml#l00116">NEStackLayerKernel::run()</a>, <a class="el" href="_c_p_p_non_maximum_suppression_kernel_8cpp_source.xhtml#l00092">CPPNonMaximumSuppressionKernel::run()</a>, <a class="el" href="_n_e_scale_kernel_8cpp_source.xhtml#l00583">NEScaleKernel::run()</a>, <a class="el" href="_n_e_convolution_kernel_8cpp_source.xhtml#l00626">NEConvolutionKernel&lt; matrix_size &gt;::run()</a>, <a class="el" href="_n_e_direct_convolution_layer_kernel_8cpp_source.xhtml#l01293">NEDirectConvolutionLayerKernel::run()</a>, <a class="el" href="_n_e_direct_convolution_layer_output_stage_kernel_8cpp_source.xhtml#l00505">NEDirectConvolutionLayerOutputStageKernel::run()</a>, <a class="el" href="_n_e_depth_convert_layer_kernel_8cpp_source.xhtml#l00139">NEDepthConvertLayerKernel::run()</a>, <a class="el" href="_n_e_g_e_m_m_interleave4x4_kernel_8cpp_source.xhtml#l00175">NEGEMMInterleave4x4Kernel::run()</a>, <a class="el" href="_n_e_r_o_i_align_layer_kernel_8cpp_source.xhtml#l00301">NEROIAlignLayerKernel::run()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_quantize_down_int32_scale_kernel_8cpp_source.xhtml#l00315">NEGEMMLowpQuantizeDownInt32ScaleKernel::run()</a>, <a class="el" href="_n_e_batch_to_space_layer_kernel_8cpp_source.xhtml#l00138">NEBatchToSpaceLayerKernel::run()</a>, <a class="el" href="_n_e_crop_kernel_8cpp_source.xhtml#l00364">NECropKernel::run()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_offset_contribution_kernel_8cpp_source.xhtml#l00404">NEGEMMLowpOffsetContributionKernel::run()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_quantize_down_int32_to_int16_scale_by_fixed_point_kernel_8cpp_source.xhtml#l00230">NEGEMMLowpQuantizeDownInt32ToInt16ScaleByFixedPointKernel::run()</a>, <a class="el" href="_n_e_col2_im_kernel_8cpp_source.xhtml#l00147">NECol2ImKernel::run()</a>, <a class="el" href="_n_e_batch_normalization_layer_kernel_8cpp_source.xhtml#l00379">NEBatchNormalizationLayerKernel::run()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_quantize_down_int32_to_uint8_scale_by_fixed_point_kernel_8cpp_source.xhtml#l00241">NEGEMMLowpQuantizeDownInt32ToUint8ScaleByFixedPointKernel::run()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_quantize_down_int32_to_int8_scale_by_fixed_point_kernel_8cpp_source.xhtml#l00239">NEGEMMLowpQuantizeDownInt32ToInt8ScaleByFixedPointKernel::run()</a>, <a class="el" href="_n_e_harris_corners_kernel_8cpp_source.xhtml#l00711">NEHarrisScoreKernel&lt; block_size &gt;::run()</a>, <a class="el" href="_n_e_fuse_batch_normalization_kernel_8cpp_source.xhtml#l00507">NEFuseBatchNormalizationKernel::run()</a>, <a class="el" href="_n_e_depthwise_convolution_layer_native_kernel_8cpp_source.xhtml#l00865">NEDepthwiseConvolutionLayerNativeKernel::run()</a>, <a class="el" href="_n_e_space_to_batch_layer_kernel_8cpp_source.xhtml#l00143">NESpaceToBatchLayerKernel::run()</a>, <a class="el" href="_n_e_gaussian_pyramid_kernel_8cpp_source.xhtml#l00210">NEGaussianPyramidVertKernel::run()</a>, <a class="el" href="_n_e_gaussian5x5_kernel_8cpp_source.xhtml#l00150">NEGaussian5x5VertKernel::run()</a>, <a class="el" href="_n_e_weights_reshape_kernel_8cpp_source.xhtml#l00123">NEWeightsReshapeKernel::run()</a>, <a class="el" href="_n_e_g_e_m_m_transpose1x_w_kernel_8cpp_source.xhtml#l00099">NEGEMMTranspose1xWKernel::run()</a>, <a class="el" href="_n_e_accumulate_kernel_8cpp_source.xhtml#l00302">NEAccumulateWeightedKernel::run()</a>, <a class="el" href="_n_e_im2_col_kernel_8cpp_source.xhtml#l00454">NEIm2ColKernel::run()</a>, <a class="el" href="_c_l_weights_reshape_kernel_8cpp_source.xhtml#l00123">CLWeightsReshapeKernel::run()</a>, <a class="el" href="_n_e_sobel5x5_kernel_8cpp_source.xhtml#l00267">NESobel5x5VertKernel::run()</a>, <a class="el" href="_n_e_sobel7x7_kernel_8cpp_source.xhtml#l00357">NESobel7x7VertKernel::run()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_offset_contribution_output_stage_kernel_8cpp_source.xhtml#l00918">NEGEMMLowpOffsetContributionOutputStageKernel::run()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_reduction_kernel_8cpp_source.xhtml#l00165">NEGEMMLowpMatrixAReductionKernel::run()</a>, <a class="el" href="_n_e_h_o_g_descriptor_kernel_8cpp_source.xhtml#l00774">NEHOGBlockNormalizationKernel::run()</a>, <a class="el" href="_n_e_canny_edge_kernel_8cpp_source.xhtml#l01023">NEEdgeNonMaxSuppressionKernel::run()</a>, <a class="el" href="_n_e_min_max_location_kernel_8cpp_source.xhtml#l00387">NEMinMaxLocationKernel::run()</a>, <a class="el" href="_n_e_convolution_kernel_8cpp_source.xhtml#l00701">NESeparableConvolutionHorKernel&lt; matrix_size &gt;::run()</a>, <a class="el" href="_n_e_accumulate_kernel_8cpp_source.xhtml#l00345">NEAccumulateSquaredKernel::run()</a>, <a class="el" href="_n_e_canny_edge_kernel_8cpp_source.xhtml#l01105">NEEdgeTraceKernel::run()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_reduction_kernel_8cpp_source.xhtml#l00365">NEGEMMLowpMatrixBReductionKernel::run()</a>, <a class="el" href="_n_e_winograd_convolution_layer_kernel_8cpp_source.xhtml#l00371">NEWinogradLayerTransformInputKernel&lt; T, OutputTileRows, OutputTileCols, KernelRows, KernelCols &gt;::run()</a>, <a class="el" href="_n_e_convolution_kernel_8cpp_source.xhtml#l01139">NESeparableConvolutionVertKernel&lt; matrix_size &gt;::run()</a>, <a class="el" href="_c_l_2_i_c_l_kernel_8h_source.xhtml#l00233">ICLKernel::run()</a>, <a class="el" href="_n_e_convolution_kernel_8cpp_source.xhtml#l01473">NEConvolutionRectangleKernel::run()</a>, <a class="el" href="_n_e_winograd_convolution_layer_kernel_8cpp_source.xhtml#l00505">NEWinogradLayerTransformOutputKernel&lt; T, OutputTileRows, OutputTileCols, KernelRows, KernelCols &gt;::run()</a>, <a class="el" href="_n_e_winograd_convolution_layer_kernel_8cpp_source.xhtml#l00238">NEWinogradLayerTransformWeightsKernel&lt; T, OutputTileRows, OutputTileCols, KernelRows, KernelCols &gt;::run()</a>, <a class="el" href="_i_c_p_p_kernel_8h_source.xhtml#l00068">ICPPKernel::run_nd()</a>, <a class="el" href="_cpu_fill_kernel_8cpp_source.xhtml#l00051">CpuFillKernel::run_op()</a>, <a class="el" href="_cl_elementwise_kernel_8cpp_source.xhtml#l00287">ClElementwiseKernel::run_op()</a>, <a class="el" href="_cpu_reshape_kernel_8cpp_source.xhtml#l00102">CpuReshapeKernel::run_op()</a>, <a class="el" href="_cpu_softmax_kernel_8cpp_source.xhtml#l00247">CpuLogits1DMaxKernel::run_op()</a>, <a class="el" href="_cpu_copy_kernel_8cpp_source.xhtml#l00116">CpuCopyKernel::run_op()</a>, <a class="el" href="_cpu_concatenate_width_kernel_8cpp_source.xhtml#l00093">CpuConcatenateWidthKernel::run_op()</a>, <a class="el" href="_cpu_concatenate_height_kernel_8cpp_source.xhtml#l00093">CpuConcatenateHeightKernel::run_op()</a>, <a class="el" href="_cpu_elementwise_kernel_8cpp_source.xhtml#l00197">CpuElementwiseKernel::run_op()</a>, <a class="el" href="_cpu_permute_kernel_8cpp_source.xhtml#l00272">CpuPermuteKernel::run_op()</a>, <a class="el" href="_cpu_activation_kernel_8cpp_source.xhtml#l00233">CpuActivationKernel::run_op()</a>, <a class="el" href="_n_e_logical_kernel_8cpp_source.xhtml#l00324">NELogicalKernel::run_op()</a>, <a class="el" href="_cpu_concatenate_batch_kernel_8cpp_source.xhtml#l00201">CpuConcatenateBatchKernel::run_op()</a>, <a class="el" href="_cpu_floor_kernel_8cpp_source.xhtml#l00146">CpuFloorKernel::run_op()</a>, <a class="el" href="_cpu_pooling_kernel_8cpp_source.xhtml#l00481">CpuPoolingKernel::run_op()</a>, <a class="el" href="_cpu_concatenate_depth_kernel_8cpp_source.xhtml#l00198">CpuConcatenateDepthKernel::run_op()</a>, <a class="el" href="_cpu_add_kernel_8cpp_source.xhtml#l00323">CpuAddKernel::run_op()</a>, <a class="el" href="_cpu_elementwise_unary_kernel_8cpp_source.xhtml#l00162">CpuElementwiseUnaryKernel::run_op()</a>, <a class="el" href="_cpu_pooling_assembly_wrapper_kernel_8cpp_source.xhtml#l00139">CpuPoolingAssemblyWrapperKernel::run_op()</a>, <a class="el" href="_i_c_p_p_kernel_8h_source.xhtml#l00086">ICPPKernel::run_op()</a>, <a class="el" href="_cpu_sub_kernel_8cpp_source.xhtml#l00230">CpuSubKernel::run_op()</a>, <a class="el" href="_n_e_strided_slice_kernel_8cpp_source.xhtml#l00170">NEStridedSliceKernel::run_op()</a>, <a class="el" href="_cpu_softmax_kernel_8cpp_source.xhtml#l00352">CpuLogits1DSoftmaxKernel&lt; IS_LOG &gt;::run_op()</a>, <a class="el" href="_n_e_pixel_wise_multiplication_kernel_8cpp_source.xhtml#l01644">NEPixelWiseMultiplicationKernel::run_op()</a>, <a class="el" href="_c_l_pixel_wise_multiplication_kernel_8cpp_source.xhtml#l00272">CLPixelWiseMultiplicationKernel::run_op()</a>, <a class="el" href="_n_e_pixel_wise_multiplication_kernel_8cpp_source.xhtml#l01720">NEComplexPixelWiseMultiplicationKernel::run_op()</a>, <a class="el" href="_c_l_pixel_wise_multiplication_kernel_8cpp_source.xhtml#l00428">CLComplexPixelWiseMultiplicationKernel::run_op()</a>, <a class="el" href="_c_l_2_i_c_l_kernel_8h_source.xhtml#l00245">ICLKernel::run_op()</a>, <a class="el" href="_i_scheduler_8cpp_source.xhtml#l00170">IScheduler::run_tagged_workloads()</a>, <a class="el" href="_single_thread_scheduler_8cpp_source.xhtml#l00056">SingleThreadScheduler::schedule_op()</a>, <a class="el" href="_c_l_g_e_m_m_default_type_valhall_8cpp_source.xhtml#l00042">CLGEMMDefaultTypeValhall::select_kernel()</a>, <a class="el" href="_c_l_g_e_m_m_default_type_midgard_8cpp_source.xhtml#l00043">CLGEMMDefaultTypeMidgard::select_kernel()</a>, <a class="el" href="_c_l_g_e_m_m_default_type_bifrost_8cpp_source.xhtml#l00042">CLGEMMDefaultTypeBifrost::select_kernel()</a>, <a class="el" href="_c_l_g_e_m_m_auto_heuristics_8cpp_source.xhtml#l00046">arm_compute::cl_gemm::auto_heuristics::select_mlgo_gemm_kernel()</a>, <a class="el" href="_single_thread_scheduler_8cpp_source.xhtml#l00032">SingleThreadScheduler::set_num_threads()</a>, <a class="el" href="_i_scheduler_8cpp_source.xhtml#l00047">IScheduler::set_num_threads_with_affinity()</a>, <a class="el" href="core_2_c_l_2_c_l_helpers_8cpp_source.xhtml#l00430">arm_compute::set_wbsm()</a>, <a class="el" href="_n_e_direct_convolution_detail_8h_source.xhtml#l00249">arm_compute::detail::single_convolve_3x3_dilation()</a>, <a class="el" href="_n_e_activation_function_detail_8h_source.xhtml#l00124">square&lt; T, S &gt;::square()</a>, <a class="el" href="cpu_2kernels_2sub_2neon_2qasymm8_8cpp_source.xhtml#l00035">arm_compute::cpu::sub_qasymm8_neon()</a>, <a class="el" href="cpu_2kernels_2sub_2neon_2qasymm8__signed_8cpp_source.xhtml#l00035">arm_compute::cpu::sub_qasymm8_signed_neon()</a>, <a class="el" href="sub_2neon_2qsymm16_8cpp_source.xhtml#l00035">arm_compute::cpu::sub_qsymm16_neon()</a>, <a class="el" href="tests_2_utils_8h_source.xhtml#l00807">arm_compute::test::sync_tensor_if_necessary()</a>, <a class="el" href="_midgard_tuner_8cpp_source.xhtml#l00072">MidgardTuner::tune_kernel_dynamic()</a>, <a class="el" href="_bifrost_tuner_8cpp_source.xhtml#l00294">BifrostTuner::tune_kernel_dynamic()</a>, <a class="el" href="_c_l_tuner_8cpp_source.xhtml#l00071">CLTuner::tune_kernel_static()</a>, <a class="el" href="_c_l_tensor_allocator_8cpp_source.xhtml#l00233">CLTensorAllocator::unmap()</a>, <a class="el" href="_c_l_memory_region_8cpp_source.xhtml#l00165">CLFineSVMMemoryRegion::unmap()</a>, <a class="el" href="utils_2_utils_8h_source.xhtml#l00227">arm_compute::utils::unmap()</a>, <a class="el" href="_access_window_auto_padding_8cpp_source.xhtml#l00073">AccessWindowAutoPadding::update_padding_if_needed()</a>, <a class="el" href="_access_window_static_8cpp_source.xhtml#l00160">AccessWindowStatic::update_padding_if_needed()</a>, <a class="el" href="_access_window_auto_padding_8cpp_source.xhtml#l00066">AccessWindowAutoPadding::update_window_if_needed()</a>, <a class="el" href="_cl_elementwise_unary_kernel_8cpp_source.xhtml#l00128">ClElementWiseUnaryKernel::validate()</a>, <a class="el" href="_cpu_activation_kernel_8cpp_source.xhtml#l00224">CpuActivationKernel::validate()</a>, <a class="el" href="_cl_fill_kernel_8cpp_source.xhtml#l00090">ClFillKernel::validate()</a>, <a class="el" href="_n_e_f_f_t_scale_kernel_8cpp_source.xhtml#l00111">NEFFTScaleKernel::validate()</a>, <a class="el" href="_n_e_q_l_s_t_m_layer_normalization_kernel_8cpp_source.xhtml#l00140">NEQLSTMLayerNormalizationKernel::validate()</a>, <a class="el" href="_c_l_deconvolution_layer_upsample_kernel_8cpp_source.xhtml#l00041">CLDeconvolutionLayerUpsampleKernel::validate()</a>, <a class="el" href="_c_l_f_f_t_scale_kernel_8cpp_source.xhtml#l00123">CLFFTScaleKernel::validate()</a>, <a class="el" href="_n_e_pad_layer_kernel_8cpp_source.xhtml#l00246">NEPadLayerKernel::validate()</a>, <a class="el" href="_g_c_g_e_m_m_matrix_multiply_kernel_8cpp_source.xhtml#l00289">GCGEMMMatrixMultiplyKernel::validate()</a>, <a class="el" href="_c_l_mean_std_dev_8cpp_source.xhtml#l00054">CLMeanStdDev::validate()</a>, <a class="el" href="_c_l_mean_std_dev_kernel_8cpp_source.xhtml#l00051">CLMeanStdDevKernel::validate()</a>, <a class="el" href="_cpu_softmax_8cpp_source.xhtml#l00102">CpuSoftmaxGeneric&lt; IS_LOG &gt;::validate()</a>, <a class="el" href="_cl_crop_kernel_8cpp_source.xhtml#l00091">ClCropKernel::validate()</a>, <a class="el" href="_n_e_crop_kernel_8cpp_source.xhtml#l00285">NECropKernel::validate()</a>, <a class="el" href="_n_e_pad_layer_8cpp_source.xhtml#l00206">NEPadLayer::validate()</a>, <a class="el" href="_g_c_im2_col_kernel_8cpp_source.xhtml#l00213">GCIm2ColKernel::validate()</a>, <a class="el" href="_n_e_g_e_m_m_assembly_dispatch_8cpp_source.xhtml#l00750">NEGEMMAssemblyDispatch::validate()</a>, <a class="el" href="_c_l_softmax_layer_8cpp_source.xhtml#l00123">CLSoftmaxLayerGeneric&lt; IS_LOG &gt;::validate()</a>, <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8cpp_source.xhtml#l00458">CLGEMMMatrixMultiplyKernel::validate()</a>, <a class="el" href="_n_e_g_e_m_m_8cpp_source.xhtml#l00190">NEGEMM::validate()</a>, <a class="el" href="_n_e_f_f_t_convolution_layer_8cpp_source.xhtml#l00261">NEFFTConvolutionLayer::validate()</a>, <a class="el" href="_cpu_elementwise_kernel_8cpp_source.xhtml#l00231">CpuArithmeticKernel::validate()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_reduction_kernel_8cpp_source.xhtml#l00090">NEGEMMLowpMatrixAReductionKernel::validate()</a>, <a class="el" href="_cl_elementwise_kernel_8cpp_source.xhtml#l00344">ClLogicalBinaryKernel::validate()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_reduction_kernel_8cpp_source.xhtml#l00119">CLGEMMLowpMatrixAReductionKernel::validate()</a>, <a class="el" href="_cl_elementwise_kernel_8cpp_source.xhtml#l00407">ClSaturatedArithmeticKernel::validate()</a>, <a class="el" href="_n_e_fully_connected_layer_8cpp_source.xhtml#l00327">NEFullyConnectedLayer::validate()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_reduction_kernel_8cpp_source.xhtml#l00191">CLGEMMLowpMatrixBReductionKernel::validate()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_reduction_kernel_8cpp_source.xhtml#l00211">NEGEMMLowpMatrixBReductionKernel::validate()</a>, <a class="el" href="_c_p_p_box_with_non_maxima_suppression_limit_8cpp_source.xhtml#l00210">arm_compute::validate()</a>, <a class="el" href="_cpu_elementwise_kernel_8cpp_source.xhtml#l00324">CpuComparisonKernel::validate()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00075">arm_compute::graph::backends::detail::validate_node()</a>, <a class="el" href="_assets_library_8cpp_source.xhtml#l00522">arm_compute::test::detail::validate_npy_header()</a>, <a class="el" href="_dot_graph_printer_8cpp_source.xhtml#l00080">DotGraphVisitor::visit()</a>, and <a class="el" href="reference_2_winograd_8cpp_source.xhtml#l00440">arm_compute::test::validation::reference::winograd_output_transform()</a>.</p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_214608ef36d61442cb2b0c1c4e9a7def.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="dir_1fb090f0c6070330bfaccc4236d3ca0d.xhtml">core</a></li><li class="navelem"><a class="el" href="_error_8h.xhtml">Error.h</a></li>
    <li class="footer">Generated on Thu Feb 25 2021 17:17:41 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
