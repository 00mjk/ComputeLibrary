<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: Iterator Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">21.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarm__compute_1_1_iterator.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">Iterator Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><a class="el" href="classarm__compute_1_1_iterator.xhtml" title="Iterator updated by execute_window_loop for each window element. ">Iterator</a> updated by <a class="el" href="namespacearm__compute.xhtml#a5002bf7ec46d52971f9526e94172cfee">execute_window_loop</a> for each window element.  
 <a href="classarm__compute_1_1_iterator.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="arm__compute_2core_2_helpers_8h_source.xhtml">Helpers.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a45381773d6cba2ad9e9d2d04515fa40b"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_iterator.xhtml#a45381773d6cba2ad9e9d2d04515fa40b">Iterator</a> ()</td></tr>
<tr class="memdesc:a45381773d6cba2ad9e9d2d04515fa40b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor to create an empty iterator.  <a href="#a45381773d6cba2ad9e9d2d04515fa40b">More...</a><br /></td></tr>
<tr class="separator:a45381773d6cba2ad9e9d2d04515fa40b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a92d6469b972ef1e52b55b1ad7da70b02"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_iterator.xhtml#a92d6469b972ef1e52b55b1ad7da70b02">Iterator</a> (const <a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *tensor, const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;window)</td></tr>
<tr class="memdesc:a92d6469b972ef1e52b55b1ad7da70b02"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a container iterator for the metadata and allocation contained in the <a class="el" href="classarm__compute_1_1_i_tensor.xhtml" title="Interface for Neon tensor. ">ITensor</a>.  <a href="#a92d6469b972ef1e52b55b1ad7da70b02">More...</a><br /></td></tr>
<tr class="separator:a92d6469b972ef1e52b55b1ad7da70b02"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e507a84d19ad08bb0f7fc1558ec429a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_iterator.xhtml#a6e507a84d19ad08bb0f7fc1558ec429a">increment</a> (size_t dimension)</td></tr>
<tr class="memdesc:a6e507a84d19ad08bb0f7fc1558ec429a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Increment the iterator along the specified dimension of the step value associated to the dimension.  <a href="#a6e507a84d19ad08bb0f7fc1558ec429a">More...</a><br /></td></tr>
<tr class="separator:a6e507a84d19ad08bb0f7fc1558ec429a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a62861ea73b65dff5524e55fd97144da2"><td class="memItemLeft" align="right" valign="top">constexpr size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_iterator.xhtml#a62861ea73b65dff5524e55fd97144da2">offset</a> () const</td></tr>
<tr class="memdesc:a62861ea73b65dff5524e55fd97144da2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the offset in bytes from the first element to the current position of the iterator.  <a href="#a62861ea73b65dff5524e55fd97144da2">More...</a><br /></td></tr>
<tr class="separator:a62861ea73b65dff5524e55fd97144da2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab260e292b1df3944bc1d55a9b2301e41"><td class="memItemLeft" align="right" valign="top">constexpr uint8_t *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_iterator.xhtml#ab260e292b1df3944bc1d55a9b2301e41">ptr</a> () const</td></tr>
<tr class="memdesc:ab260e292b1df3944bc1d55a9b2301e41"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return a pointer to the current pixel.  <a href="#ab260e292b1df3944bc1d55a9b2301e41">More...</a><br /></td></tr>
<tr class="separator:ab260e292b1df3944bc1d55a9b2301e41"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a599f5025b7e6b8bfead740a88e56d5bc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_iterator.xhtml#a599f5025b7e6b8bfead740a88e56d5bc">reset</a> (size_t dimension)</td></tr>
<tr class="memdesc:a599f5025b7e6b8bfead740a88e56d5bc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Move the iterator back to the beginning of the specified dimension.  <a href="#a599f5025b7e6b8bfead740a88e56d5bc">More...</a><br /></td></tr>
<tr class="separator:a599f5025b7e6b8bfead740a88e56d5bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p><a class="el" href="classarm__compute_1_1_iterator.xhtml" title="Iterator updated by execute_window_loop for each window element. ">Iterator</a> updated by <a class="el" href="namespacearm__compute.xhtml#a5002bf7ec46d52971f9526e94172cfee">execute_window_loop</a> for each window element. </p>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_helpers_8h_source.xhtml#l00046">46</a> of file <a class="el" href="arm__compute_2core_2_helpers_8h_source.xhtml">Helpers.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a45381773d6cba2ad9e9d2d04515fa40b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a45381773d6cba2ad9e9d2d04515fa40b">&#9670;&nbsp;</a></span>Iterator() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default constructor to create an empty iterator. </p>

<p class="definition">Definition at line <a class="el" href="_helpers_8inl_source.xhtml#l00090">90</a> of file <a class="el" href="_helpers_8inl_source.xhtml">Helpers.inl</a>.</p>
<div class="fragment"><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    : _ptr(<span class="keyword">nullptr</span>), _dims()</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;{</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a92d6469b972ef1e52b55b1ad7da70b02"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a92d6469b972ef1e52b55b1ad7da70b02">&#9670;&nbsp;</a></span>Iterator() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *&#160;</td>
          <td class="paramname"><em>tensor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;&#160;</td>
          <td class="paramname"><em>window</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Create a container iterator for the metadata and allocation contained in the <a class="el" href="classarm__compute_1_1_i_tensor.xhtml" title="Interface for Neon tensor. ">ITensor</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">tensor</td><td>The tensor to associate to the iterator. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">window</td><td>The window which will be used to iterate over the tensor. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_helpers_8inl_source.xhtml#l00095">95</a> of file <a class="el" href="_helpers_8inl_source.xhtml">Helpers.inl</a>.</p>

<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00263">ARM_COMPUTE_ERROR_ON_WINDOW_DIMENSIONS_GTE</a>, <a class="el" href="classarm__compute_1_1_i_tensor.xhtml#ab988210662dbd3bf32fd563c7dd1bdbf">ITensor::buffer()</a>, <a class="el" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">ITensor::info()</a>, <a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">arm_compute::test::validation::info</a>, and <a class="el" href="_dimensions_8h_source.xhtml#l00046">Dimensions&lt; int &gt;::num_max_dimensions</a>.</p>
<div class="fragment"><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    : <a class="code" href="classarm__compute_1_1_iterator.xhtml#a45381773d6cba2ad9e9d2d04515fa40b">Iterator</a>()</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;{</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(tensor == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(tensor-&gt;info() == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <span class="keyword">const</span> ITensorInfo *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>    = tensor-&gt;info();</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="keyword">const</span> Strides     &amp;strides = info-&gt;strides_in_bytes();</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    _ptr = tensor-&gt;buffer() + info-&gt;offset_first_element_in_bytes();</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <span class="comment">//Initialize the stride for each dimension and calculate the position of the first element of the iteration:</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> n = 0; n &lt; info-&gt;num_dimensions(); ++n)</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    {</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        _dims[n]._stride = win[n].step() * strides[n];</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        std::get&lt;0&gt;(_dims)._dim_start += static_cast&lt;size_t&gt;(strides[n]) * win[n].start();</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    }</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <span class="comment">//Copy the starting point to all the dimensions:</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> n = 1; n &lt; <a class="code" href="classarm__compute_1_1_dimensions.xhtml#a1b67d5b720119d50faa286c774579ecc">Coordinates::num_max_dimensions</a>; ++n)</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    {</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        _dims[n]._dim_start = std::get&lt;0&gt;(_dims)._dim_start;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    }</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#af5084ef537306d09b1ef82aed5d1f63f">ARM_COMPUTE_ERROR_ON_WINDOW_DIMENSIONS_GTE</a>(win, info-&gt;num_dimensions());</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;}</div><div class="ttc" id="_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="arm__compute_2core_2_validate_8h_xhtml_af5084ef537306d09b1ef82aed5d1f63f"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#af5084ef537306d09b1ef82aed5d1f63f">ARM_COMPUTE_ERROR_ON_WINDOW_DIMENSIONS_GTE</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_WINDOW_DIMENSIONS_GTE(w, md)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00263">Validate.h:263</a></div></div>
<div class="ttc" id="classarm__compute_1_1_iterator_xhtml_a45381773d6cba2ad9e9d2d04515fa40b"><div class="ttname"><a href="classarm__compute_1_1_iterator.xhtml#a45381773d6cba2ad9e9d2d04515fa40b">arm_compute::Iterator::Iterator</a></div><div class="ttdeci">constexpr Iterator()</div><div class="ttdoc">Default constructor to create an empty iterator. </div><div class="ttdef"><b>Definition:</b> <a href="_helpers_8inl_source.xhtml#l00090">Helpers.inl:90</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_ac57b92957968088a392021cac1d2076b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">arm_compute::test::validation::info</a></div><div class="ttdeci">ScaleKernelInfo info(interpolation_policy, default_border_mode, PixelValue(), sampling_policy, false)</div></div>
<div class="ttc" id="classarm__compute_1_1_dimensions_xhtml_a1b67d5b720119d50faa286c774579ecc"><div class="ttname"><a href="classarm__compute_1_1_dimensions.xhtml#a1b67d5b720119d50faa286c774579ecc">arm_compute::Dimensions&lt; int &gt;::num_max_dimensions</a></div><div class="ttdeci">static constexpr size_t num_max_dimensions</div><div class="ttdoc">Number of dimensions the tensor has. </div><div class="ttdef"><b>Definition:</b> <a href="_dimensions_8h_source.xhtml#l00046">Dimensions.h:46</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a6e507a84d19ad08bb0f7fc1558ec429a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6e507a84d19ad08bb0f7fc1558ec429a">&#9670;&nbsp;</a></span>increment()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void increment </td>
          <td>(</td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>dimension</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Increment the iterator along the specified dimension of the step value associated to the dimension. </p>
<dl class="section warning"><dt>Warning</dt><dd>It is the caller's responsibility to call increment(dimension+1) when reaching the end of a dimension, the iterator will not check for overflow.</dd></dl>
<dl class="section note"><dt>Note</dt><dd>When incrementing a dimension 'n' the coordinates of all the dimensions in the range (0,n-1) are reset. For example if you iterate over a 2D image, everytime you change row (dimension 1), the iterator for the width (dimension 0) is reset to its start.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">dimension</td><td>Dimension to increment </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_helpers_8inl_source.xhtml#l00122">122</a> of file <a class="el" href="_helpers_8inl_source.xhtml">Helpers.inl</a>.</p>

<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>, and <a class="el" href="_dimensions_8h_source.xhtml#l00046">Dimensions&lt; int &gt;::num_max_dimensions</a>.</p>

<p class="reference">Referenced by <a class="el" href="_n_e_gaussian_pyramid_kernel_8cpp_source.xhtml#l00210">NEGaussianPyramidVertKernel::run()</a>, and <a class="el" href="_n_e_convolution_kernel_8cpp_source.xhtml#l01139">NESeparableConvolutionVertKernel&lt; matrix_size &gt;::run()</a>.</p>
<div class="fragment"><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;{</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(dimension &gt;= <a class="code" href="classarm__compute_1_1_dimensions.xhtml#a1b67d5b720119d50faa286c774579ecc">Coordinates::num_max_dimensions</a>);</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    _dims[dimension]._dim_start += _dims[dimension]._stride;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> n = 0; n &lt; dimension; ++n)</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    {</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        _dims[n]._dim_start = _dims[dimension]._dim_start;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    }</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;}</div><div class="ttc" id="_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="classarm__compute_1_1_dimensions_xhtml_a1b67d5b720119d50faa286c774579ecc"><div class="ttname"><a href="classarm__compute_1_1_dimensions.xhtml#a1b67d5b720119d50faa286c774579ecc">arm_compute::Dimensions&lt; int &gt;::num_max_dimensions</a></div><div class="ttdeci">static constexpr size_t num_max_dimensions</div><div class="ttdoc">Number of dimensions the tensor has. </div><div class="ttdef"><b>Definition:</b> <a href="_dimensions_8h_source.xhtml#l00046">Dimensions.h:46</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a62861ea73b65dff5524e55fd97144da2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a62861ea73b65dff5524e55fd97144da2">&#9670;&nbsp;</a></span>offset()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr size_t offset </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Return the offset in bytes from the first element to the current position of the iterator. </p>
<dl class="section return"><dt>Returns</dt><dd>The current position of the iterator in bytes relative to the first element. </dd></dl>

<p class="definition">Definition at line <a class="el" href="_helpers_8inl_source.xhtml#l00134">134</a> of file <a class="el" href="_helpers_8inl_source.xhtml">Helpers.inl</a>.</p>

<p class="reference">Referenced by <a class="el" href="_n_e_box3x3_kernel_8cpp_source.xhtml#l00039">calculate_kernel()</a>, <a class="el" href="_n_e_non_linear_filter_kernel_8cpp_source.xhtml#l00355">NENonLinearFilterKernel::configure()</a>, <a class="el" href="_n_e_integral_image_kernel_8cpp_source.xhtml#l00076">NEIntegralImageKernel::run()</a>, <a class="el" href="_n_e_gaussian3x3_kernel_8cpp_source.xhtml#l00069">NEGaussian3x3Kernel::run()</a>, <a class="el" href="_n_e_median3x3_kernel_8cpp_source.xhtml#l00079">NEMedian3x3Kernel::run()</a>, <a class="el" href="_n_e_fast_corners_kernel_8cpp_source.xhtml#l00391">NEFastCornersKernel::run()</a>, <a class="el" href="_n_e_sobel3x3_kernel_8cpp_source.xhtml#l00093">NESobel3x3Kernel::run()</a>, <a class="el" href="_n_e_scharr3x3_kernel_8cpp_source.xhtml#l00140">NEScharr3x3Kernel::run()</a>, <a class="el" href="_n_e_gaussian_pyramid_kernel_8cpp_source.xhtml#l00210">NEGaussianPyramidVertKernel::run()</a>, <a class="el" href="_n_e_gaussian5x5_kernel_8cpp_source.xhtml#l00150">NEGaussian5x5VertKernel::run()</a>, <a class="el" href="_n_e_sobel5x5_kernel_8cpp_source.xhtml#l00267">NESobel5x5VertKernel::run()</a>, <a class="el" href="_n_e_convolution_kernel_8cpp_source.xhtml#l01139">NESeparableConvolutionVertKernel&lt; matrix_size &gt;::run()</a>, <a class="el" href="_cpu_fill_kernel_8cpp_source.xhtml#l00051">CpuFillKernel::run_op()</a>, <a class="el" href="_cpu_concatenate_height_kernel_8cpp_source.xhtml#l00093">CpuConcatenateHeightKernel::run_op()</a>, <a class="el" href="_cpu_concatenate_width_kernel_8cpp_source.xhtml#l00093">CpuConcatenateWidthKernel::run_op()</a>, and <a class="el" href="_n_e_fill_border_kernel_8cpp_source.xhtml#l00161">NEFillBorderKernel::run_op()</a>.</p>
<div class="fragment"><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;{</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <span class="keywordflow">return</span> _dims.at(0)._dim_start;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ab260e292b1df3944bc1d55a9b2301e41"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab260e292b1df3944bc1d55a9b2301e41">&#9670;&nbsp;</a></span>ptr()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr uint8_t * ptr </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Return a pointer to the current pixel. </p>
<dl class="section warning"><dt>Warning</dt><dd>Only works if the iterator was created with an <a class="el" href="classarm__compute_1_1_i_tensor.xhtml" title="Interface for Neon tensor. ">ITensor</a>.</dd></dl>
<dl class="section return"><dt>Returns</dt><dd>equivalent to buffer() + <a class="el" href="classarm__compute_1_1_iterator.xhtml#a62861ea73b65dff5524e55fd97144da2" title="Return the offset in bytes from the first element to the current position of the iterator. ">offset()</a> </dd></dl>

<p class="definition">Definition at line <a class="el" href="_helpers_8inl_source.xhtml#l00139">139</a> of file <a class="el" href="_helpers_8inl_source.xhtml">Helpers.inl</a>.</p>

<p class="reference">Referenced by <a class="el" href="cpu_2kernels_2add_2neon_2qasymm8_8cpp_source.xhtml#l00035">arm_compute::cpu::add_qasymm8_neon()</a>, <a class="el" href="cpu_2kernels_2add_2neon_2qasymm8__signed_8cpp_source.xhtml#l00035">arm_compute::cpu::add_qasymm8_signed_neon()</a>, <a class="el" href="add_2neon_2qsymm16_8cpp_source.xhtml#l00035">arm_compute::cpu::add_qsymm16_neon()</a>, <a class="el" href="cpu_2kernels_2add_2neon_2integer_8cpp_source.xhtml#l00100">arm_compute::cpu::add_s16_u8_s16_neon()</a>, <a class="el" href="cpu_2kernels_2add_2neon_2list_8h_source.xhtml#l00048">arm_compute::cpu::add_same_neon()</a>, <a class="el" href="cpu_2kernels_2add_2neon_2integer_8cpp_source.xhtml#l00035">arm_compute::cpu::add_u8_u8_s16_neon()</a>, <a class="el" href="_n_e_box3x3_kernel_8cpp_source.xhtml#l00039">calculate_kernel()</a>, <a class="el" href="_n_e_color_convert_helper_8inl_source.xhtml#l00975">arm_compute::colorconvert_rgb_to_iyuv()</a>, <a class="el" href="_n_e_color_convert_helper_8inl_source.xhtml#l00932">arm_compute::colorconvert_rgb_to_nv12()</a>, <a class="el" href="_n_e_color_convert_helper_8inl_source.xhtml#l00321">arm_compute::colorconvert_rgb_to_rgbx()</a>, <a class="el" href="_n_e_color_convert_helper_8inl_source.xhtml#l00352">arm_compute::colorconvert_rgb_to_u8()</a>, <a class="el" href="_n_e_color_convert_helper_8inl_source.xhtml#l01019">arm_compute::colorconvert_rgb_to_yuv4()</a>, <a class="el" href="_n_e_color_convert_helper_8inl_source.xhtml#l00380">arm_compute::colorconvert_rgbx_to_rgb()</a>, <a class="el" href="_n_e_color_convert_helper_8inl_source.xhtml#l00755">arm_compute::colorconvert_yuyv_to_iyuv()</a>, <a class="el" href="_n_e_color_convert_helper_8inl_source.xhtml#l00603">arm_compute::colorconvert_yuyv_to_nv12()</a>, <a class="el" href="_n_e_color_convert_helper_8inl_source.xhtml#l00411">arm_compute::colorconvert_yuyv_to_rgb()</a>, <a class="el" href="utils_2_utils_8h_source.xhtml#l00827">arm_compute::utils::compare_tensor()</a>, <a class="el" href="_n_e_warp_kernel_8cpp_source.xhtml#l00070">INEWarpKernel::configure()</a>, <a class="el" href="_n_e_normalization_layer_kernel_8cpp_source.xhtml#l00073">NENormalizationLayerKernel::configure()</a>, <a class="el" href="_n_e_derivative_kernel_8cpp_source.xhtml#l00056">NEDerivativeKernel::configure()</a>, <a class="el" href="_n_e_magnitude_phase_kernel_8cpp_source.xhtml#l00252">NEMagnitudePhaseKernel&lt; mag_type, phase_type &gt;::configure()</a>, <a class="el" href="_n_e_max_unpooling_layer_kernel_8cpp_source.xhtml#l00076">NEMaxUnpoolingLayerKernel::configure()</a>, <a class="el" href="_n_e_non_linear_filter_kernel_8cpp_source.xhtml#l00355">NENonLinearFilterKernel::configure()</a>, <a class="el" href="_n_e_scale_kernel_8cpp_source.xhtml#l00199">NEScaleKernel::configure()</a>, <a class="el" href="_n_e_convolution_kernel_8cpp_source.xhtml#l00326">NEConvolutionKernel&lt; matrix_size &gt;::configure()</a>, <a class="el" href="_i_tensor_8cpp_source.xhtml#l00035">ITensor::copy_from()</a>, <a class="el" href="neon_2elementwise__quantized__list_8h_source.xhtml#l00407">arm_compute::cpu::elementwise_comp_quantized_signed()</a>, <a class="el" href="neon_2elementwise__list_8h_source.xhtml#l00036">arm_compute::cpu::elementwise_op()</a>, <a class="el" href="neon_2elementwise__quantized__list_8h_source.xhtml#l00299">arm_compute::cpu::elementwise_op_quantized()</a>, <a class="el" href="neon_2elementwise__quantized__list_8h_source.xhtml#l00514">arm_compute::cpu::elementwise_op_quantized_signed()</a>, <a class="el" href="utils_2_utils_8h_source.xhtml#l00753">arm_compute::utils::fill_tensor_vector()</a>, <a class="el" href="cpu_2kernels_2activation_2_n_e_o_n_2fp32_8cpp_source.xhtml#l00050">arm_compute::cpu::fp32_neon_activation()</a>, <a class="el" href="utils_2_utils_8h_source.xhtml#l00682">arm_compute::utils::load_trained_data()</a>, <a class="el" href="_n_e_o_n_2kernels_2scale_2impl_2_n_e_o_n_2list_8h_source.xhtml#l00052">arm_compute::cpu::nearest_neon_scale()</a>, <a class="el" href="_n_e_gather_kernel_8cpp_source.xhtml#l00085">NEGatherKernel::NEGatherKernel()</a>, <a class="el" href="cpu_2kernels_2softmax_2impl_2_n_e_o_n_2list_8h_source.xhtml#l00074">arm_compute::cpu::neon_logits_1d_max()</a>, <a class="el" href="cpu_2kernels_2softmax_2impl_2_n_e_o_n_2list_8h_source.xhtml#l00297">arm_compute::cpu::neon_softmax_logits_1d_float()</a>, <a class="el" href="cpu_2kernels_2pooling_2neon_2fp32_8cpp_source.xhtml#l00144">arm_compute::cpu::poolingMxN_fp32_neon_nhwc()</a>, <a class="el" href="quantized_8h_source.xhtml#l00182">arm_compute::cpu::poolingMxN_q8_neon_nhwc()</a>, <a class="el" href="cpu_2kernels_2activation_2_n_e_o_n_2qasymm8_8cpp_source.xhtml#l00040">arm_compute::cpu::qasymm8_neon_activation()</a>, <a class="el" href="cpu_2kernels_2activation_2_n_e_o_n_2qasymm8__signed_8cpp_source.xhtml#l00039">arm_compute::cpu::qasymm8_signed_neon_activation()</a>, <a class="el" href="activation_2_n_e_o_n_2qsymm16_8cpp_source.xhtml#l00041">arm_compute::cpu::qsymm16_neon_activation()</a>, <a class="el" href="_c_l_min_max_layer_kernel_8cpp_source.xhtml#l00126">CLMinMaxLayerKernel::reset()</a>, <a class="el" href="_n_e_min_max_layer_kernel_8cpp_source.xhtml#l00194">NEMinMaxLayerKernel::reset()</a>, <a class="el" href="_n_e_integral_image_kernel_8cpp_source.xhtml#l00076">NEIntegralImageKernel::run()</a>, <a class="el" href="_n_e_dilate_kernel_8cpp_source.xhtml#l00069">NEDilateKernel::run()</a>, <a class="el" href="_n_e_erode_kernel_8cpp_source.xhtml#l00069">NEErodeKernel::run()</a>, <a class="el" href="_n_e_gaussian3x3_kernel_8cpp_source.xhtml#l00069">NEGaussian3x3Kernel::run()</a>, <a class="el" href="_n_e_gaussian_pyramid_kernel_8cpp_source.xhtml#l00110">NEGaussianPyramidHorKernel::run()</a>, <a class="el" href="_n_e_median3x3_kernel_8cpp_source.xhtml#l00079">NEMedian3x3Kernel::run()</a>, <a class="el" href="_n_e_gaussian5x5_kernel_8cpp_source.xhtml#l00078">NEGaussian5x5HorKernel::run()</a>, <a class="el" href="_c_p_p_upsample_kernel_8cpp_source.xhtml#l00063">CPPUpsampleKernel::run()</a>, <a class="el" href="_n_e_h_o_g_descriptor_kernel_8cpp_source.xhtml#l00680">NEHOGOrientationBinningKernel::run()</a>, <a class="el" href="_n_e_fast_corners_kernel_8cpp_source.xhtml#l00391">NEFastCornersKernel::run()</a>, <a class="el" href="_n_e_non_maxima_suppression3x3_kernel_8cpp_source.xhtml#l00500">NENonMaximaSuppression3x3Kernel::run()</a>, <a class="el" href="_n_e_sobel5x5_kernel_8cpp_source.xhtml#l00095">NESobel5x5HorKernel::run()</a>, <a class="el" href="_n_e_sobel7x7_kernel_8cpp_source.xhtml#l00198">NESobel7x7HorKernel::run()</a>, <a class="el" href="_n_e_canny_edge_kernel_8cpp_source.xhtml#l00940">NEGradientKernel::run()</a>, <a class="el" href="_c_p_p_corner_candidates_kernel_8cpp_source.xhtml#l00090">CPPCornerCandidatesKernel::run()</a>, <a class="el" href="_n_e_tile_kernel_8cpp_source.xhtml#l00092">NETileKernel::run()</a>, <a class="el" href="_n_e_convert_quantized_signedness_kernel_8cpp_source.xhtml#l00097">NEConvertQuantizedSignednessKernel::run()</a>, <a class="el" href="_n_e_space_to_depth_layer_kernel_8cpp_source.xhtml#l00102">NESpaceToDepthLayerKernel::run()</a>, <a class="el" href="_n_e_depth_to_space_layer_kernel_8cpp_source.xhtml#l00101">NEDepthToSpaceLayerKernel::run()</a>, <a class="el" href="_n_e_f_f_t_scale_kernel_8cpp_source.xhtml#l00120">NEFFTScaleKernel::run()</a>, <a class="el" href="_n_e_sobel3x3_kernel_8cpp_source.xhtml#l00093">NESobel3x3Kernel::run()</a>, <a class="el" href="_n_e_reorg_layer_kernel_8cpp_source.xhtml#l00103">NEReorgLayerKernel::run()</a>, <a class="el" href="_n_e_scharr3x3_kernel_8cpp_source.xhtml#l00140">NEScharr3x3Kernel::run()</a>, <a class="el" href="_n_e_min_max_layer_kernel_8cpp_source.xhtml#l00119">NEMinMaxLayerKernel::run()</a>, <a class="el" href="_n_e_f_f_t_radix_stage_kernel_8cpp_source.xhtml#l01042">NEFFTRadixStageKernel::run()</a>, <a class="el" href="_n_e_stack_layer_kernel_8cpp_source.xhtml#l00116">NEStackLayerKernel::run()</a>, <a class="el" href="_n_e_depth_convert_layer_kernel_8cpp_source.xhtml#l00139">NEDepthConvertLayerKernel::run()</a>, <a class="el" href="_n_e_batch_to_space_layer_kernel_8cpp_source.xhtml#l00138">NEBatchToSpaceLayerKernel::run()</a>, <a class="el" href="_n_e_harris_corners_kernel_8cpp_source.xhtml#l00711">NEHarrisScoreKernel&lt; block_size &gt;::run()</a>, <a class="el" href="_n_e_space_to_batch_layer_kernel_8cpp_source.xhtml#l00143">NESpaceToBatchLayerKernel::run()</a>, <a class="el" href="_n_e_gaussian_pyramid_kernel_8cpp_source.xhtml#l00210">NEGaussianPyramidVertKernel::run()</a>, <a class="el" href="_n_e_gaussian5x5_kernel_8cpp_source.xhtml#l00150">NEGaussian5x5VertKernel::run()</a>, <a class="el" href="_n_e_weights_reshape_kernel_8cpp_source.xhtml#l00123">NEWeightsReshapeKernel::run()</a>, <a class="el" href="_n_e_g_e_m_m_transpose1x_w_kernel_8cpp_source.xhtml#l00099">NEGEMMTranspose1xWKernel::run()</a>, <a class="el" href="_n_e_accumulate_kernel_8cpp_source.xhtml#l00302">NEAccumulateWeightedKernel::run()</a>, <a class="el" href="_n_e_sobel5x5_kernel_8cpp_source.xhtml#l00267">NESobel5x5VertKernel::run()</a>, <a class="el" href="_n_e_sobel7x7_kernel_8cpp_source.xhtml#l00357">NESobel7x7VertKernel::run()</a>, <a class="el" href="_n_e_h_o_g_descriptor_kernel_8cpp_source.xhtml#l00774">NEHOGBlockNormalizationKernel::run()</a>, <a class="el" href="_n_e_canny_edge_kernel_8cpp_source.xhtml#l01023">NEEdgeNonMaxSuppressionKernel::run()</a>, <a class="el" href="_n_e_convolution_kernel_8cpp_source.xhtml#l00701">NESeparableConvolutionHorKernel&lt; matrix_size &gt;::run()</a>, <a class="el" href="_n_e_accumulate_kernel_8cpp_source.xhtml#l00345">NEAccumulateSquaredKernel::run()</a>, <a class="el" href="_n_e_canny_edge_kernel_8cpp_source.xhtml#l01105">NEEdgeTraceKernel::run()</a>, <a class="el" href="_n_e_convolution_kernel_8cpp_source.xhtml#l01139">NESeparableConvolutionVertKernel&lt; matrix_size &gt;::run()</a>, <a class="el" href="_n_e_convolution_kernel_8cpp_source.xhtml#l01473">NEConvolutionRectangleKernel::run()</a>, <a class="el" href="_cpu_copy_kernel_8cpp_source.xhtml#l00116">CpuCopyKernel::run_op()</a>, <a class="el" href="_cpu_concatenate_height_kernel_8cpp_source.xhtml#l00093">CpuConcatenateHeightKernel::run_op()</a>, <a class="el" href="_cpu_concatenate_width_kernel_8cpp_source.xhtml#l00093">CpuConcatenateWidthKernel::run_op()</a>, <a class="el" href="_cpu_floor_kernel_8cpp_source.xhtml#l00146">CpuFloorKernel::run_op()</a>, <a class="el" href="_n_e_fill_border_kernel_8cpp_source.xhtml#l00161">NEFillBorderKernel::run_op()</a>, <a class="el" href="_n_e_reverse_kernel_8cpp_source.xhtml#l00088">arm_compute::run_reverse()</a>, <a class="el" href="cpu_2kernels_2sub_2neon_2qasymm8_8cpp_source.xhtml#l00035">arm_compute::cpu::sub_qasymm8_neon()</a>, <a class="el" href="cpu_2kernels_2sub_2neon_2qasymm8__signed_8cpp_source.xhtml#l00035">arm_compute::cpu::sub_qasymm8_signed_neon()</a>, <a class="el" href="sub_2neon_2qsymm16_8cpp_source.xhtml#l00035">arm_compute::cpu::sub_qsymm16_neon()</a>, <a class="el" href="cpu_2kernels_2sub_2neon_2list_8h_source.xhtml#l00048">arm_compute::cpu::sub_same_neon()</a>, <a class="el" href="cpu_2kernels_2sub_2neon_2integer_8cpp_source.xhtml#l00117">arm_compute::cpu::sub_u8_u8_s16_neon()</a>, <a class="el" href="tests_2validation_2_n_e_o_n_2_u_n_i_t_2_runtime_context_8cpp_source.xhtml#l00098">arm_compute::test::validation::TEST_CASE()</a>, <a class="el" href="_n_e_threshold_kernel_8cpp_source.xhtml#l00105">NEThresholdKernel::validate()</a>, <a class="el" href="_n_e_generate_proposals_layer_kernel_8cpp_source.xhtml#l00098">NEComputeAllAnchorsKernel::validate()</a>, <a class="el" href="_n_e_quantization_layer_kernel_8cpp_source.xhtml#l00163">NEQuantizationLayerKernel::validate()</a>, <a class="el" href="_n_e_f_f_t_digit_reverse_kernel_8cpp_source.xhtml#l00137">NEFFTDigitReverseKernel::validate()</a>, <a class="el" href="_n_e_convert_fully_connected_weights_kernel_8cpp_source.xhtml#l00068">NEConvertFullyConnectedWeightsKernel::validate()</a>, <a class="el" href="_n_e_bounding_box_transform_kernel_8cpp_source.xhtml#l00113">NEBoundingBoxTransformKernel::validate()</a>, <a class="el" href="_n_e_g_e_m_m_interleave4x4_kernel_8cpp_source.xhtml#l00111">NEGEMMInterleave4x4Kernel::validate()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_reduction_kernel_8cpp_source.xhtml#l00090">NEGEMMLowpMatrixAReductionKernel::validate()</a>, and <a class="el" href="_n_e_g_e_m_m_lowp_reduction_kernel_8cpp_source.xhtml#l00211">NEGEMMLowpMatrixBReductionKernel::validate()</a>.</p>
<div class="fragment"><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;{</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <span class="keywordflow">return</span> _ptr + _dims.at(0)._dim_start;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a599f5025b7e6b8bfead740a88e56d5bc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a599f5025b7e6b8bfead740a88e56d5bc">&#9670;&nbsp;</a></span>reset()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void reset </td>
          <td>(</td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>dimension</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Move the iterator back to the beginning of the specified dimension. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">dimension</td><td>Dimension to reset </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_helpers_8inl_source.xhtml#l00144">144</a> of file <a class="el" href="_helpers_8inl_source.xhtml">Helpers.inl</a>.</p>

<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>, and <a class="el" href="_dimensions_8h_source.xhtml#l00046">Dimensions&lt; int &gt;::num_max_dimensions</a>.</p>
<div class="fragment"><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;{</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(dimension &gt;= <a class="code" href="classarm__compute_1_1_dimensions.xhtml#a1b67d5b720119d50faa286c774579ecc">Coordinates::num_max_dimensions</a> - 1);</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    _dims[dimension]._dim_start = _dims[dimension + 1]._dim_start;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> n = 0; n &lt; dimension; ++n)</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    {</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        _dims[n]._dim_start = _dims[dimension]._dim_start;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    }</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;}</div><div class="ttc" id="_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="classarm__compute_1_1_dimensions_xhtml_a1b67d5b720119d50faa286c774579ecc"><div class="ttname"><a href="classarm__compute_1_1_dimensions.xhtml#a1b67d5b720119d50faa286c774579ecc">arm_compute::Dimensions&lt; int &gt;::num_max_dimensions</a></div><div class="ttdeci">static constexpr size_t num_max_dimensions</div><div class="ttdoc">Number of dimensions the tensor has. </div><div class="ttdef"><b>Definition:</b> <a href="_dimensions_8h_source.xhtml#l00046">Dimensions.h:46</a></div></div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>arm_compute/core/<a class="el" href="arm__compute_2core_2_helpers_8h_source.xhtml">Helpers.h</a></li>
<li>arm_compute/core/<a class="el" href="_helpers_8inl_source.xhtml">Helpers.inl</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_iterator.xhtml">Iterator</a></li>
    <li class="footer">Generated on Thu Feb 25 2021 17:17:48 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
