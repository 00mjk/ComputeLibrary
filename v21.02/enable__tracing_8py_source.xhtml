<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: scripts/enable_tracing.py Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">21.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('enable__tracing_8py_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">enable_tracing.py</div>  </div>
</div><!--header-->
<div class="contents">
<a href="enable__tracing_8py.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno"><a class="line" href="namespaceenable__tracing.xhtml">    1</a></span>&#160;<span class="comment">#</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"># Copyright (c) 2020 Arm Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">#</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"># SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">#</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"># Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"># of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"># deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"># rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"># sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"># furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">#</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"># The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"># copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">#</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"># THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"># IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"># FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"># AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"># LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"># OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"># SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">#</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment">#</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment">#!/usr/bin/env python</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="keyword">import</span> re</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="keyword">import</span> os</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="keyword">import</span> sys</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="keyword">import</span> argparse</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="keyword">import</span> fnmatch</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="keyword">import</span> logging</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">import</span> json</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">import</span> glob</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno"><a class="line" href="namespaceenable__tracing.xhtml#a0b14e488ae28d98d262453f3e9cd6e4d">   36</a></span>&#160;logger = logging.getLogger(<span class="stringliteral">&quot;acl_tracing&quot;</span>)</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="comment"># Returns the files matching the given pattern</span></div><div class="line"><a name="l00039"></a><span class="lineno"><a class="line" href="namespaceenable__tracing.xhtml#a5962cf9ef390c27abb1f90b38ba4032e">   39</a></span>&#160;<span class="keyword">def </span><a class="code" href="namespaceenable__tracing.xhtml#a5962cf9ef390c27abb1f90b38ba4032e">find</a>(path, pattern):</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    matches = []</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <span class="keywordflow">for</span> root, dirnames, filenames, <span class="keywordflow">in</span> os.walk(path):</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        <span class="keywordflow">for</span> filename <span class="keywordflow">in</span> fnmatch.filter(filenames, pattern):</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;            matches.append(os.path.join(root,filename))</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <span class="keywordflow">return</span> matches</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="comment"># Returns the class name (Core or Runtime) and arguments of the given function</span></div><div class="line"><a name="l00047"></a><span class="lineno"><a class="line" href="namespaceenable__tracing.xhtml#a0d831153e80b8c69250a6cffddf50a31">   47</a></span>&#160;<span class="keyword">def </span><a class="code" href="namespaceenable__tracing.xhtml#a0d831153e80b8c69250a6cffddf50a31">get_class_and_args</a>(function):</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    decl = <span class="stringliteral">&quot; &quot;</span>.<a class="code" href="namespacearm__compute_1_1test.xhtml#aa18932675cbb5eb9c9dbf8ff4d7106c7">join</a>(function_signature)</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    m = re.match(<span class="stringliteral">&quot;void ([^:]+)::configure\(([^)]*)\)&quot;</span>, decl)</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keywordflow">if</span> m:</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;            <span class="keyword">assert</span> m, <span class="stringliteral">&quot;Can&#39;t parse &#39;%s&#39;&quot;</span> % line</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;            class_name = m.group(1)</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;            args = m.group(2)</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;            <span class="comment">#Remove comments:</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;            args = re.sub(<span class="stringliteral">&quot;\/\*.*?\*\/&quot;</span>,<span class="stringliteral">&quot;&quot;</span>,args)</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;            <span class="comment">#Remove templates</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;            args = re.sub(<span class="stringliteral">&quot;&lt;.*?&gt;&quot;</span>,<span class="stringliteral">&quot;&quot;</span>,args)</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;            logger.debug(args)</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;            arg_names = []</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;            <span class="keywordflow">for</span> arg <span class="keywordflow">in</span> args.split(<span class="stringliteral">&quot;,&quot;</span>):</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                m = re.match(<span class="stringliteral">&quot;.*?([^ &amp;*]+)$&quot;</span>, arg.strip())</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                arg_names.append(m.group(1))</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                logger.debug(<span class="stringliteral">&quot;  %s&quot;</span> % m.group(1))</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;            <span class="keywordflow">return</span> (class_name, arg_names)</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="keywordflow">else</span>:</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        <span class="keywordflow">return</span> (<span class="stringliteral">&#39;&#39;</span>,<span class="stringliteral">&#39;&#39;</span>)</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="comment"># Adds the tracepoints to the source file for the given function</span></div><div class="line"><a name="l00069"></a><span class="lineno"><a class="line" href="namespaceenable__tracing.xhtml#a823c004a4346a77de31373bf686db343">   69</a></span>&#160;<span class="keyword">def </span><a class="code" href="namespaceenable__tracing.xhtml#a823c004a4346a77de31373bf686db343">do_insert_tracing</a>(source, function, fd):</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    logger.debug(<span class="stringliteral">&quot;Full signature = %s&quot;</span> % <span class="stringliteral">&quot; &quot;</span>.<a class="code" href="namespacearm__compute_1_1test.xhtml#aa18932675cbb5eb9c9dbf8ff4d7106c7">join</a>(function_signature))</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    class_name, arg_names = <a class="code" href="namespaceenable__tracing.xhtml#a0d831153e80b8c69250a6cffddf50a31">get_class_and_args</a>(function)</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="keywordflow">if</span> len(arg_names):</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        <span class="keyword">assert</span> len(arg_names), <span class="stringliteral">&quot;No argument to configure for %s ?&quot;</span> % class_name</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        spaces = re.match(<span class="stringliteral">&quot;([ ]*)void&quot;</span>, function[0]).group(1)</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        fd.write(<span class="stringliteral">&quot;%s    ARM_COMPUTE_CREATE_TRACEPOINT(%s, \&quot;%s\&quot;, this, TracePoint::Args()&quot;</span> % (spaces, source, class_name))</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        <span class="keywordflow">for</span> arg <span class="keywordflow">in</span> arg_names:</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;            fd.write(<span class="stringliteral">&quot;&lt;&lt;%s&quot;</span> % arg)</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        fd.write(<span class="stringliteral">&quot;);\n&quot;</span>)</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="keywordflow">else</span>:</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        print(<span class="stringliteral">&#39;Failed to get class name in %s &#39;</span> % <span class="stringliteral">&quot; &quot;</span>.<a class="code" href="namespacearm__compute_1_1test.xhtml#aa18932675cbb5eb9c9dbf8ff4d7106c7">join</a>(function_signature))</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="keywordflow">if</span> __name__ == <span class="stringliteral">&quot;__main__&quot;</span>:</div><div class="line"><a name="l00084"></a><span class="lineno"><a class="line" href="namespaceenable__tracing.xhtml#a90eee7a4677ca8b1ed116364a24367f9">   84</a></span>&#160;    parser = argparse.ArgumentParser(</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;            formatter_class=argparse.RawDescriptionHelpFormatter,</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;            description=<span class="stringliteral">&quot;Post process JSON benchmark files&quot;</span>,</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    )</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div><div class="line"><a name="l00089"></a><span class="lineno"><a class="line" href="namespaceenable__tracing.xhtml#a81ae9faedaa69e3e28e2960a0548df8d">   89</a></span>&#160;    parser.add_argument(<span class="stringliteral">&quot;-D&quot;</span>, <span class="stringliteral">&quot;--debug&quot;</span>, action=<span class="stringliteral">&#39;store_true&#39;</span>, help=<span class="stringliteral">&quot;Enable script debugging output&quot;</span>)</div><div class="line"><a name="l00090"></a><span class="lineno"><a class="line" href="namespaceenable__tracing.xhtml#a8187411843a6284ffb964ef3fb9fcab3">   90</a></span>&#160;    args = parser.parse_args()</div><div class="line"><a name="l00091"></a><span class="lineno"><a class="line" href="namespaceenable__tracing.xhtml#a05b240734aa0ab5756d163cc6b03d6e1">   91</a></span>&#160;    logging_level = logging.INFO</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <span class="keywordflow">if</span> args.debug:</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        logging_level = logging.DEBUG</div><div class="line"><a name="l00094"></a><span class="lineno"><a class="line" href="namespaceenable__tracing.xhtml#afde8e18a788ccc92fc61cab298bca7e3">   94</a></span>&#160;    logging.basicConfig(level=logging_level)</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    logger.debug(<span class="stringliteral">&quot;Arguments passed: %s&quot;</span> % <a class="code" href="namespacecaffe__data__extractor.xhtml#a4b99ff73a8a869319570237b5c57ab03">str</a>(args.__dict__))</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <span class="keywordflow">for</span> f <span class="keywordflow">in</span> <a class="code" href="namespaceenable__tracing.xhtml#a5962cf9ef390c27abb1f90b38ba4032e">find</a>(<span class="stringliteral">&quot;src&quot;</span>,<span class="stringliteral">&quot;*.cpp&quot;</span>):</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        logger.debug(f)</div><div class="line"><a name="l00098"></a><span class="lineno"><a class="line" href="namespaceenable__tracing.xhtml#a44f21d5190b5a6df8089f54799628d7e">   98</a></span>&#160;        fd = open(f,<span class="stringliteral">&#39;r+&#39;</span>)</div><div class="line"><a name="l00099"></a><span class="lineno"><a class="line" href="namespaceenable__tracing.xhtml#a22ea78f101680108434cb132f12afa0a">   99</a></span>&#160;        lines = fd.readlines()</div><div class="line"><a name="l00100"></a><span class="lineno"><a class="line" href="namespaceenable__tracing.xhtml#a8484c0755626d48c225c7ea69cdb17c7">  100</a></span>&#160;        contains_configure = <span class="keyword">False</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        <span class="keywordflow">for</span> line <span class="keywordflow">in</span> lines:</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;            <span class="keywordflow">if</span> re.search(<span class="stringliteral">r&quot;void.*::configure\(&quot;</span>,line):</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                contains_configure = <span class="keyword">True</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;                <span class="keywordflow">break</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        <span class="keywordflow">if</span> <span class="keywordflow">not</span> contains_configure:</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;            <span class="keywordflow">continue</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        fd.seek(0)</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        fd.truncate()</div><div class="line"><a name="l00109"></a><span class="lineno"><a class="line" href="namespaceenable__tracing.xhtml#a69e36b9846495f83905bd4564f924f51">  109</a></span>&#160;        function_signature = <span class="keywordtype">None</span></div><div class="line"><a name="l00110"></a><span class="lineno"><a class="line" href="namespaceenable__tracing.xhtml#aaac11f0b62dff26adee07b1c338aac69">  110</a></span>&#160;        insert_tracing = <span class="keyword">False</span></div><div class="line"><a name="l00111"></a><span class="lineno"><a class="line" href="namespaceenable__tracing.xhtml#ab376b87f96a574a793c03c53e75afec8">  111</a></span>&#160;        start = <span class="keyword">True</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        <span class="keywordflow">for</span> line <span class="keywordflow">in</span> lines:</div><div class="line"><a name="l00113"></a><span class="lineno"><a class="line" href="namespaceenable__tracing.xhtml#ab4d8d1259f524270d625ab8933700d27">  113</a></span>&#160;            write = <span class="keyword">True</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;            <span class="keywordflow">if</span> start:</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                <span class="keywordflow">if</span> <span class="keywordflow">not</span> (line.startswith(<span class="stringliteral">&quot;/*&quot;</span>) <span class="keywordflow">or</span> line.startswith(<span class="stringliteral">&quot; *&quot;</span>) <span class="keywordflow">or</span> line.startswith(<span class="stringliteral">&quot;#&quot;</span>) <span class="keywordflow">or</span> len(line.strip()) == 0):</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                    start = <span class="keyword">False</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                    fd.write(<span class="stringliteral">&quot;#include \&quot;arm_compute/core/TracePoint.h\&quot;\n&quot;</span>)</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;            <span class="keywordflow">elif</span> <span class="keywordflow">not</span> function_signature:</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                <span class="keywordflow">if</span> re.search(<span class="stringliteral">r&quot;void.*::configure\(&quot;</span>,line):</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                    function_signature = [ line.rstrip() ]</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;            <span class="keywordflow">else</span>:</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;                <span class="keywordflow">if</span> re.search(<span class="stringliteral">&quot;[ ]*{$&quot;</span>, line):</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;                    insert_tracing = <span class="keyword">True</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                <span class="keywordflow">else</span>:</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                    function_signature.append(line.rstrip())</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;            <span class="keywordflow">if</span> write:</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                fd.write(line)</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;            <span class="keywordflow">if</span> insert_tracing:</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                <span class="keywordflow">if</span> <span class="stringliteral">&quot;/core/&quot;</span> <span class="keywordflow">in</span> f:</div><div class="line"><a name="l00130"></a><span class="lineno"><a class="line" href="namespaceenable__tracing.xhtml#a0ee5ba0b4495e9f348db3a0c7d5c6e36">  130</a></span>&#160;                    source = <span class="stringliteral">&quot;TracePoint::Layer::CORE&quot;</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                <span class="keywordflow">elif</span> <span class="stringliteral">&quot;/runtime/&quot;</span> <span class="keywordflow">in</span> f:</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;                    source = <span class="stringliteral">&quot;TracePoint::Layer::RUNTIME&quot;</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                <span class="keywordflow">else</span>:</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                    <span class="keyword">assert</span> <span class="stringliteral">&quot;Can&#39;t find layer for file %s&quot;</span> %f</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;                <a class="code" href="namespaceenable__tracing.xhtml#a823c004a4346a77de31373bf686db343">do_insert_tracing</a>(source, function_signature, fd)</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;                insert_tracing = <span class="keyword">False</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;                function_signature = <span class="keywordtype">None</span></div><div class="ttc" id="namespacearm__compute_1_1test_xhtml_aa18932675cbb5eb9c9dbf8ff4d7106c7"><div class="ttname"><a href="namespacearm__compute_1_1test.xhtml#aa18932675cbb5eb9c9dbf8ff4d7106c7">arm_compute::test::join</a></div><div class="ttdeci">std::string join(T first, T last, const std::string &amp;separator)</div><div class="ttdoc">Helper function to concatenate multiple strings. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2framework_2_utils_8h_source.xhtml#l00093">Utils.h:93</a></div></div>
<div class="ttc" id="namespaceenable__tracing_xhtml_a0d831153e80b8c69250a6cffddf50a31"><div class="ttname"><a href="namespaceenable__tracing.xhtml#a0d831153e80b8c69250a6cffddf50a31">enable_tracing.get_class_and_args</a></div><div class="ttdeci">def get_class_and_args(function)</div><div class="ttdef"><b>Definition:</b> <a href="enable__tracing_8py_source.xhtml#l00047">enable_tracing.py:47</a></div></div>
<div class="ttc" id="namespacecaffe__data__extractor_xhtml_a4b99ff73a8a869319570237b5c57ab03"><div class="ttname"><a href="namespacecaffe__data__extractor.xhtml#a4b99ff73a8a869319570237b5c57ab03">caffe_data_extractor.str</a></div><div class="ttdeci">str</div><div class="ttdef"><b>Definition:</b> <a href="caffe__data__extractor_8py_source.xhtml#l00019">caffe_data_extractor.py:19</a></div></div>
<div class="ttc" id="namespaceenable__tracing_xhtml_a823c004a4346a77de31373bf686db343"><div class="ttname"><a href="namespaceenable__tracing.xhtml#a823c004a4346a77de31373bf686db343">enable_tracing.do_insert_tracing</a></div><div class="ttdeci">def do_insert_tracing(source, function, fd)</div><div class="ttdef"><b>Definition:</b> <a href="enable__tracing_8py_source.xhtml#l00069">enable_tracing.py:69</a></div></div>
<div class="ttc" id="namespaceenable__tracing_xhtml_a5962cf9ef390c27abb1f90b38ba4032e"><div class="ttname"><a href="namespaceenable__tracing.xhtml#a5962cf9ef390c27abb1f90b38ba4032e">enable_tracing.find</a></div><div class="ttdeci">def find(path, pattern)</div><div class="ttdef"><b>Definition:</b> <a href="enable__tracing_8py_source.xhtml#l00039">enable_tracing.py:39</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_53e6fa9553ac22a5646d2a2b2d7b97a1.xhtml">scripts</a></li><li class="navelem"><a class="el" href="enable__tracing_8py.xhtml">enable_tracing.py</a></li>
    <li class="footer">Generated on Thu Feb 25 2021 17:17:33 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
